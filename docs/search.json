[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DataFrame-Cookbook",
    "section": "",
    "text": "Video Game Data Visualization\n\n\n\n\n\n\ndataframe\n\n\nvisualization\n\n\njulia\n\n\n\n\n\n\n\n\n\nDec 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nDataFrameMeta\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nDataFrame xor table\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\nanova\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nusing DataFrame construct cotingencytable\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nDataFrame combine function\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\ndataset feature transformation\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nDataFrame two-way-table\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\nanova\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nDataFramesMeta Tutorial\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nSep 11, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/two-way-table/index.html",
    "href": "posts/two-way-table/index.html",
    "title": "DataFrame two-way-table",
    "section": "",
    "text": "Note\n\n\n\n生成 two-way-table\n\n使用unstack方法生成双向表\n使用combine 方法添加列\n使用insert 方法添加行\n\n\n\n\ninclude(\"../utils.jl\")\nusing  RCall\nusing  GLMakie,DataFrames,Pipe,PrettyTables\nusing  StatsBase,TableTransforms,Random,TimeSeries,Dates\nRandom.seed!(34343)\n\nTaskLocalRNG()\n\n\n\n1. load data\n\n desc=Stat2Table(1431,\"FranticFingers\",\"stock time series\",[\"Date\", \"Price\", \"Change\", \"Volume\"])\n data=@pipe load_rda(desc.name)\n display(first(data,5))\n\n5×4 DataFrame\n\n\n\nRow\nID\nRate\nSubj\nDrug\n\n\n\nInt32\nInt32\nCat…\nCat…\n\n\n\n\n1\n1\n11\nA\nPl\n\n\n2\n2\n56\nB\nPl\n\n\n3\n3\n15\nC\nPl\n\n\n4\n4\n6\nD\nPl\n\n\n5\n5\n26\nA\nCa\n\n\n\n\n\n\n\n\n2. two-way-table\n:Subj 做为列, :Drug 作为行,  :Rate 是值\n\ntwoway_table=unstack(data,:Subj,:Drug,:Rate)\n\n4×4 DataFrame\n\n\n\nRow\nSubj\nPl\nCa\nTh\n\n\n\nCat…\nInt32?\nInt32?\nInt32?\n\n\n\n\n1\nA\n11\n26\n20\n\n\n2\nB\n56\n83\n71\n\n\n3\nC\n15\n34\n41\n\n\n4\nD\n6\n13\n32\n\n\n\n\n\n\n\n\n3. add :Ave Col\n\ntwt=combine(twoway_table,:,[:Pl,:Ca,:Th]=&gt;((a,b,c)-&gt;mean([a,b,c]))=&gt;:Ave)\n\n4×5 DataFrame\n\n\n\nRow\nSubj\nPl\nCa\nTh\nAve\n\n\n\nCat…\nInt32?\nInt32?\nInt32?\nFloat64\n\n\n\n\n1\nA\n11\n26\n20\n19.0\n\n\n2\nB\n56\n83\n71\n70.0\n\n\n3\nC\n15\n34\n41\n30.0\n\n\n4\nD\n6\n13\n32\n17.0\n\n\n\n\n\n\n\n\n4. insert Ave Row\n\ninsert!(twt, 5 ,[\"Ave\",mean.(eachcol(twt)[2:end])...])\n\n5×5 DataFrame\n\n\n\nRow\nSubj\nPl\nCa\nTh\nAve\n\n\n\nCat…\nInt32?\nInt32?\nInt32?\nFloat64\n\n\n\n\n1\nA\n11\n26\n20\n19.0\n\n\n2\nB\n56\n83\n71\n70.0\n\n\n3\nC\n15\n34\n41\n30.0\n\n\n4\nD\n6\n13\n32\n17.0\n\n\n5\nAve\n22\n39\n41\n34.0"
  },
  {
    "objectID": "posts/transformation/index.html",
    "href": "posts/transformation/index.html",
    "title": "dataset feature transformation",
    "section": "",
    "text": "简介\n\n\n\nbotsonhousing-price-predicting\n对各feature做不同的变换\nfeature 参见 :Applied Multivariate Statistical Analysis | SpringerLink p51\n变换方法参见 : TableTransforms-Functional"
  },
  {
    "objectID": "posts/transformation/index.html#load-package",
    "href": "posts/transformation/index.html#load-package",
    "title": "dataset feature transformation",
    "section": "1. load package",
    "text": "1. load package\n\ninclude(\"../utils.jl\")   # import load_csv method\nusing  DataFrames,TableTransforms\nusing  Random\nRandom.seed!(34343)\n\nTaskLocalRNG()"
  },
  {
    "objectID": "posts/transformation/index.html#load-data",
    "href": "posts/transformation/index.html#load-data",
    "title": "dataset feature transformation",
    "section": "2. load data",
    "text": "2. load data\n\ndf=load_csv(\"BostonHousing\")\nfirst(df,10)\n\n10×14 DataFrame\n\n\n\nRow\ncrim\nzn\nindus\nchas\nnox\nrm\nage\ndis\nrad\ntax\nptratio\nb\nlstat\nmedv\n\n\n\nFloat64\nFloat64\nFloat64\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nInt64\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n0.00632\n18.0\n2.31\n0\n0.538\n6.575\n65.2\n4.09\n1\n296\n15.3\n396.9\n4.98\n24.0\n\n\n2\n0.02731\n0.0\n7.07\n0\n0.469\n6.421\n78.9\n4.9671\n2\n242\n17.8\n396.9\n9.14\n21.6\n\n\n3\n0.02729\n0.0\n7.07\n0\n0.469\n7.185\n61.1\n4.9671\n2\n242\n17.8\n392.83\n4.03\n34.7\n\n\n4\n0.03237\n0.0\n2.18\n0\n0.458\n6.998\n45.8\n6.0622\n3\n222\n18.7\n394.63\n2.94\n33.4\n\n\n5\n0.06905\n0.0\n2.18\n0\n0.458\n7.147\n54.2\n6.0622\n3\n222\n18.7\n396.9\n5.33\n36.2\n\n\n6\n0.02985\n0.0\n2.18\n0\n0.458\n6.43\n58.7\n6.0622\n3\n222\n18.7\n394.12\n5.21\n28.7\n\n\n7\n0.08829\n12.5\n7.87\n0\n0.524\n6.012\n66.6\n5.5605\n5\n311\n15.2\n395.6\n12.43\n22.9\n\n\n8\n0.14455\n12.5\n7.87\n0\n0.524\n6.172\n96.1\n5.9505\n5\n311\n15.2\n396.9\n19.15\n27.1\n\n\n9\n0.21124\n12.5\n7.87\n0\n0.524\n5.631\n100.0\n6.0821\n5\n311\n15.2\n386.63\n29.93\n16.5\n\n\n10\n0.17004\n12.5\n7.87\n0\n0.524\n6.004\n85.9\n6.5921\n5\n311\n15.2\n386.71\n17.1\n18.9"
  },
  {
    "objectID": "posts/transformation/index.html#tranformation",
    "href": "posts/transformation/index.html#tranformation",
    "title": "dataset feature transformation",
    "section": "3. tranformation",
    "text": "3. tranformation\n\ntable=(eachcol(df))|&gt;Functional(\n                  1=&gt;log,\n                  2=&gt;x-&gt;x/10,\n                  3=&gt;log,\n                  4=&gt;x-&gt;x,\n                  5=&gt;log,\n                  6=&gt;log,\n                  7=&gt;x-&gt;(x^2.5)/10000,\n                  8=&gt;log,\n                  9=&gt;log,\n                  10=&gt;log,\n                  11=&gt;x-&gt;exp(0.4*x)/1000,\n                  12=&gt;x-&gt;x/100,\n                  13=&gt;x-&gt;sqrt(x),\n                  14=&gt;log\n)\n\nfirst(table,10)\n\n10×14 DataFrame\n\n\n\nRow\ncrim\nzn\nindus\nchas\nnox\nrm\nage\ndis\nrad\ntax\nptratio\nb\nlstat\nmedv\n\n\n\nFloat64\nFloat64\nFloat64\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n-5.06404\n1.8\n0.837248\n0\n-0.619897\n1.88327\n3.43257\n1.40854\n0.0\n5.69036\n0.454865\n3.969\n2.23159\n3.17805\n\n\n2\n-3.6005\n0.0\n1.95586\n0\n-0.757153\n1.85957\n5.52958\n1.60284\n0.693147\n5.48894\n1.23645\n3.969\n3.02324\n3.07269\n\n\n3\n-3.60123\n0.0\n1.95586\n0\n-0.757153\n1.972\n2.91812\n1.60284\n0.693147\n5.48894\n1.23645\n3.9283\n2.00749\n3.54674\n\n\n4\n-3.43052\n0.0\n0.779325\n0\n-0.780886\n1.94562\n1.41959\n1.80207\n1.09861\n5.40268\n1.77224\n3.9463\n1.71464\n3.50856\n\n\n5\n-2.67292\n0.0\n0.779325\n0\n-0.780886\n1.96669\n2.16271\n1.80207\n1.09861\n5.40268\n1.77224\n3.969\n2.30868\n3.58906\n\n\n6\n-3.51157\n0.0\n0.779325\n0\n-0.780886\n1.86097\n2.63995\n1.80207\n1.09861\n5.40268\n1.77224\n3.9412\n2.28254\n3.3569\n\n\n7\n-2.42713\n1.25\n2.06306\n0\n-0.646264\n1.79376\n3.61981\n1.71569\n1.60944\n5.73979\n0.437029\n3.956\n3.52562\n3.13114\n\n\n8\n-1.93413\n1.25\n2.06306\n0\n-0.646264\n1.82002\n9.05333\n1.78348\n1.60944\n5.73979\n0.437029\n3.969\n4.37607\n3.29953\n\n\n9\n-1.55476\n1.25\n2.06306\n0\n-0.646264\n1.72829\n10.0\n1.80535\n1.60944\n5.73979\n0.437029\n3.8663\n5.47083\n2.80336\n\n\n10\n-1.77172\n1.25\n2.06306\n0\n-0.646264\n1.79243\n6.83885\n1.88587\n1.60944\n5.73979\n0.437029\n3.8671\n4.13521\n2.93916"
  },
  {
    "objectID": "posts/combine/index.html",
    "href": "posts/combine/index.html",
    "title": "DataFrame combine function",
    "section": "",
    "text": "using DataFrames,PrettyTables\ndf=DataFrame(a=1:3, b=4:6)\n\n3×2 DataFrame\n\n\n\nRow\na\nb\n\n\n\nInt64\nInt64\n\n\n\n\n1\n1\n4\n\n\n2\n2\n5\n\n\n3\n3\n6\n\n\n\n\n\n\n\ncombine(df, :a =&gt; sum, nrow, renamecols=false)  \n\n1×2 DataFrame\n\n\n\nRow\na\nnrow\n\n\n\nInt64\nInt64\n\n\n\n\n1\n6\n3"
  },
  {
    "objectID": "posts/xor-table/index.html",
    "href": "posts/xor-table/index.html",
    "title": "DataFrame xor table",
    "section": "",
    "text": "简介\n\n\n\n利用DataFrames.transform 方法生成 xor table\nxor 方法:Base.xor\ntransform!(df, [:A, :B] =&gt; ByRow(xor) =&gt; :AxorB)\n\n\n\nusing DataFrames,PrettyTables\nA=[0,0,1,1]\nB=[0,1,0,1]\ndf=DataFrame(A=A,B=B)\ntransform!(df, [:A, :B] =&gt; ByRow(xor) =&gt; :AxorB)\n@pt df\n\n┌───────┬───────┬───────┐\n│     A │     B │ AxorB │\n│ Int64 │ Int64 │ Int64 │\n├───────┼───────┼───────┤\n│     0 │     0 │     0 │\n│     0 │     1 │     1 │\n│     1 │     0 │     1 │\n│     1 │     1 │     0 │\n└───────┴───────┴───────┘"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/dataframes-meta.html",
    "href": "posts/dataframes-meta.html",
    "title": "DataFrameMeta",
    "section": "",
    "text": "using DataFrames,DataFramesMeta,PrettyTables,StatsBase\ndf = DataFrame(x = [1, 1, 2, 2], y = [1, 2, 101, 102]);\n@pt df\ngd = groupby(df, :x);\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     1 │     1 │\n│     1 │     2 │\n│     2 │   101 │\n│     2 │   102 │\n└───────┴───────┘"
  },
  {
    "objectID": "posts/dataframes-meta.html#load-package",
    "href": "posts/dataframes-meta.html#load-package",
    "title": "DataFrameMeta",
    "section": "",
    "text": "using DataFrames,DataFramesMeta,PrettyTables,StatsBase\ndf = DataFrame(x = [1, 1, 2, 2], y = [1, 2, 101, 102]);\n@pt df\ngd = groupby(df, :x);\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     1 │     1 │\n│     1 │     2 │\n│     2 │   101 │\n│     2 │   102 │\n└───────┴───────┘"
  },
  {
    "objectID": "posts/dataframes-meta.html#marcos",
    "href": "posts/dataframes-meta.html#marcos",
    "title": "DataFrameMeta",
    "section": "2. Marcos",
    "text": "2. Marcos\n\n2.1 @select,@select!\n\n@pt @select(df, :x, :y)\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     1 │     1 │\n│     1 │     2 │\n│     2 │   101 │\n│     2 │   102 │\n└───────┴───────┘\n\n\n\n@pt @select(df, :x2 = 2 * :x, :y)\n\n┌───────┬───────┐\n│    x2 │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     2 │     1 │\n│     2 │     2 │\n│     4 │   101 │\n│     4 │   102 │\n└───────┴───────┘\n\n\n\n\n2.2 @transform and @transform!\n\n@pt @transform(df, :x2 = 2 * :x, :y)\n\n┌───────┬───────┬───────┐\n│     x │     y │    x2 │\n│ Int64 │ Int64 │ Int64 │\n├───────┼───────┼───────┤\n│     1 │     1 │     2 │\n│     1 │     2 │     2 │\n│     2 │   101 │     4 │\n│     2 │   102 │     4 │\n└───────┴───────┴───────┘\n\n\n\n\n2.3 @subset and @subset!\n\n@pt @subset(df, :x .&gt; 1)\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     2 │   101 │\n│     2 │   102 │\n└───────┴───────┘\n\n\n\n let \n   outside_var = 1;\n   @pt @subset(df, :x .&gt; outside_var, :y .&lt; 102)\n end\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     2 │   101 │\n└───────┴───────┘\n\n\n\n@pt @subset(gd, :x .&gt; mean(:x))\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n└───────┴───────┘\n\n\n\n\n2.4 combine\n\n @pt @combine(gd, :x2 = sum(:y))\n\n┌───────┬───────┐\n│     x │    x2 │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     1 │     3 │\n│     2 │   203 │\n└───────┴───────┘\n\n\n\n\n2.5 orderby\n\n @pt @orderby(df, :x)\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     1 │     1 │\n│     1 │     2 │\n│     2 │   101 │\n│     2 │   102 │\n└───────┴───────┘\n\n\n\n @pt @orderby(df, -1. * :x)\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     2 │   101 │\n│     2 │   102 │\n│     1 │     1 │\n│     1 │     2 │\n└───────┴───────┘"
  },
  {
    "objectID": "posts/contingencytable/index.html",
    "href": "posts/contingencytable/index.html",
    "title": "using DataFrame construct cotingencytable",
    "section": "",
    "text": "Note\n\n\n\ncotingencytable是理解和研究条件概率的工具\n\nref:\n列联表(双向表,cotingencytable,two-way table),是研究两个变量 不同水平(变量取值)之间相互关系的图表展示方法\n表中最大行和最大列是边缘分布\n表中单元格取值是两个变量的联合分布\n手动输入可以使用:\ninclude(\"../utils.jl\")\nusing  DataFrames\nusing  Random\nRandom.seed!(34343)\n\nTaskLocalRNG()"
  },
  {
    "objectID": "posts/contingencytable/index.html#load-data",
    "href": "posts/contingencytable/index.html#load-data",
    "title": "using DataFrame construct cotingencytable",
    "section": "1. load data",
    "text": "1. load data\n\n desc=Stat2Table(0,\"flavor_preference\",\"icecream flavor\",[])\n data=@pipe load_csv(desc.name)\n show(first(data,10))\n\n6×4 DataFrame\n Row │ Gender   Flavor      Frequency  Row%    \n     │ String7  String15    Int64      Float64 \n─────┼─────────────────────────────────────────\n   1 │ Female   Chocolate          37     56.0\n   2 │ Female   Strawberry         17     25.8\n   3 │ Female   Vanilla            12     18.2\n   4 │ Male     Chocolate          21     29.6\n   5 │ Male     Strawberry         18     25.4\n   6 │ Male     Vanilla            32     45.0"
  },
  {
    "objectID": "posts/contingencytable/index.html#two-way-table",
    "href": "posts/contingencytable/index.html#two-way-table",
    "title": "using DataFrame construct cotingencytable",
    "section": "2. two-way-table",
    "text": "2. two-way-table\n:Gender 做为列, :Flavour 作为行,  :Frequency 是值\n\ntwoway_table=unstack(data,:Gender,:Flavor,:Frequency)\n\n2×4 DataFrame\n\n\n\nRow\nGender\nChocolate\nStrawberry\nVanilla\n\n\n\nString7\nInt64?\nInt64?\nInt64?\n\n\n\n\n1\nFemale\n37\n17\n12\n\n\n2\nMale\n21\n18\n32"
  },
  {
    "objectID": "posts/contingencytable/index.html#add-total-col",
    "href": "posts/contingencytable/index.html#add-total-col",
    "title": "using DataFrame construct cotingencytable",
    "section": "3. add :Total Col",
    "text": "3. add :Total Col\n\ntwt=combine(twoway_table,:,[:Chocolate,:Strawberry,:Vanilla]=&gt;((a,b,c)-&gt;sum([a,b,c]))=&gt;:Total)\n\n2×5 DataFrame\n\n\n\nRow\nGender\nChocolate\nStrawberry\nVanilla\nTotal\n\n\n\nString7\nInt64?\nInt64?\nInt64?\nInt64\n\n\n\n\n1\nFemale\n37\n17\n12\n66\n\n\n2\nMale\n21\n18\n32\n71"
  },
  {
    "objectID": "posts/contingencytable/index.html#add-total-row",
    "href": "posts/contingencytable/index.html#add-total-row",
    "title": "using DataFrame construct cotingencytable",
    "section": "4. add :Total Row",
    "text": "4. add :Total Row\n\ninsert!(twt, 3 ,[\"Total\",sum.(eachcol(twt)[2:end])...])\n\n3×5 DataFrame\n\n\n\nRow\nGender\nChocolate\nStrawberry\nVanilla\nTotal\n\n\n\nString7\nInt64?\nInt64?\nInt64?\nInt64\n\n\n\n\n1\nFemale\n37\n17\n12\n66\n\n\n2\nMale\n21\n18\n32\n71\n\n\n3\nTotal\n58\n35\n44\n137\n\n\n\n\n\n\n\n5. read table\n建立表格后,就可以用来计算条件概率,按照dataframe的行列读取方式\n\n\n5.1 边缘概率\n统计参加试验的女性总人数\n\n \"参加实验的女性总人数\"=&gt;twt[1,:Total]\n\n\"参加实验的女性总人数\" =&gt; 66\n\n\n计算试验中喜欢巧克力口味冰激凌的总人数\n\n \"喜欢巧克力冰激凌总人数\"=&gt;twt[3,:Chocolate]\n\n\"喜欢巧克力冰激凌总人数\" =&gt; 58\n\n\n参加试验的总数\n\n\"参加试验的总数\"=&gt;twt[3,:Total]\n\n\"参加试验的总数\" =&gt; 137"
  },
  {
    "objectID": "posts/videogame-analysis/index.html",
    "href": "posts/videogame-analysis/index.html",
    "title": "Video Game Data Visualization",
    "section": "",
    "text": "简介\n\n\n\nref :Video games sales analysis and visualization"
  },
  {
    "objectID": "posts/videogame-analysis/index.html#load-package",
    "href": "posts/videogame-analysis/index.html#load-package",
    "title": "Video Game Data Visualization",
    "section": "1. load package",
    "text": "1. load package\n\ninclude(\"../utils.jl\")   # import load_csv method\nRandom.seed!(34343)\n\nTaskLocalRNG()"
  },
  {
    "objectID": "posts/videogame-analysis/index.html#dataprocessing",
    "href": "posts/videogame-analysis/index.html#dataprocessing",
    "title": "Video Game Data Visualization",
    "section": "2. dataprocessing",
    "text": "2. dataprocessing\n\n2.1 load data\n\nraw_data=load_csv(\"vgsales\",false)\n@info \"size\"=&gt;size(raw_data)\nfirst(raw_data,10)\n\n[ Info: \"size\" =&gt; (16598, 11)\n\n\n10×11 DataFrame\n\n\n\nRow\nRank\nName\nPlatform\nYear\nGenre\nPublisher\nNA_Sales\nEU_Sales\nJP_Sales\nOther_Sales\nGlobal_Sales\n\n\n\nInt64\nString\nString7\nString7\nString15\nString\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n1\nWii Sports\nWii\n2006\nSports\nNintendo\n41.49\n29.02\n3.77\n8.46\n82.74\n\n\n2\n2\nSuper Mario Bros.\nNES\n1985\nPlatform\nNintendo\n29.08\n3.58\n6.81\n0.77\n40.24\n\n\n3\n3\nMario Kart Wii\nWii\n2008\nRacing\nNintendo\n15.85\n12.88\n3.79\n3.31\n35.82\n\n\n4\n4\nWii Sports Resort\nWii\n2009\nSports\nNintendo\n15.75\n11.01\n3.28\n2.96\n33.0\n\n\n5\n5\nPokemon Red/Pokemon Blue\nGB\n1996\nRole-Playing\nNintendo\n11.27\n8.89\n10.22\n1.0\n31.37\n\n\n6\n6\nTetris\nGB\n1989\nPuzzle\nNintendo\n23.2\n2.26\n4.22\n0.58\n30.26\n\n\n7\n7\nNew Super Mario Bros.\nDS\n2006\nPlatform\nNintendo\n11.38\n9.23\n6.5\n2.9\n30.01\n\n\n8\n8\nWii Play\nWii\n2006\nMisc\nNintendo\n14.03\n9.2\n2.93\n2.85\n29.02\n\n\n9\n9\nNew Super Mario Bros. Wii\nWii\n2009\nPlatform\nNintendo\n14.59\n7.06\n4.7\n2.26\n28.62\n\n\n10\n10\nDuck Hunt\nNES\n1984\nShooter\nNintendo\n26.93\n0.63\n0.28\n0.47\n28.31\n\n\n\n\n\n\n\n\n2.2 features to lowercase\n\n#raw_features=names(raw_data)\n data=@pipe  names(raw_data)|&gt;lowercase.(_)|&gt;rename(raw_data,_)\n first(data,1)\n\n1×11 DataFrame\n\n\n\nRow\nrank\nname\nplatform\nyear\ngenre\npublisher\nna_sales\neu_sales\njp_sales\nother_sales\nglobal_sales\n\n\n\nInt64\nString\nString7\nString7\nString15\nString\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n1\nWii Sports\nWii\n2006\nSports\nNintendo\n41.49\n29.02\n3.77\n8.46\n82.74\n\n\n\n\n\n\n\n\n2.3 describe dataframe\n\ndescribe(data)\n\n11×7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion…\nAny\nUnion…\nAny\nInt64\nDataType\n\n\n\n\n1\nrank\n8300.61\n1\n8300.5\n16600\n0\nInt64\n\n\n2\nname\n\n'98 Koshien\n\n¡Shin Chan Flipa en colores!\n0\nString\n\n\n3\nplatform\n\n2600\n\nXOne\n0\nString7\n\n\n4\nyear\n\n1980\n\nN/A\n0\nString7\n\n\n5\ngenre\n\nAction\n\nStrategy\n0\nString15\n\n\n6\npublisher\n\n10TACLE Studios\n\nresponDESIGN\n0\nString\n\n\n7\nna_sales\n0.264667\n0.0\n0.08\n41.49\n0\nFloat64\n\n\n8\neu_sales\n0.146652\n0.0\n0.02\n29.02\n0\nFloat64\n\n\n9\njp_sales\n0.0777817\n0.0\n0.0\n10.22\n0\nFloat64\n\n\n10\nother_sales\n0.048063\n0.0\n0.01\n10.57\n0\nFloat64\n\n\n11\nglobal_sales\n0.537441\n0.01\n0.17\n82.74\n0\nFloat64\n\n\n\n\n\n\nnmissing that is great!\n\n\n2.4 data type\nRank - Ranking of overall sales, integer\nName - The games name\nPlatform - Platform of the games release (i.e. PC,PS4, etc.), object\nYear - Year of the game’s release, float\nGenre - Genre of the game ,object\nPublisher - Publisher of the game, object\nNA_Sales - Sales in North America (in millions), float\nEU_Sales - Sales in Europe (in millions), float\nJP_Sales - Sales in Japan (in millions), float\nOther_Sales - Sales in the rest of the world (in millions), float\nGlobal_Sales - Total worldwide sales, float"
  },
  {
    "objectID": "posts/videogame-analysis/index.html#data-analysis",
    "href": "posts/videogame-analysis/index.html#data-analysis",
    "title": "Video Game Data Visualization",
    "section": "3. data analysis",
    "text": "3. data analysis\n\n3.1 What genre games have been made the most?\nthat is to count every genre’s game\n\ndf3_1=@pipe groupby(data,:genre)|&gt;combine(_,nrow)|&gt;rename(_,:nrow=&gt;:counts)|&gt;sort(_,:counts;rev=true)\n\n12×2 DataFrame\n\n\n\nRow\ngenre\ncounts\n\n\n\nString15\nInt64\n\n\n\n\n1\nAction\n3316\n\n\n2\nSports\n2346\n\n\n3\nMisc\n1739\n\n\n4\nRole-Playing\n1488\n\n\n5\nShooter\n1310\n\n\n6\nAdventure\n1286\n\n\n7\nRacing\n1249\n\n\n8\nPlatform\n886\n\n\n9\nSimulation\n867\n\n\n10\nFighting\n848\n\n\n11\nStrategy\n681\n\n\n12\nPuzzle\n582\n\n\n\n\n\n\n\nfunction plot_df3_1(df::AbstractDataFrame)\n    rows,_=size(df)\n    featrues=names(df)\n    fig=Figure(resolution=(500,600))\n    ax=Axis(fig[1,1],title=\"counts of game by genre\")\n    ax.yticks=(1:rows,df.genre)\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"genre\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x)\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_1(df3_1)\n\n\n\n\n\n\n\n\nso Action and Sports made most\n\n\n3.2 Which year had the most game release?\n\ndf3_2=@pipe groupby(data,:year)|&gt;combine(_,nrow)|&gt;rename(_,:nrow=&gt;:counts)|&gt;sort(_,:counts;rev=true)\n\n40×2 DataFrame15 rows omitted\n\n\n\nRow\nyear\ncounts\n\n\n\nString7\nInt64\n\n\n\n\n1\n2009\n1431\n\n\n2\n2008\n1428\n\n\n3\n2010\n1259\n\n\n4\n2007\n1202\n\n\n5\n2011\n1139\n\n\n6\n2006\n1008\n\n\n7\n2005\n941\n\n\n8\n2002\n829\n\n\n9\n2003\n775\n\n\n10\n2004\n763\n\n\n11\n2012\n657\n\n\n12\n2015\n614\n\n\n13\n2014\n582\n\n\n⋮\n⋮\n⋮\n\n\n29\n1982\n36\n\n\n30\n1986\n21\n\n\n31\n1989\n17\n\n\n32\n1983\n17\n\n\n33\n1990\n16\n\n\n34\n1987\n16\n\n\n35\n1988\n15\n\n\n36\n1985\n14\n\n\n37\n1984\n14\n\n\n38\n1980\n9\n\n\n39\n2017\n3\n\n\n40\n2020\n1\n\n\n\n\n\n\n\nfunction plot_df3_2(df::AbstractDataFrame,cat::String=\"year\")\n    @assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(500,800))\n    ax=Axis(fig[1,1],title=\"count game by year\")\n    ax.yticks=(1:rows,df[:,cat])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"$cat\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x)\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\n\nplot_df3_2(df3_2)\n\n\n\n\n\n\n\n\n\n\n3.3 Top 5 years games release by genre\n\n\n3.4 Which year had the highest sales worldwide?\n\ndf3_4=@pipe groupby(data,:year)|&gt;@combine(_,:global_sales=sum(:global_sales))|&gt;sort(_,:year;rev=true)\n\n40×2 DataFrame15 rows omitted\n\n\n\nRow\nyear\nglobal_sales\n\n\n\nString7\nFloat64\n\n\n\n\n1\nN/A\n100.08\n\n\n2\n2020\n0.29\n\n\n3\n2017\n0.05\n\n\n4\n2016\n70.93\n\n\n5\n2015\n264.44\n\n\n6\n2014\n337.05\n\n\n7\n2013\n368.11\n\n\n8\n2012\n363.54\n\n\n9\n2011\n515.99\n\n\n10\n2010\n600.45\n\n\n11\n2009\n667.3\n\n\n12\n2008\n678.9\n\n\n13\n2007\n611.13\n\n\n⋮\n⋮\n⋮\n\n\n29\n1991\n32.23\n\n\n30\n1990\n49.39\n\n\n31\n1989\n73.45\n\n\n32\n1988\n47.22\n\n\n33\n1987\n21.74\n\n\n34\n1986\n37.07\n\n\n35\n1985\n53.94\n\n\n36\n1984\n50.36\n\n\n37\n1983\n16.79\n\n\n38\n1982\n28.86\n\n\n39\n1981\n35.77\n\n\n40\n1980\n11.38\n\n\n\n\n\n\n\nfunction plot_df3_4(df::AbstractDataFrame)\n    rows=nrow(df)\n    fig=Figure(resolution=(500,700))\n    ax=Axis(fig[1,1],title=\"video game global sales\")\n    ax.yticks=(1:rows,df[:,\"year\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"year\"\n    GLMakie.barplot!(ax,1:rows,df.global_sales;color = df.global_sales, strokecolor = :black, strokewidth = 1,direction=:x)\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_4(df3_4)\n\n\n\n\n\n\n\n\n\n\n3.5 Which genre game has been released the most in a single year?\n\ndf3_5=let\n    df=@pipe groupby(data,[:year,:genre])|&gt;combine(_,nrow=&gt;:counts)|&gt;groupby(_,:year)\n    res=mapreduce(x-&gt;(sort(x,:counts;rev=true)|&gt;first|&gt;copy),vcat, df)|&gt;DataFrame\nend\n\n40×3 DataFrame15 rows omitted\n\n\n\nRow\nyear\ngenre\ncounts\n\n\n\nString7\nString15\nInt64\n\n\n\n\n1\n2006\nAction\n184\n\n\n2\n1985\nPlatform\n4\n\n\n3\n2008\nAction\n221\n\n\n4\n2009\nAction\n272\n\n\n5\n1996\nSports\n52\n\n\n6\n1989\nPuzzle\n5\n\n\n7\n1984\nRacing\n3\n\n\n8\n2005\nAction\n192\n\n\n9\n1999\nSports\n62\n\n\n10\n2007\nAction\n211\n\n\n11\n2010\nAction\n226\n\n\n12\n2013\nAction\n148\n\n\n13\n2004\nAction\n125\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n29\n1986\nPlatform\n6\n\n\n30\n2000\nSports\n81\n\n\n31\nN/A\nAction\n63\n\n\n32\n1995\nSports\n29\n\n\n33\n2016\nAction\n119\n\n\n34\n1991\nSports\n7\n\n\n35\n1981\nAction\n25\n\n\n36\n1987\nSports\n4\n\n\n37\n1980\nMisc\n4\n\n\n38\n1983\nAction\n7\n\n\n39\n2020\nSimulation\n1\n\n\n40\n2017\nRole-Playing\n2\n\n\n\n\n\n\n\n    function plot_df3_5(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(1000,900))\n    ax=Axis(fig[1,1],title=\"video game most release in single year\")\n    ax.yticks=(1:rows,df[:,\"year\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"release\"\n    ax.ylabel=\"year\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x\n    \n    )\n    for (idx, row) in enumerate(eachrow(df))\n        counts,year,genre=row.counts,row.year,row.genre\n        GLMakie.text!(ax,counts+2,idx; text=\"$genre-$year\",align = (:left, :center),fontsize=8)\n    end\n    \n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend    \n plot_df3_5(df3_5)\n\n\n\n\n\n\n\n\n\n\n3.6 Which genre game has sold the most in a single year?\n\ndf6=@pipe select(data,[:year,:genre,:global_sales])|&gt;groupby(_,[:year,:genre])|&gt;@combine(_ ,:sales= sum(:global_sales))|&gt;groupby(_,:year)|&gt;@combine(_,n1=first(:genre), n2=first(:sales))\n\n┌ Warning: Using an un-quoted Symbol on the LHS is deprecated. Write :n1 = ... instead.\n└ @ DataFramesMeta ~/.julia/packages/DataFramesMeta/nI3Y1/src/parsing.jl:373\n┌ Warning: Using an un-quoted Symbol on the LHS is deprecated. Write :n2 = ... instead.\n└ @ DataFramesMeta ~/.julia/packages/DataFramesMeta/nI3Y1/src/parsing.jl:373\n\n\n40×3 DataFrame15 rows omitted\n\n\n\nRow\nyear\nn1\nn2\n\n\n\nString7\nString15\nFloat64\n\n\n\n\n1\n2006\nSports\n136.16\n\n\n2\n1985\nSports\n1.96\n\n\n3\n2008\nSports\n95.34\n\n\n4\n2009\nSports\n138.52\n\n\n5\n1996\nSports\n17.45\n\n\n6\n1989\nSports\n5.72\n\n\n7\n1984\nSports\n6.18\n\n\n8\n2005\nSports\n59.54\n\n\n9\n1999\nSports\n30.29\n\n\n10\n2007\nSports\n98.2\n\n\n11\n2010\nSports\n92.53\n\n\n12\n2013\nSports\n41.55\n\n\n13\n2004\nSports\n63.68\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n29\n1986\nSports\n5.57\n\n\n30\n2000\nSports\n41.19\n\n\n31\nN/A\nSports\n21.69\n\n\n32\n1995\nSports\n7.98\n\n\n33\n2016\nSports\n14.6\n\n\n34\n1991\nSports\n2.41\n\n\n35\n1981\nSports\n0.79\n\n\n36\n1987\nSports\n3.72\n\n\n37\n1980\nSports\n0.49\n\n\n38\n1983\nSports\n3.2\n\n\n39\n2020\nSimulation\n0.29\n\n\n40\n2017\nRole-Playing\n0.04\n\n\n\n\n\n\n\n\n3.7 Which genre game have the highest sale price globally?\n\ndf3_7=@pipe groupby(data,[:genre])|&gt;@combine(_,:sales=sum(:global_sales))|&gt;sort(_,:sales;rev=true)\n\n12×2 DataFrame\n\n\n\nRow\ngenre\nsales\n\n\n\nString15\nFloat64\n\n\n\n\n1\nAction\n1751.18\n\n\n2\nSports\n1330.93\n\n\n3\nShooter\n1037.37\n\n\n4\nRole-Playing\n927.37\n\n\n5\nPlatform\n831.37\n\n\n6\nMisc\n809.96\n\n\n7\nRacing\n732.04\n\n\n8\nFighting\n448.91\n\n\n9\nSimulation\n392.2\n\n\n10\nPuzzle\n244.95\n\n\n11\nAdventure\n239.04\n\n\n12\nStrategy\n175.12\n\n\n\n\n\n\n\nfunction plot_df3_7(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,500))\n    ax=Axis(fig[1,1],title=\"video game sales champion by genre\")\n    ax.yticks=(1:rows,df[:,\"genre\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"genre\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,direction=:x,\n    bar_labels=:y )\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_7(df3_7)\n\n\n\n\n\n\n\n\n\n\n3.8 Which platfrom have the highest sale price globally?\n\ndf3_8=@pipe groupby(data,[\"platform\"])|&gt;@combine(_,:sales=sum(:global_sales))|&gt;sort(_,:sales;rev=true)\n\n31×2 DataFrame6 rows omitted\n\n\n\nRow\nplatform\nsales\n\n\n\nString7\nFloat64\n\n\n\n\n1\nPS2\n1255.64\n\n\n2\nX360\n979.96\n\n\n3\nPS3\n957.84\n\n\n4\nWii\n926.71\n\n\n5\nDS\n822.49\n\n\n6\nPS\n730.66\n\n\n7\nGBA\n318.5\n\n\n8\nPSP\n296.28\n\n\n9\nPS4\n278.1\n\n\n10\nPC\n258.82\n\n\n11\nXB\n258.26\n\n\n12\nGB\n255.45\n\n\n13\nNES\n251.07\n\n\n⋮\n⋮\n⋮\n\n\n20\nWiiU\n81.86\n\n\n21\nPSV\n61.93\n\n\n22\nSAT\n33.59\n\n\n23\nGEN\n28.36\n\n\n24\nDC\n15.97\n\n\n25\nSCD\n1.87\n\n\n26\nNG\n1.44\n\n\n27\nWS\n1.42\n\n\n28\nTG16\n0.16\n\n\n29\n3DO\n0.1\n\n\n30\nGG\n0.04\n\n\n31\nPCFX\n0.03\n\n\n\n\n\n\n\nfunction plot_df3_8(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(600,800))\n    ax=Axis(fig[1,1],title=\"video game sales by Platform\")\n    ax.yticks=(1:rows,df[:,\"platform\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"platform\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,direction=:x,\n    bar_labels=:y )\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\n\nplot_df3_8(df3_8)\n\n\n\n\n\n\n\n\n\n\n3.9 Which individual game have the highest sale price globally?\n\ndf3_9=@pipe sort(data,:global_sales;rev=true)|&gt;select(_,[\"name\",\"year\",\"global_sales\"])|&gt;first(_,20)\n\n20×3 DataFrame\n\n\n\nRow\nname\nyear\nglobal_sales\n\n\n\nString\nString7\nFloat64\n\n\n\n\n1\nWii Sports\n2006\n82.74\n\n\n2\nSuper Mario Bros.\n1985\n40.24\n\n\n3\nMario Kart Wii\n2008\n35.82\n\n\n4\nWii Sports Resort\n2009\n33.0\n\n\n5\nPokemon Red/Pokemon Blue\n1996\n31.37\n\n\n6\nTetris\n1989\n30.26\n\n\n7\nNew Super Mario Bros.\n2006\n30.01\n\n\n8\nWii Play\n2006\n29.02\n\n\n9\nNew Super Mario Bros. Wii\n2009\n28.62\n\n\n10\nDuck Hunt\n1984\n28.31\n\n\n11\nNintendogs\n2005\n24.76\n\n\n12\nMario Kart DS\n2005\n23.42\n\n\n13\nPokemon Gold/Pokemon Silver\n1999\n23.1\n\n\n14\nWii Fit\n2007\n22.72\n\n\n15\nWii Fit Plus\n2009\n22.0\n\n\n16\nKinect Adventures!\n2010\n21.82\n\n\n17\nGrand Theft Auto V\n2013\n21.4\n\n\n18\nGrand Theft Auto: San Andreas\n2004\n20.81\n\n\n19\nSuper Mario World\n1990\n20.61\n\n\n20\nBrain Age: Train Your Brain in Minutes a Day\n2005\n20.22\n\n\n\n\n\n\n\nfunction plot_top20_game(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,800))\n    ax=Axis(fig[1,1],title=\"global sales top 20\")\n    ax.yticks=(1:rows,df[:,\"name\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"name\"\n    GLMakie.barplot!(ax,1:rows,df.global_sales;color = df.global_sales, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        name,year,sales=row.name,row.year,row.global_sales\n        GLMakie.text!(ax,sales+2,idx; text=\"$year-$sales\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_top20_game(df3_9)\n\n\n\n\n\n\n\n\n\n\n3.10 Sales compearison by genre\n\ndf3_10=@pipe select(data,[:genre,:na_sales,:eu_sales,:jp_sales,:other_sales])|&gt;groupby(_,:genre)|&gt;@combine(_,$AsTable = (na_sales = sum(:na_sales), eu_sales = sum(:eu_sales),jp_sales=sum(:jp_sales),other_sales=sum(:other_sales)))\n\n12×5 DataFrame\n\n\n\nRow\ngenre\nna_sales\neu_sales\njp_sales\nother_sales\n\n\n\nString15\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nSports\n683.35\n376.85\n135.37\n134.97\n\n\n2\nPlatform\n447.05\n201.63\n130.77\n51.59\n\n\n3\nRacing\n359.42\n238.39\n56.69\n77.27\n\n\n4\nRole-Playing\n327.28\n188.06\n352.31\n59.61\n\n\n5\nPuzzle\n123.78\n50.78\n57.31\n12.55\n\n\n6\nMisc\n410.24\n215.98\n107.76\n75.32\n\n\n7\nShooter\n582.6\n313.27\n38.28\n102.69\n\n\n8\nSimulation\n183.31\n113.38\n63.7\n31.52\n\n\n9\nAction\n877.83\n525.0\n159.95\n187.38\n\n\n10\nFighting\n223.59\n101.32\n87.35\n36.68\n\n\n11\nAdventure\n105.8\n64.13\n52.07\n16.81\n\n\n12\nStrategy\n68.7\n45.34\n49.46\n11.36\n\n\n\n\n\n\n\nfunction plot_df3_10_heatmap(df::AbstractDataFrame)\n    genre=df.genre\n    data=@pipe select(df,Not(:genre))\n    row,col=size(data)\n    ma=@pipe Matrix(data)|&gt;round.(_,digits=1)\n    fig=Figure(resolution=(1000,400))\n    ax=Axis(fig[1,1],title=\"video game sales heatmap\")\n    ax.yticks=(1:col,names(data))\n    ax.xticks=(1:row,genre)\n    heatmap!(ax,ma)\n    [GLMakie.text!(ax,i,j;text=\"$(ma[i,j])\",align = (:center, :center),fontsize=12,color=:white) for i in 1:row,j in 1:col]\n\n    fig\nend\nplot_df3_10_heatmap(df3_10)\n\n\n\n\n\n\n\n\n\nres10=@pipe df3_10|&gt;select(_,Not(:genre))|&gt;Matrix|&gt;permutedims|&gt;reshape(_,(48,1))|&gt;_[:,1]\ncats=@pipe df3_10|&gt;select(_,Not(:genre))|&gt;names\ntype_name=df3_10.genre\ngrp=repeat(1:4, 12)\ngrp_x=repeat(1:12,inner=4)\ncolors = cgrad(:tab10)\nfunction plot_df3_10_bardodge()\n    fig=Figure(resolution=(1000,600))\n    ax=Axis(fig[1,1],title=\"video game sales  barplot dodge\",xticklabelrotation = pi/8)\n    ax.xticks=(1:12,type_name)\n    GLMakie.barplot!(ax,grp_x,res10; dodge =grp,color=colors[grp],strokecolor = :black, strokewidth = 1,bar_labels = :y,label_rotation=1/2*pi)\n    labels = [\"$i\" for i in cats]\n    elements = [PolyElement(polycolor = colors[i]) for (i,c) in enumerate(cats)]\n   Legend(fig[1,2], elements, labels, \"sales region\", orientation=:vertical, tellwidth = true, tellheight =false)\n    fig\nend\nplot_df3_10_bardodge()\n\n\n\n\n\n\n\n\n\n\n3.11 Sales compearison by platform\n\ndf3_11=@pipe select(data,[:platform,:na_sales,:eu_sales,:jp_sales,:other_sales,:genre])|&gt;groupby(_,:platform)|&gt;@combine(_,$AsTable = (na_sales = sum(:na_sales), eu_sales = sum(:eu_sales),jp_sales=sum(:jp_sales),other_sales=sum(:other_sales)))\n\n31×5 DataFrame6 rows omitted\n\n\n\nRow\nplatform\nna_sales\neu_sales\njp_sales\nother_sales\n\n\n\nString7\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nWii\n507.71\n268.38\n69.35\n80.61\n\n\n2\nNES\n125.94\n21.15\n98.65\n5.31\n\n\n3\nGB\n114.32\n47.82\n85.12\n8.2\n\n\n4\nDS\n390.71\n194.65\n175.57\n60.53\n\n\n5\nX360\n601.05\n280.58\n12.43\n85.54\n\n\n6\nPS3\n392.26\n343.71\n79.99\n141.93\n\n\n7\nPS2\n583.84\n339.29\n139.2\n193.44\n\n\n8\nSNES\n61.23\n19.04\n116.55\n3.22\n\n\n9\nGBA\n187.54\n75.25\n47.33\n7.73\n\n\n10\n3DS\n78.87\n58.52\n97.35\n12.63\n\n\n11\nPS4\n96.8\n123.7\n14.3\n43.36\n\n\n12\nN64\n139.02\n41.06\n34.22\n4.38\n\n\n13\nPS\n336.51\n213.6\n139.82\n40.91\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n20\nWiiU\n38.32\n24.23\n12.79\n6.45\n\n\n21\nGEN\n19.27\n5.52\n2.67\n0.89\n\n\n22\nDC\n5.43\n1.69\n8.56\n0.27\n\n\n23\nPSV\n16.2\n16.33\n20.96\n8.45\n\n\n24\nSAT\n0.72\n0.54\n32.26\n0.07\n\n\n25\nSCD\n1.0\n0.36\n0.45\n0.05\n\n\n26\nWS\n0.0\n0.0\n1.42\n0.0\n\n\n27\nNG\n0.0\n0.0\n1.44\n0.0\n\n\n28\nTG16\n0.0\n0.0\n0.16\n0.0\n\n\n29\n3DO\n0.0\n0.0\n0.1\n0.0\n\n\n30\nGG\n0.0\n0.0\n0.04\n0.0\n\n\n31\nPCFX\n0.0\n0.0\n0.03\n0.0\n\n\n\n\n\n\n\nlet\n    res11 = @pipe df3_11 |&gt; select(_, Not(:platform)) |&gt; Matrix |&gt; permutedims |&gt; reshape(_, (124, 1)) |&gt; _[:, 1]\n    cats = @pipe df3_11 |&gt; select(_, Not(:platform)) |&gt; names\n    type_name = df3_11.platform\n    grp = repeat(1:4, 31)\n    grp_x = repeat(1:31, inner=4)\n    colors = cgrad(:tab10)\n\n    function plot_platform_dodge()\n        fig = Figure(resolution=(1800, 600))\n        ax = Axis(fig[1, 1], title=\"video game sales by platform\", xticklabelrotation=pi / 8)\n        ax.xticks = (1:31, type_name)\n        GLMakie.barplot!(ax, grp_x, res11; dodge=grp, color=colors[grp], strokecolor=:black, strokewidth=1, bar_labels=:y, label_rotation=1 / 2 * pi)\n        labels = [\"$i\" for i in cats]\n        elements = [PolyElement(polycolor=colors[i]) for (i, c) in enumerate(cats)]\n        Legend(fig[1, 2], elements, labels, \"sales region\", orientation=:vertical, tellwidth=true, tellheight=false)\n        fig\n    end\n\n   plot_platform_dodge()\nend\n\n\n\n\n\n\n\n\n\n\n3.12 Top 20 Publisher\n\ndf3_12=@pipe groupby(data,[:publisher])|&gt;combine(_,nrow)|&gt;rename(_,:nrow=&gt;:counts)|&gt;sort(_,:counts;rev=true)|&gt;first(_,20)\n\n20×2 DataFrame\n\n\n\nRow\npublisher\ncounts\n\n\n\nString\nInt64\n\n\n\n\n1\nElectronic Arts\n1351\n\n\n2\nActivision\n975\n\n\n3\nNamco Bandai Games\n932\n\n\n4\nUbisoft\n921\n\n\n5\nKonami Digital Entertainment\n832\n\n\n6\nTHQ\n715\n\n\n7\nNintendo\n703\n\n\n8\nSony Computer Entertainment\n683\n\n\n9\nSega\n639\n\n\n10\nTake-Two Interactive\n413\n\n\n11\nCapcom\n381\n\n\n12\nAtari\n363\n\n\n13\nTecmo Koei\n338\n\n\n14\nSquare Enix\n233\n\n\n15\nWarner Bros. Interactive Entertainment\n232\n\n\n16\nDisney Interactive Studios\n218\n\n\n17\nUnknown\n203\n\n\n18\nEidos Interactive\n198\n\n\n19\nMidway Games\n198\n\n\n20\n505 Games\n192\n\n\n\n\n\n\n\nfunction plot_top20_publisher(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,800))\n    ax=Axis(fig[1,1],title=\"global sales top 20\")\n    ax.yticks=(1:rows,df[:,\"publisher\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"publiser\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        publisher,counts=row.publisher,row.counts\n        GLMakie.text!(ax,counts+2,idx; text=\"$counts\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_top20_publisher(df3_12)\n\n\n\n\n\n\n\n\n\n\n3.13 Top global sales by publisher\n\ndf3_13=@pipe groupby(data,[:publisher])|&gt;@combine(_,:sales=sum(:global_sales))|&gt;sort(_,:sales;rev=true)|&gt;first(_,20)\n\n20×2 DataFrame\n\n\n\nRow\npublisher\nsales\n\n\n\nString\nFloat64\n\n\n\n\n1\nNintendo\n1786.56\n\n\n2\nElectronic Arts\n1110.32\n\n\n3\nActivision\n727.46\n\n\n4\nSony Computer Entertainment\n607.5\n\n\n5\nUbisoft\n474.72\n\n\n6\nTake-Two Interactive\n399.54\n\n\n7\nTHQ\n340.77\n\n\n8\nKonami Digital Entertainment\n283.64\n\n\n9\nSega\n272.99\n\n\n10\nNamco Bandai Games\n254.09\n\n\n11\nMicrosoft Game Studios\n245.79\n\n\n12\nCapcom\n200.89\n\n\n13\nAtari\n157.22\n\n\n14\nWarner Bros. Interactive Entertainment\n153.89\n\n\n15\nSquare Enix\n145.18\n\n\n16\nDisney Interactive Studios\n119.96\n\n\n17\nEidos Interactive\n98.98\n\n\n18\nLucasArts\n87.34\n\n\n19\nBethesda Softworks\n82.14\n\n\n20\nMidway Games\n69.85\n\n\n\n\n\n\n\nfunction plot_df3_13(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,500))\n    ax=Axis(fig[1,1],title=\"video game sales by publisher\",yreversed=true)\n    ax.yticks=(1:rows,df[:,\"publisher\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"pubhisher\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        sales=round(row.sales,digits=2)\n        GLMakie.text!(ax,sales+2,idx; text=\"$(sales)\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_13(df3_13)\n\n\n\n\n\n\n\n\n\n\n3.14 publisher comperison\n\nfeatures=[\"publisher\", \"na_sales\", \"eu_sales\", \"jp_sales\", \"other_sales\",\"global_sales\"]\ndf3_14=@pipe select(data,features)|&gt;groupby(_,:publisher)|&gt;\n@combine(_,$AsTable = (na_sales = sum(:na_sales), eu_sales = sum(:eu_sales),jp_sales=sum(:jp_sales),other_sales=sum(:other_sales)),global_sales=sum(:global_sales))|&gt;sort(_,:global_sales;rev=true)|&gt;first(_,15)\n\n┌ Warning: Using an un-quoted Symbol on the LHS is deprecated. Write :global_sales = ... instead.\n└ @ DataFramesMeta ~/.julia/packages/DataFramesMeta/nI3Y1/src/parsing.jl:373\n\n\n15×6 DataFrame\n\n\n\nRow\npublisher\nna_sales\neu_sales\njp_sales\nother_sales\nglobal_sales\n\n\n\nString\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nNintendo\n816.87\n418.74\n455.42\n95.33\n1786.56\n\n\n2\nElectronic Arts\n595.07\n371.27\n14.04\n129.77\n1110.32\n\n\n3\nActivision\n429.7\n215.53\n6.54\n75.34\n727.46\n\n\n4\nSony Computer Entertainment\n265.22\n187.72\n74.1\n80.45\n607.5\n\n\n5\nUbisoft\n253.43\n163.32\n7.5\n50.26\n474.72\n\n\n6\nTake-Two Interactive\n220.49\n118.14\n5.83\n55.24\n399.54\n\n\n7\nTHQ\n208.77\n94.73\n5.01\n32.14\n340.77\n\n\n8\nKonami Digital Entertainment\n92.16\n69.69\n91.3\n30.31\n283.64\n\n\n9\nSega\n109.4\n82.0\n57.03\n24.52\n272.99\n\n\n10\nNamco Bandai Games\n69.52\n42.63\n127.07\n14.69\n254.09\n\n\n11\nMicrosoft Game Studios\n155.35\n68.61\n3.26\n18.56\n245.79\n\n\n12\nCapcom\n78.59\n39.22\n68.08\n14.84\n200.89\n\n\n13\nAtari\n110.04\n27.12\n10.71\n9.01\n157.22\n\n\n14\nWarner Bros. Interactive Entertainment\n81.18\n53.12\n1.04\n18.56\n153.89\n\n\n15\nSquare Enix\n48.65\n32.82\n49.88\n13.89\n145.18\n\n\n\n\n\n\n\nres14 = @pipe df3_14 |&gt; select(_, Not(:publisher,:global_sales)) |&gt; Matrix |&gt; permutedims|&gt; reshape(_, (60, 1)) |&gt; _[:, 1]|&gt;round.(_,digits=2)\ncats = @pipe df3_14 |&gt; select(_, Not(:publisher,:global_sales)) |&gt; names\ntype_name = df3_14.publisher\ngrp = repeat(1:4, 15)\ngrp_x = repeat(1:15, inner=4)\ncolors = cgrad(:tab10)\nfunction plot_df3_14_bardodge()\n    fig=Figure(resolution=(1200,600))\n    ax=Axis(fig[1,1],title=\"video game sales  by publisher\",xticklabelrotation = pi/6)\n    ax.xticks=(1:15,type_name)\n    GLMakie.barplot!(ax,grp_x,res14; dodge =grp,color=colors[grp],strokecolor = :black, strokewidth = 1,bar_labels = :y,label_rotation=1/2*pi)\n    labels = [\"$i\" for i in cats]\n    elements = [PolyElement(polycolor = colors[i]) for (i,c) in enumerate(cats)]\n   Legend(fig[1,2], elements, labels, \"sales region\", orientation=:vertical, tellwidth = true, tellheight =false)\n    fig\nend\nplot_df3_14_bardodge()\n\n\n\n\n\n\n\n\n\n\n3.15 Top publisher by Count each year\n\ndf15=@pipe select(data,[:year,:publisher])|&gt;groupby(_,[:year,:publisher])|&gt;combine(_,nrow)|&gt;groupby(_,:year)\ndf3_15=DataFrame()\nfor (idx,df) in enumerate(df15)\n    local d=@pipe sort(df,:nrow;rev=true)|&gt;first\n    push!(df3_15,d)\nend\nsort!(df3_15,:nrow;rev=true)\n\n40×3 DataFrame15 rows omitted\n\n\n\nRow\nyear\npublisher\nnrow\n\n\n\nString7\nString\nInt64\n\n\n\n\n1\n2009\nActivision\n121\n\n\n2\n2008\nElectronic Arts\n120\n\n\n3\n2005\nElectronic Arts\n117\n\n\n4\n2007\nElectronic Arts\n107\n\n\n5\nN/A\nUnknown\n103\n\n\n6\n2006\nElectronic Arts\n102\n\n\n7\n2010\nActivision\n89\n\n\n8\n2002\nElectronic Arts\n88\n\n\n9\n2011\nUbisoft\n87\n\n\n10\n2004\nElectronic Arts\n86\n\n\n11\n2012\nNamco Bandai Games\n85\n\n\n12\n2003\nElectronic Arts\n85\n\n\n13\n2014\nNamco Bandai Games\n69\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n29\n1989\nNintendo\n9\n\n\n30\n1984\nNintendo\n9\n\n\n31\n1993\nNintendo\n9\n\n\n32\n1985\nNintendo\n7\n\n\n33\n1990\nNintendo\n7\n\n\n34\n1988\nNintendo\n6\n\n\n35\n1986\nNintendo\n6\n\n\n36\n1983\nNintendo\n6\n\n\n37\n1980\nActivision\n5\n\n\n38\n1987\nNintendo\n4\n\n\n39\n2017\nSega\n2\n\n\n40\n2020\nUbisoft\n1\n\n\n\n\n\n\n\nfunction plot_df3_15(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,800))\n    ax=Axis(fig[1,1],title=\"publiher champion by year\")\n    ax.yticks=(1:rows,df[:,\"year\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"name\"\n    GLMakie.barplot!(ax,1:rows,df.nrow;color = df.nrow, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        publisher,nrow,year=row.publisher,row.nrow,row.year\n        GLMakie.text!(ax,nrow+2,idx; text=\"$publisher-$nrow\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_15(df3_15)\n\n\n\n\n\n\n\n\n\n\n3.16 Total revenue by region\n\ndf3_16=@pipe select(data,[\"na_sales\", \"eu_sales\", \"jp_sales\", \"other_sales\"])|&gt;@combine(_, :sales=sum.(eachcol(_)))\ndf3_16.region=[\"na_sales\", \"eu_sales\", \"jp_sales\", \"other_sales\"]\ndf3_16\n\n4×2 DataFrame\n\n\n\nRow\nsales\nregion\n\n\n\nFloat64\nString\n\n\n\n\n1\n4392.95\nna_sales\n\n\n2\n2434.13\neu_sales\n\n\n3\n1291.02\njp_sales\n\n\n4\n797.75\nother_sales\n\n\n\n\n\n\n\nfunction plot_sales_by_region(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(500,500))\n    ax=Axis(fig[1,1],title=\"video game sales by region\")\n    ax.xticks=(1:rows,df[:,\"region\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"region\"\n    ax.ylabel=\"salse\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,bar_labels = :y)\n    # for (idx, row) in enumerate(eachrow(df))\n    #     sales=round(row.sales,digits=2)\n    #     GLMakie.text!(ax,idx,sales+100,; text=\"$(sales)\",align = (:center, :center),fontsize=12)\n    # end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_sales_by_region(df3_16)\n\n\n\n\n\n\n\n\n\nfunction plot_sales_by_region_pie(df::AbstractDataFrame)\n    \n    colors = [:yellow,:red, :purple, :green]\n    fig=Figure(resolution=(500,500))\n    ax=Axis(fig[1,1];title=\"video game sales by region\",autolimitaspect = 1)\n    GLMakie.pie!(ax, df.sales;color=colors,radius=4,inner_radius = 2,\n    strokecolor = :white,\n    strokewidth = 5)\n    labels = [\"$i\" for i in df.region]\n    elements = [PolyElement(polycolor = colors[i]) for (i,c) in enumerate(df.region)]\n    Legend(fig[1,2], elements, labels, \"sales region\", orientation=:vertical, tellwidth = true, tellheight =false)\n    GLMakie.hidedecorations!(ax,label = false)\n    fig\nend\nplot_sales_by_region_pie(df3_16)\n\n\n\n\n\n\n\n\n\n\n3.17 Sales Histogram\n\nf=log # transfromer  function \n\ndf3_18=@pipe select(data,[:na_sales,:eu_sales,:jp_sales,:other_sales,:global_sales])\n# log_df3_18=@pipe @transform(df3_18,:na_sales=f.(:na_sales),:eu_sales=f.(:eu_sales),:jp_sales=f.(:jp_sales),\n#  :other_sales=f.(:other_sales),:global_sales=f.(:global_sales)\n# )|&gt;select(_,[:na_sales,:eu_sales,:jp_sales,:other_sales,:global_sales])\n\n16598×5 DataFrame16573 rows omitted\n\n\n\nRow\nna_sales\neu_sales\njp_sales\nother_sales\nglobal_sales\n\n\n\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n41.49\n29.02\n3.77\n8.46\n82.74\n\n\n2\n29.08\n3.58\n6.81\n0.77\n40.24\n\n\n3\n15.85\n12.88\n3.79\n3.31\n35.82\n\n\n4\n15.75\n11.01\n3.28\n2.96\n33.0\n\n\n5\n11.27\n8.89\n10.22\n1.0\n31.37\n\n\n6\n23.2\n2.26\n4.22\n0.58\n30.26\n\n\n7\n11.38\n9.23\n6.5\n2.9\n30.01\n\n\n8\n14.03\n9.2\n2.93\n2.85\n29.02\n\n\n9\n14.59\n7.06\n4.7\n2.26\n28.62\n\n\n10\n26.93\n0.63\n0.28\n0.47\n28.31\n\n\n11\n9.07\n11.0\n1.93\n2.75\n24.76\n\n\n12\n9.81\n7.57\n4.13\n1.92\n23.42\n\n\n13\n9.0\n6.18\n7.2\n0.71\n23.1\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n16587\n0.0\n0.01\n0.0\n0.0\n0.01\n\n\n16588\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16589\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16590\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16591\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16592\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16593\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16594\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16595\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16596\n0.0\n0.0\n0.0\n0.0\n0.01\n\n\n16597\n0.0\n0.01\n0.0\n0.0\n0.01\n\n\n16598\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n\n\n\n\n\nfunction plot_sales_hist(df::AbstractDataFrame)\n    cats=names(df)\n    fig=Figure(resolution=(600,600))\n    for (idx, col) in enumerate(eachcol(df))\n        local ax=Axis(fig[fldmod1(idx,2)...],title=cats[idx])\n        data=@pipe filter(x-&gt;x!=0,col)|&gt;f.(_)\n        GLMakie.hist!(ax,data, color = :blue, strokewidth = 1, strokecolor = :black,label=cats[idx],normalization =:pdf)\n        density!(ax, data; color = (:green, 0.4), label = \"density\", strokewidth = 2,strokecolor=:red,npoints = 15)\n        \n    end\n    \n    fig\nend\nplot_sales_hist(df3_18)"
  },
  {
    "objectID": "posts/videogame-analysis/index.html#the-end",
    "href": "posts/videogame-analysis/index.html#the-end",
    "title": "Video Game Data Visualization",
    "section": "The End",
    "text": "The End\nThat is a exercises about julia dataframe opreation methods"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/mammalsleep/index.html",
    "href": "posts/mammalsleep/index.html",
    "title": "DataFramesMeta Tutorial",
    "section": "",
    "text": "Note\n\n\n\nmammal sleep tutorial\n\n\n\ninclude(\"../utils.jl\")\nusing  RCall\nusing  GLMakie,DataFrames,Pipe,PrettyTables,DataFramesMeta\nusing  StatsBase,TableTransforms,Random,TimeSeries,Dates\nRandom.seed!(34343)\n\nTaskLocalRNG()\n\n\n\n1. load data\n\n desc=Stat2Table(1431,\"mammals\",\"sleep in mammals\",[])\n msleep=@pipe load_rda(desc.name)\n show(first(msleep,10))\n\n10×11 DataFrame\n Row │ species                 body_wt   brain_wt  non_dreaming  dreaming   to ⋯\n     │ Cat…                    Float64   Float64   Float64?      Float64?   Fl ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ Africanelephant         6654.0      5712.0     missing    missing       ⋯\n   2 │ Africangiantpouchedrat     1.0         6.6           6.3        2.0\n   3 │ ArcticFox                  3.385      44.5     missing    missing   \n   4 │ Arcticgroundsquirrel       0.92        5.7     missing    missing   \n   5 │ Asianelephant           2547.0      4603.0           2.1        1.8     ⋯\n   6 │ Baboon                    10.55      179.5           9.1        0.7\n   7 │ Bigbrownbat                0.023       0.3          15.8        3.9\n   8 │ Braziliantapir           160.0       169.0           5.2        1.0\n   9 │ Cat                        3.3        25.6          10.9        3.6     ⋯\n  10 │ Chimpanzee                52.16      440.0           8.3        1.4\n                                                               6 columns omitted\n\n\n\n\n2. names\n\nshow(names(msleep))\n\n[\"species\", \"body_wt\", \"brain_wt\", \"non_dreaming\", \"dreaming\", \"total_sleep\", \"life_span\", \"gestation\", \"predation\", \"exposure\", \"danger\"]\n\n\n\n\n3. Selecting Columns Using @select\n\n@select msleep :species :total_sleep\n\n62×2 DataFrame37 rows omitted\n\n\n\nRow\nspecies\ntotal_sleep\n\n\n\nCat…\nFloat64?\n\n\n\n\n1\nAfricanelephant\n3.3\n\n\n2\nAfricangiantpouchedrat\n8.3\n\n\n3\nArcticFox\n12.5\n\n\n4\nArcticgroundsquirrel\n16.5\n\n\n5\nAsianelephant\n3.9\n\n\n6\nBaboon\n9.8\n\n\n7\nBigbrownbat\n19.7\n\n\n8\nBraziliantapir\n6.2\n\n\n9\nCat\n14.5\n\n\n10\nChimpanzee\n9.7\n\n\n11\nChinchilla\n12.5\n\n\n12\nCow\n3.9\n\n\n13\nDeserthedgehog\n10.3\n\n\n⋮\n⋮\n⋮\n\n\n51\nRockhyrax(Heterob)\n6.6\n\n\n52\nRockhyrax(Procaviahab)\n5.4\n\n\n53\nRoedeer\n2.6\n\n\n54\nSheep\n3.8\n\n\n55\nSlowloris\n11.0\n\n\n56\nStarnosedmole\n10.3\n\n\n57\nTenrec\n13.3\n\n\n58\nTreehyrax\n5.4\n\n\n59\nTreeshrew\n15.8\n\n\n60\nVervet\n10.3\n\n\n61\nWateropossum\n19.4\n\n\n62\nYellow-belliedmarmot\nmissing\n\n\n\n\n\n\n\n\n4. rsubset\n\n@rsubset msleep :total_sleep &gt; 16\n\n8×11 DataFrame\n\n\n\nRow\nspecies\nbody_wt\nbrain_wt\nnon_dreaming\ndreaming\ntotal_sleep\nlife_span\ngestation\npredation\nexposure\ndanger\n\n\n\nCat…\nFloat64\nFloat64\nFloat64?\nFloat64?\nFloat64?\nFloat64?\nFloat64?\nInt32\nInt32\nInt32\n\n\n\n\n1\nArcticgroundsquirrel\n0.92\n5.7\nmissing\nmissing\n16.5\nmissing\n25.0\n5\n2\n3\n\n\n2\nBigbrownbat\n0.023\n0.3\n15.8\n3.9\n19.7\n19.0\n35.0\n1\n1\n1\n\n\n3\nGiantarmadillo\n60.0\n81.0\n12.0\n6.1\n18.1\n7.0\nmissing\n1\n1\n1\n\n\n4\nLittlebrownbat\n0.01\n0.25\n17.9\n2.0\n19.9\n24.0\n50.0\n1\n1\n1\n\n\n5\nNAmericanopossum\n1.7\n6.3\n13.8\n5.6\n19.4\n5.0\n12.0\n2\n1\n1\n\n\n6\nNine-bandedarmadillo\n3.5\n10.8\n14.3\n3.1\n17.4\n6.5\n120.0\n2\n1\n1\n\n\n7\nOwlmonkey\n0.48\n15.5\n15.2\n1.8\n17.0\n12.0\n140.0\n2\n2\n2\n\n\n8\nWateropossum\n3.5\n3.9\n12.8\n6.6\n19.4\n3.0\n14.0\n2\n1\n1\n\n\n\n\n\n\n\n\n5. using @chain from Chain.jl\n\n@chain msleep begin\n           @select :species :total_sleep\n           @rsubset :total_sleep &gt; 16\n       end\n\n8×2 DataFrame\n\n\n\nRow\nspecies\ntotal_sleep\n\n\n\nCat…\nFloat64?\n\n\n\n\n1\nArcticgroundsquirrel\n16.5\n\n\n2\nBigbrownbat\n19.7\n\n\n3\nGiantarmadillo\n18.1\n\n\n4\nLittlebrownbat\n19.9\n\n\n5\nNAmericanopossum\n19.4\n\n\n6\nNine-bandedarmadillo\n17.4\n\n\n7\nOwlmonkey\n17.0\n\n\n8\nWateropossum\n19.4"
  }
]