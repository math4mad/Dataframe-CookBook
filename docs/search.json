[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DataFrame-Cookbook",
    "section": "",
    "text": "Filter DataFrame Columns by eltype\n\n\n\n\n\n\ndataframe\n\n\nvisualization\n\n\njulia\n\n\nmachinelearning\n\n\n\n\n\n\n\n\n\nDec 15, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nPokemon data analysis\n\n\n\n\n\n\ndataframe\n\n\nvisualization\n\n\njulia\n\n\nmachinelearning\n\n\n\n\n\n\n\n\n\nDec 15, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\n2018-19 English Premier League: An Exploratory Data Analysis\n\n\n\n\n\n\ndataframe\n\n\nvisualization\n\n\njulia\n\n\n\n\n\n\n\n\n\nDec 15, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\n2018-19 English Premier League: Machine Learning\n\n\n\n\n\n\ndataframe\n\n\nvisualization\n\n\njulia\n\n\nmachinelearning\n\n\n\n\n\n\n\n\n\nDec 15, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nE-Commerce Data Analysis\n\n\n\n\n\n\ndataframe\n\n\nvisualization\n\n\njulia\n\n\nmachinelearning\n\n\n\n\n\n\n\n\n\nDec 15, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nHacker Women in Tech - HackerRank Analysis\n\n\n\n\n\n\ndataframe\n\n\nvisualization\n\n\njulia\n\n\nmachinelearning\n\n\n\n\n\n\n\n\n\nDec 15, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nVideo Game Data Visualization-Tidier.jl\n\n\n\n\n\n\ndataframe\n\n\nvisualization\n\n\njulia\n\n\n\n\n\n\n\n\n\nDec 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nVideo Game Data Visualization\n\n\n\n\n\n\ndataframe\n\n\nvisualization\n\n\njulia\n\n\n\n\n\n\n\n\n\nDec 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nAirbnb List Data Analysis\n\n\n\n\n\n\ndataframe\n\n\nvisualization\n\n\njulia\n\n\nmachinelearning\n\n\n\n\n\n\n\n\n\nDec 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nDataFrameMeta\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nDataFrame xor table\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\nanova\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nusing DataFrame construct cotingencytable\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nDataFrame combine function\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\ndataset feature transformation\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nDataFrame two-way-table\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\nanova\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nDataFramesMeta Tutorial\n\n\n\n\n\n\ndataframe\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\nSep 14, 2023\n\n\nmath4mads\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nSep 11, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\n\n\n\n\n\n\naerial boming operations in world war 2 data analysis\n\n\n\n\n\n\ndataframe\n\n\nvisualization\n\n\njulia\n\n\nmachinelearning\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nmath4mads\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/two-way-table/index.html",
    "href": "posts/two-way-table/index.html",
    "title": "DataFrame two-way-table",
    "section": "",
    "text": "Note\n\n\n\n生成 two-way-table\n\n使用unstack方法生成双向表\n使用combine 方法添加列\n使用insert 方法添加行\n\n\n\n\ninclude(\"../utils.jl\")\nusing  RCall\nusing  GLMakie,DataFrames,Pipe,PrettyTables\nusing  StatsBase,TableTransforms,Random,TimeSeries,Dates\nRandom.seed!(34343)\n\nTaskLocalRNG()\n\n\n\n1. load data\n\n desc=Stat2Table(1431,\"FranticFingers\",\"stock time series\",[\"Date\", \"Price\", \"Change\", \"Volume\"])\n data=@pipe load_rda(desc.name)\n display(first(data,5))\n\n5×4 DataFrame\n\n\n\nRow\nID\nRate\nSubj\nDrug\n\n\n\nInt32\nInt32\nCat…\nCat…\n\n\n\n\n1\n1\n11\nA\nPl\n\n\n2\n2\n56\nB\nPl\n\n\n3\n3\n15\nC\nPl\n\n\n4\n4\n6\nD\nPl\n\n\n5\n5\n26\nA\nCa\n\n\n\n\n\n\n\n\n2. two-way-table\n:Subj 做为列, :Drug 作为行,  :Rate 是值\n\ntwoway_table=unstack(data,:Subj,:Drug,:Rate)\n\n4×4 DataFrame\n\n\n\nRow\nSubj\nPl\nCa\nTh\n\n\n\nCat…\nInt32?\nInt32?\nInt32?\n\n\n\n\n1\nA\n11\n26\n20\n\n\n2\nB\n56\n83\n71\n\n\n3\nC\n15\n34\n41\n\n\n4\nD\n6\n13\n32\n\n\n\n\n\n\n\n\n3. add :Ave Col\n\ntwt=combine(twoway_table,:,[:Pl,:Ca,:Th]=&gt;((a,b,c)-&gt;mean([a,b,c]))=&gt;:Ave)\n\n4×5 DataFrame\n\n\n\nRow\nSubj\nPl\nCa\nTh\nAve\n\n\n\nCat…\nInt32?\nInt32?\nInt32?\nFloat64\n\n\n\n\n1\nA\n11\n26\n20\n19.0\n\n\n2\nB\n56\n83\n71\n70.0\n\n\n3\nC\n15\n34\n41\n30.0\n\n\n4\nD\n6\n13\n32\n17.0\n\n\n\n\n\n\n\n\n4. insert Ave Row\n\ninsert!(twt, 5 ,[\"Ave\",mean.(eachcol(twt)[2:end])...])\n\n5×5 DataFrame\n\n\n\nRow\nSubj\nPl\nCa\nTh\nAve\n\n\n\nCat…\nInt32?\nInt32?\nInt32?\nFloat64\n\n\n\n\n1\nA\n11\n26\n20\n19.0\n\n\n2\nB\n56\n83\n71\n70.0\n\n\n3\nC\n15\n34\n41\n30.0\n\n\n4\nD\n6\n13\n32\n17.0\n\n\n5\nAve\n22\n39\n41\n34.0"
  },
  {
    "objectID": "posts/data-vis/index3.html",
    "href": "posts/data-vis/index3.html",
    "title": "E-Commerce Data Analysis",
    "section": "",
    "text": "include(\"../utils.jl\");   # import load_csv method"
  },
  {
    "objectID": "posts/data-vis/index3.html#load-package",
    "href": "posts/data-vis/index3.html#load-package",
    "title": "E-Commerce Data Analysis",
    "section": "",
    "text": "include(\"../utils.jl\");   # import load_csv method"
  },
  {
    "objectID": "posts/data-vis/index3.html#load-data",
    "href": "posts/data-vis/index3.html#load-data",
    "title": "E-Commerce Data Analysis",
    "section": "2. load data",
    "text": "2. load data\n\ndf =load_csv(\"online_retail\",false)\n@pipe names(df)|&gt;lowercase.(_)|&gt;rename!(df,_);"
  },
  {
    "objectID": "posts/data-vis/index3.html#peek-data",
    "href": "posts/data-vis/index3.html#peek-data",
    "title": "E-Commerce Data Analysis",
    "section": "3. peek data",
    "text": "3. peek data\n\n    @chain df begin\n    @slice(1:5)\nend\n\n5×8 DataFrame\n\n\n\nRow\ninvoiceno\nstockcode\ndescription\nquantity\ninvoicedate\nunitprice\ncustomerid\ncountry\n\n\n\nString7\nString15\nString?\nInt64\nString31\nFloat64\nFloat64?\nString31\n\n\n\n\n1\n536365\n85123A\nWHITE HANGING HEART T-LIGHT HOLDER\n6\n2010-12-01 08:26:00\n2.55\n17850.0\nUnited Kingdom\n\n\n2\n536365\n71053\nWHITE METAL LANTERN\n6\n2010-12-01 08:26:00\n3.39\n17850.0\nUnited Kingdom\n\n\n3\n536365\n84406B\nCREAM CUPID HEARTS COAT HANGER\n8\n2010-12-01 08:26:00\n2.75\n17850.0\nUnited Kingdom\n\n\n4\n536365\n84029G\nKNITTED UNION FLAG HOT WATER BOTTLE\n6\n2010-12-01 08:26:00\n3.39\n17850.0\nUnited Kingdom\n\n\n5\n536365\n84029E\nRED WOOLLY HOTTIE WHITE HEART.\n6\n2010-12-01 08:26:00\n3.39\n17850.0\nUnited Kingdom"
  },
  {
    "objectID": "posts/data-vis/index3.html#describe-of-data",
    "href": "posts/data-vis/index3.html#describe-of-data",
    "title": "E-Commerce Data Analysis",
    "section": "4. describe of data",
    "text": "4. describe of data\n\n@pipe describe(df)|&gt;select(_,[:variable,:nmissing])\n\n8×2 DataFrame\n\n\n\nRow\nvariable\nnmissing\n\n\n\nSymbol\nInt64\n\n\n\n\n1\ninvoiceno\n0\n\n\n2\nstockcode\n0\n\n\n3\ndescription\n1454\n\n\n4\nquantity\n0\n\n\n5\ninvoicedate\n0\n\n\n6\nunitprice\n0\n\n\n7\ncustomerid\n135080\n\n\n8\ncountry\n0"
  },
  {
    "objectID": "posts/data-vis/index3.html#data-analysis",
    "href": "posts/data-vis/index3.html#data-analysis",
    "title": "E-Commerce Data Analysis",
    "section": "5. data analysis",
    "text": "5. data analysis\n\n5.1 which goods has most returning rate ?\n\nreturn_data=@chain df begin\n   @filter(quantity&lt;0)\n   @group_by(stockcode,description)\n   @summarize(sum_quantity=sum(quantity))\n   @ungroup\n   @arrange(sum_quantity)\nend\n\n3183×3 DataFrame3158 rows omitted\n\n\n\nRow\nstockcode\ndescription\nsum_quantity\n\n\n\nString15\nString?\nInt64\n\n\n\n\n1\n23843\nPAPER CRAFT , LITTLE BIRDIE\n-80995\n\n\n2\n23166\nMEDIUM CERAMIC TOP STORAGE JAR\n-74494\n\n\n3\n23005\nprinting smudges/thrown away\n-19200\n\n\n4\n84347\nROTATING SILVER ANGELS T-LIGHT HLDR\n-9376\n\n\n5\n23003\nPrinting smudges/thrown away\n-9058\n\n\n6\n72140F\nthrow away\n-5368\n\n\n7\n79323W\nUnsaleable, destroyed.\n-4830\n\n\n8\nM\nManual\n-4066\n\n\n9\n16045\nmissing\n-3667\n\n\n10\n16259\nmissing\n-3167\n\n\n11\n21108\nFAIRY CAKE FLANNEL ASSORTED COLOUR\n-3150\n\n\n12\n20713\nwrongly marked. 23343 in box\n-3100\n\n\n13\n84598\ncheck\n-3000\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n3172\n22378\nWALL TIDY RETROSPOT\n-1\n\n\n3173\n22563\nHAPPY STENCIL CRAFT\n-1\n\n\n3174\n85204\nHANGING WOOD AND FELT FLOWER\n-1\n\n\n3175\n35961\nFOLKART ZINC HEART CHRISTMAS DEC\n-1\n\n\n3176\n23370\nSET 36 COLOURING PENCILS DOILY\n-1\n\n\n3177\n22594\nCHRISTMAS GINGHAM TREE\n-1\n\n\n3178\n23491\nVINTAGE JINGLE BELLS HEART\n-1\n\n\n3179\n23568\nEGG CUP HENRIETTA HEN CREAM\n-1\n\n\n3180\n23411\nTRELLIS COAT RACK\n-1\n\n\n3181\n22321\nBIRD DECORATION RED RETROSPOT\n-1\n\n\n3182\n23544\nWALL ART MID CENTURY MODERN\n-1\n\n\n3183\n23452\nHEART MINI PORTRAIT FRAME\n-1\n\n\n\n\n\n\n\n\n5.2 create plot of vis profit earned in UK by customers weekly, monthly and quarterly\n\nusing Dates\n\n\"\"\"\nhttps://www.juliasos.com/syntax/julian-date-string-to-datetime/\n\"\"\"\nfunction julian_to_datetime(julian_date::AbstractString)\n    date_format = DateFormat(\"yyyy-mm-dd HH:MM:SS\")\n    return DateTime(julian_date, date_format)\nend\n df5_2=@chain df begin\n     @select(quantity,unitprice,invoicedate,country)\n     @filter(country==\"United Kingdom\",quantity&gt;0)\n     @mutate(invoicedate= julian_to_datetime(invoicedate))\n     @mutate(year=year(invoicedate),month=month(invoicedate),week=week(invoicedate),quarter=quarterofyear(invoicedate))\n end\n\n486286×8 DataFrame486261 rows omitted\n\n\n\nRow\nquantity\nunitprice\ninvoicedate\ncountry\nyear\nmonth\nweek\nquarter\n\n\n\nInt64\nFloat64\nDateTime\nString31\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\n6\n2.55\n2010-12-01T08:26:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n2\n6\n3.39\n2010-12-01T08:26:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n3\n8\n2.75\n2010-12-01T08:26:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n4\n6\n3.39\n2010-12-01T08:26:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n5\n6\n3.39\n2010-12-01T08:26:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n6\n2\n7.65\n2010-12-01T08:26:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n7\n6\n4.25\n2010-12-01T08:26:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n8\n6\n1.85\n2010-12-01T08:28:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n9\n6\n1.85\n2010-12-01T08:28:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n10\n32\n1.69\n2010-12-01T08:34:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n11\n6\n2.1\n2010-12-01T08:34:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n12\n6\n2.1\n2010-12-01T08:34:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n13\n8\n3.75\n2010-12-01T08:34:00\nUnited Kingdom\n2010\n12\n48\n4\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n486275\n24\n0.42\n2011-12-09T12:31:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n486276\n25\n0.42\n2011-12-09T12:31:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n486277\n12\n1.25\n2011-12-09T12:31:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n486278\n12\n0.85\n2011-12-09T12:31:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n486279\n12\n0.39\n2011-12-09T12:31:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n486280\n4\n3.75\n2011-12-09T12:31:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n486281\n12\n0.95\n2011-12-09T12:31:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n486282\n12\n1.95\n2011-12-09T12:31:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n486283\n8\n2.95\n2011-12-09T12:49:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n486284\n24\n1.25\n2011-12-09T12:49:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n486285\n24\n8.95\n2011-12-09T12:49:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n486286\n10\n7.08\n2011-12-09T12:49:00\nUnited Kingdom\n2011\n12\n49\n4\n\n\n\n\n\n\n\n5.2.1 weekly data\n\nweekly_sales=@chain df5_2 begin\n @group_by(week)\n @mutate(earn_weekly=unitprice*quantity)\n @summarise(sum_weekly=sum(earn_weekly))\n @mutate(log_sum_weekly=log(sum_weekly))\n @ungroup\n @arrange(week)\nend\n\n51×3 DataFrame26 rows omitted\n\n\n\nRow\nweek\nsum_weekly\nlog_sum_weekly\n\n\n\nInt64\nFloat64\nFloat64\n\n\n\n\n1\n1\n116114.0\n11.6623\n\n\n2\n2\n1.47688e5\n11.9029\n\n\n3\n3\n1.81925e5\n12.1114\n\n\n4\n4\n97980.4\n11.4925\n\n\n5\n5\n1.09838e5\n11.6068\n\n\n6\n6\n92585.3\n11.4359\n\n\n7\n7\n1.1022e5\n11.6102\n\n\n8\n8\n1.16044e5\n11.6617\n\n\n9\n9\n96633.3\n11.4787\n\n\n10\n10\n1.15516e5\n11.6572\n\n\n11\n11\n1.34222e5\n11.8073\n\n\n12\n12\n1.3197e5\n11.7903\n\n\n13\n13\n156816.0\n11.9628\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n40\n40\n2.76584e5\n12.5303\n\n\n41\n41\n1.85791e5\n12.1324\n\n\n42\n42\n1.99877e5\n12.2055\n\n\n43\n43\n211876.0\n12.2638\n\n\n44\n44\n2.6804e5\n12.4989\n\n\n45\n45\n3.33135e5\n12.7163\n\n\n46\n46\n331895.0\n12.7126\n\n\n47\n47\n2.76989e5\n12.5317\n\n\n48\n48\n4.61985e5\n13.0433\n\n\n49\n49\n7.72239e5\n13.557\n\n\n50\n50\n1.98597e5\n12.199\n\n\n51\n51\n76569.3\n11.246\n\n\n\n\n\n\n\n\n5.2.2 monthly data\n\nmonthly_sales=@chain df5_2 begin\n @group_by(month)\n @mutate(earn_monthly=unitprice*quantity)\n @summarise(sum_monthly=sum(earn_monthly))\n @mutate(log_sum_monthly=log(sum_monthly))\n @ungroup\n @arrange(month)\nend\n\n12×3 DataFrame\n\n\n\nRow\nmonth\nsum_monthly\nlog_sum_monthly\n\n\n\nInt64\nFloat64\nFloat64\n\n\n\n\n1\n1\n561290.0\n13.238\n\n\n2\n2\n430028.0\n12.9716\n\n\n3\n3\n5.8623e5\n13.2815\n\n\n4\n4\n4.76518e5\n13.0743\n\n\n5\n5\n6.39314e5\n13.3682\n\n\n6\n6\n6.19511e5\n13.3367\n\n\n7\n7\n6.01995e5\n13.308\n\n\n8\n8\n5.85923e5\n13.2809\n\n\n9\n9\n8.97076e5\n13.7069\n\n\n10\n10\n938975.0\n13.7525\n\n\n11\n11\n1.32535e6\n14.0972\n\n\n12\n12\n1.34089e6\n14.1088\n\n\n\n\n\n\n\n\n5.2.3 quarter data\n\nquarter_sales=@chain df5_2 begin\n @group_by(quarter)\n @mutate(earn_quarter=unitprice*quantity)\n @summarise(sum_quarter=sum(earn_quarter))\n @mutate(log_sum_quarter=log(sum_quarter))\n @ungroup\n @arrange(quarter)\nend\n\n4×3 DataFrame\n\n\n\nRow\nquarter\nsum_quarter\nlog_sum_quarter\n\n\n\nInt64\nFloat64\nFloat64\n\n\n\n\n1\n1\n1.57755e6\n14.2714\n\n\n2\n2\n1.73534e6\n14.3667\n\n\n3\n3\n2.08499e6\n14.5503\n\n\n4\n4\n3.60521e6\n15.0979\n\n\n\n\n\n\n\n\n5.2.4 year data\n\nyear_sales=@chain df5_2 begin\n @group_by(year)\n @mutate(earn_year=unitprice*quantity)\n @summarise(sum_year=sum(earn_year))\n @mutate(log_sum_year=log(sum_year))\n @ungroup\n @arrange(year)\nend\n\n2×3 DataFrame\n\n\n\nRow\nyear\nsum_year\nlog_sum_year\n\n\n\nInt64\nFloat64\nFloat64\n\n\n\n\n1\n2010\n748269.0\n13.5255\n\n\n2\n2011\n8.25483e6\n15.9263\n\n\n\n\n\n\n\nlet\n    set_aog_theme!()\n    df = (week=weekly_sales.week, sales=weekly_sales.log_sum_weekly)\n    plt = data(df) * mapping(:week, :sales) \n    draw(plt * visual(Lines)) # plot as heatmap (the default)\nend\n\n\n\n\n\n\n\n\n\nlet\n    set_aog_theme!()\n    df = (month=monthly_sales.month, sales=monthly_sales.log_sum_monthly)\n    plt = data(df) * mapping(:month, :sales) \n    draw(plt * visual(BarPlot)) # plot as heatmap (the default)\nend\n\n\n\n\n\n\n\n\n\nlet\n    set_aog_theme!()\n    df = (quarter=quarter_sales.quarter, sales=quarter_sales.sum_quarter)\n    plt = data(df) * mapping(:quarter, :sales) \n    draw(plt * visual(BarPlot)) # plot as heatmap (the default)\nend"
  },
  {
    "objectID": "posts/data-vis/airbnb-data-analysis.html",
    "href": "posts/data-vis/airbnb-data-analysis.html",
    "title": "Airbnb List Data Analysis",
    "section": "",
    "text": "info\n\n\n\n\nref1 : Airbnb Analysis, Visualization and Prediction\nref2 :[Data Analyst Pet Project - Python] Airbnb Listings for 6 Cities\ndataset: Airbnb Analysis, Visualization and Prediction"
  },
  {
    "objectID": "posts/data-vis/airbnb-data-analysis.html#load-package",
    "href": "posts/data-vis/airbnb-data-analysis.html#load-package",
    "title": "Airbnb List Data Analysis",
    "section": "1. load package",
    "text": "1. load package\n\ninclude(\"../utils.jl\");   # import load_csv method"
  },
  {
    "objectID": "posts/data-vis/airbnb-data-analysis.html#load-data",
    "href": "posts/data-vis/airbnb-data-analysis.html#load-data",
    "title": "Airbnb List Data Analysis",
    "section": "2. load data",
    "text": "2. load data\n\ndf =load_csv(\"airbnb_nyc_2019\",false)\n@pipe names(df)|&gt;lowercase.(_)|&gt;rename!(df,_);"
  },
  {
    "objectID": "posts/data-vis/airbnb-data-analysis.html#peek-data",
    "href": "posts/data-vis/airbnb-data-analysis.html#peek-data",
    "title": "Airbnb List Data Analysis",
    "section": "3. peek data",
    "text": "3. peek data\n\n@chain df begin\n  @slice(1:5)\nend\n\n5×16 DataFrame\n\n\n\nRow\nid\nname\nhost_id\nhost_name\nneighbourhood_group\nneighbourhood\nlatitude\nlongitude\nroom_type\nprice\nminimum_nights\nnumber_of_reviews\nlast_review\nreviews_per_month\ncalculated_host_listings_count\navailability_365\n\n\n\nInt64\nString\nInt64\nString?\nString15\nString31\nFloat64\nFloat64\nString15\nInt64\nInt64\nInt64\nDate?\nFloat64?\nInt64\nInt64\n\n\n\n\n1\n2539\nClean & quiet apt home by the park\n2787\nJohn\nBrooklyn\nKensington\n40.6475\n-73.9724\nPrivate room\n149\n1\n9\n2018-10-19\n0.21\n6\n365\n\n\n2\n2595\nSkylit Midtown Castle\n2845\nJennifer\nManhattan\nMidtown\n40.7536\n-73.9838\nEntire home/apt\n225\n1\n45\n2019-05-21\n0.38\n2\n355\n\n\n3\n3647\nTHE VILLAGE OF HARLEM....NEW YORK !\n4632\nElisabeth\nManhattan\nHarlem\n40.809\n-73.9419\nPrivate room\n150\n3\n0\nmissing\nmissing\n1\n365\n\n\n4\n3831\nCozy Entire Floor of Brownstone\n4869\nLisaRoxanne\nBrooklyn\nClinton Hill\n40.6851\n-73.9598\nEntire home/apt\n89\n1\n270\n2019-07-05\n4.64\n1\n194\n\n\n5\n5022\nEntire Apt: Spacious Studio/Loft by central park\n7192\nLaura\nManhattan\nEast Harlem\n40.7985\n-73.944\nEntire home/apt\n80\n10\n9\n2018-11-19\n0.1\n1\n0"
  },
  {
    "objectID": "posts/data-vis/airbnb-data-analysis.html#describe-data",
    "href": "posts/data-vis/airbnb-data-analysis.html#describe-data",
    "title": "Airbnb List Data Analysis",
    "section": "4. describe data",
    "text": "4. describe data\n\n @pipe describe(df)|&gt;select(_,[:variable,:nmissing,:eltype])\n\n16×3 DataFrame\n\n\n\nRow\nvariable\nnmissing\neltype\n\n\n\nSymbol\nInt64\nType\n\n\n\n\n1\nid\n0\nInt64\n\n\n2\nname\n0\nString\n\n\n3\nhost_id\n0\nInt64\n\n\n4\nhost_name\n21\nUnion{Missing, String}\n\n\n5\nneighbourhood_group\n0\nString15\n\n\n6\nneighbourhood\n0\nString31\n\n\n7\nlatitude\n0\nFloat64\n\n\n8\nlongitude\n0\nFloat64\n\n\n9\nroom_type\n0\nString15\n\n\n10\nprice\n0\nInt64\n\n\n11\nminimum_nights\n0\nInt64\n\n\n12\nnumber_of_reviews\n0\nInt64\n\n\n13\nlast_review\n10052\nUnion{Missing, Date}\n\n\n14\nreviews_per_month\n10052\nUnion{Missing, Float64}\n\n\n15\ncalculated_host_listings_count\n0\nInt64\n\n\n16\navailability_365\n0\nInt64"
  },
  {
    "objectID": "posts/data-vis/airbnb-data-analysis.html#shape-of-dataset",
    "href": "posts/data-vis/airbnb-data-analysis.html#shape-of-dataset",
    "title": "Airbnb List Data Analysis",
    "section": "5. shape of dataset",
    "text": "5. shape of dataset\n\n  size(df)\n\n(48895, 16)"
  },
  {
    "objectID": "posts/data-vis/airbnb-data-analysis.html#unselect-some-features",
    "href": "posts/data-vis/airbnb-data-analysis.html#unselect-some-features",
    "title": "Airbnb List Data Analysis",
    "section": "6. unselect some features",
    "text": "6. unselect some features\n\n select!(df,Not([\"name\",\"id\",\"host_name\",\"last_review\"]));"
  },
  {
    "objectID": "posts/data-vis/airbnb-data-analysis.html#replace-missing-of-month-review-to-zero",
    "href": "posts/data-vis/airbnb-data-analysis.html#replace-missing-of-month-review-to-zero",
    "title": "Airbnb List Data Analysis",
    "section": "7. replace missing of month review to zero",
    "text": "7. replace missing of month review to zero\n\ndf=@chain df begin\n@mutate(reviews_per_month = case_when(  ismissing(reviews_per_month)  =&gt;  0,\n                        true          =&gt; reviews_per_month))\nend\n\n48895×12 DataFrame48870 rows omitted\n\n\n\nRow\nhost_id\nneighbourhood_group\nneighbourhood\nlatitude\nlongitude\nroom_type\nprice\nminimum_nights\nnumber_of_reviews\nreviews_per_month\ncalculated_host_listings_count\navailability_365\n\n\n\nInt64\nString15\nString31\nFloat64\nFloat64\nString15\nInt64\nInt64\nInt64\nReal\nInt64\nInt64\n\n\n\n\n1\n2787\nBrooklyn\nKensington\n40.6475\n-73.9724\nPrivate room\n149\n1\n9\n0.21\n6\n365\n\n\n2\n2845\nManhattan\nMidtown\n40.7536\n-73.9838\nEntire home/apt\n225\n1\n45\n0.38\n2\n355\n\n\n3\n4632\nManhattan\nHarlem\n40.809\n-73.9419\nPrivate room\n150\n3\n0\n0\n1\n365\n\n\n4\n4869\nBrooklyn\nClinton Hill\n40.6851\n-73.9598\nEntire home/apt\n89\n1\n270\n4.64\n1\n194\n\n\n5\n7192\nManhattan\nEast Harlem\n40.7985\n-73.944\nEntire home/apt\n80\n10\n9\n0.1\n1\n0\n\n\n6\n7322\nManhattan\nMurray Hill\n40.7477\n-73.975\nEntire home/apt\n200\n3\n74\n0.59\n1\n129\n\n\n7\n7356\nBrooklyn\nBedford-Stuyvesant\n40.6869\n-73.956\nPrivate room\n60\n45\n49\n0.4\n1\n0\n\n\n8\n8967\nManhattan\nHell's Kitchen\n40.7649\n-73.9849\nPrivate room\n79\n2\n430\n3.47\n1\n220\n\n\n9\n7490\nManhattan\nUpper West Side\n40.8018\n-73.9672\nPrivate room\n79\n2\n118\n0.99\n1\n0\n\n\n10\n7549\nManhattan\nChinatown\n40.7134\n-73.9904\nEntire home/apt\n150\n1\n160\n1.33\n4\n188\n\n\n11\n7702\nManhattan\nUpper West Side\n40.8032\n-73.9655\nEntire home/apt\n135\n5\n53\n0.43\n1\n6\n\n\n12\n7989\nManhattan\nHell's Kitchen\n40.7608\n-73.9887\nPrivate room\n85\n2\n188\n1.5\n1\n39\n\n\n13\n9744\nBrooklyn\nSouth Slope\n40.6683\n-73.9878\nPrivate room\n89\n4\n167\n1.34\n3\n314\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n48884\n131529729\nManhattan\nEast Harlem\n40.7976\n-73.9361\nPrivate room\n75\n2\n0\n0\n2\n364\n\n\n48885\n274307600\nBrooklyn\nWilliamsburg\n40.7179\n-73.9624\nPrivate room\n190\n7\n0\n0\n1\n341\n\n\n48886\n131529729\nManhattan\nEast Harlem\n40.7963\n-73.936\nPrivate room\n75\n2\n0\n0\n2\n353\n\n\n48887\n274311461\nManhattan\nMidtown\n40.7556\n-73.9672\nEntire home/apt\n200\n6\n0\n0\n1\n176\n\n\n48888\n208514239\nBrooklyn\nWilliamsburg\n40.7123\n-73.9422\nEntire home/apt\n170\n1\n0\n0\n3\n365\n\n\n48889\n274321313\nManhattan\nHell's Kitchen\n40.7639\n-73.9918\nPrivate room\n125\n4\n0\n0\n1\n31\n\n\n48890\n107716952\nQueens\nJamaica\n40.6914\n-73.8084\nPrivate room\n65\n1\n0\n0\n2\n163\n\n\n48891\n8232441\nBrooklyn\nBedford-Stuyvesant\n40.6785\n-73.95\nPrivate room\n70\n2\n0\n0\n2\n9\n\n\n48892\n6570630\nBrooklyn\nBushwick\n40.7018\n-73.9332\nPrivate room\n40\n4\n0\n0\n2\n36\n\n\n48893\n23492952\nManhattan\nHarlem\n40.8147\n-73.9487\nEntire home/apt\n115\n10\n0\n0\n1\n27\n\n\n48894\n30985759\nManhattan\nHell's Kitchen\n40.7575\n-73.9911\nShared room\n55\n1\n0\n0\n6\n2\n\n\n48895\n68119814\nManhattan\nHell's Kitchen\n40.764\n-73.9893\nPrivate room\n90\n7\n0\n0\n1\n23"
  },
  {
    "objectID": "posts/data-vis/airbnb-data-analysis.html#data-visualization",
    "href": "posts/data-vis/airbnb-data-analysis.html#data-visualization",
    "title": "Airbnb List Data Analysis",
    "section": "8. Data Visualization",
    "text": "8. Data Visualization\n\n8.1 neighbourhood_group\n\nneighbourhood_group_df=@chain df begin\n @group_by(neighbourhood_group)\n @summarize(count=nrow())\n @ungroup\nend\n\n5×2 DataFrame\n\n\n\nRow\nneighbourhood_group\ncount\n\n\n\nString15\nInt64\n\n\n\n\n1\nBrooklyn\n20104\n\n\n2\nManhattan\n21661\n\n\n3\nQueens\n5666\n\n\n4\nStaten Island\n373\n\n\n5\nBronx\n1091\n\n\n\n\n\n\n\nfunction plot_ngd_barplot(df)\nset_aog_theme!()\nplt = data(df) * mapping(:neighbourhood_group, :count;color = :neighbourhood_group)\ndraw(plt * visual(BarPlot))\nend\nplot_ngd_barplot(neighbourhood_group_df)\n\n\n\n\n\n\n\n\n\n\n8.2 in progressing….\n\n\n8.3 room type\n\nroomtype_df=@chain df begin\n @group_by(room_type)\n @summarize(count=nrow())\n @ungroup\nend\n\n3×2 DataFrame\n\n\n\nRow\nroom_type\ncount\n\n\n\nString15\nInt64\n\n\n\n\n1\nPrivate room\n22326\n\n\n2\nEntire home/apt\n25409\n\n\n3\nShared room\n1160\n\n\n\n\n\n\n\nfunction plot_roomtype_barplot(df)\nset_aog_theme!()\nplt = data(df) * mapping(:room_type, :count;color = :room_type)\ndraw(plt * visual(BarPlot))\nend\nplot_roomtype_barplot(roomtype_df)\n\n\n\n\n\n\n\n\n\n\n8.4 neighbourhood_group and room availablity relation\n\nlet\n set_aog_theme!()\n plt = data(df) * mapping(:neighbourhood_group, :availability_365;color = :neighbourhood_group)\n draw(plt * visual(BoxPlot))\n\nend\n\n\n\n\n\n\n\n\n\n\n8.5 Map of Neighbourhood group\n\nlet\n set_aog_theme!()\n plt = data(df[1:5:end,:]) * mapping(:longitude,:latitude;color = :neighbourhood_group)\n draw(plt * visual(Scatter))\n\nend\n\n\n\n\n\n\n\n\n\n\n8.6 Map of Neighbourhood\n\nlet\n set_aog_theme!()\n plt = data(df[1:5:end,:]) * mapping(:longitude,:latitude;color = :neighbourhood)\n draw(plt * visual(Scatter))\n\nend\n\n\n\n\n\n\n\n\n\n\n8.7 Map of room_type\n\nlet\n set_aog_theme!()\n plt = data(df[1:5:end,:]) * mapping(:longitude,:latitude;color = :room_type)\n draw(plt * visual(Scatter))\n\nend"
  },
  {
    "objectID": "posts/data-vis/pokemon-data-analysis.html",
    "href": "posts/data-vis/pokemon-data-analysis.html",
    "title": "Pokemon data analysis",
    "section": "",
    "text": "info\n\n\n\n\nref: Intermediate visualization tutorial using Plotly\ndataset: Pokemon with stats"
  },
  {
    "objectID": "posts/data-vis/pokemon-data-analysis.html#load-package",
    "href": "posts/data-vis/pokemon-data-analysis.html#load-package",
    "title": "Pokemon data analysis",
    "section": "1. load package",
    "text": "1. load package\n\nusing Makie\ninclude(\"../utils.jl\")   # import load_csv method\n\n(marker = :circle, markersize = 12, color = (:green, 0.2), strokewidth = 1, strokecolor = :black)"
  },
  {
    "objectID": "posts/data-vis/pokemon-data-analysis.html#load-data",
    "href": "posts/data-vis/pokemon-data-analysis.html#load-data",
    "title": "Pokemon data analysis",
    "section": "2. load data",
    "text": "2. load data\n\ndf =load_csv(\"pokemon_data\",false)\n@pipe names(df)|&gt;lowercase.(_)|&gt;rename!(df,_);"
  },
  {
    "objectID": "posts/data-vis/pokemon-data-analysis.html#peek-data",
    "href": "posts/data-vis/pokemon-data-analysis.html#peek-data",
    "title": "Pokemon data analysis",
    "section": "3. peek data",
    "text": "3. peek data\n\n@chain df begin\n  @slice(1:5)\nend\n\n5×13 DataFrame\n\n\n\nRow\n#\nname\ntype 1\ntype 2\ntotal\nhp\nattack\ndefense\nsp. atk\nsp. def\nspeed\ngeneration\nlegendary\n\n\n\nInt64\nString31\nString15\nString15?\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nBool\n\n\n\n\n1\n1\nBulbasaur\nGrass\nPoison\n318\n45\n49\n49\n65\n65\n45\n1\nfalse\n\n\n2\n2\nIvysaur\nGrass\nPoison\n405\n60\n62\n63\n80\n80\n60\n1\nfalse\n\n\n3\n3\nVenusaur\nGrass\nPoison\n525\n80\n82\n83\n100\n100\n80\n1\nfalse\n\n\n4\n3\nVenusaurMega Venusaur\nGrass\nPoison\n625\n80\n100\n123\n122\n120\n80\n1\nfalse\n\n\n5\n4\nCharmander\nFire\nmissing\n309\n39\n52\n43\n60\n50\n65\n1\nfalse"
  },
  {
    "objectID": "posts/data-vis/pokemon-data-analysis.html#describe-data",
    "href": "posts/data-vis/pokemon-data-analysis.html#describe-data",
    "title": "Pokemon data analysis",
    "section": "4. describe data",
    "text": "4. describe data\n\n @pipe describe(df)|&gt;select(_,[:variable,:nmissing,:eltype])\n\n13×3 DataFrame\n\n\n\nRow\nvariable\nnmissing\neltype\n\n\n\nSymbol\nInt64\nType\n\n\n\n\n1\n#\n0\nInt64\n\n\n2\nname\n0\nString31\n\n\n3\ntype 1\n0\nString15\n\n\n4\ntype 2\n386\nUnion{Missing, String15}\n\n\n5\ntotal\n0\nInt64\n\n\n6\nhp\n0\nInt64\n\n\n7\nattack\n0\nInt64\n\n\n8\ndefense\n0\nInt64\n\n\n9\nsp. atk\n0\nInt64\n\n\n10\nsp. def\n0\nInt64\n\n\n11\nspeed\n0\nInt64\n\n\n12\ngeneration\n0\nInt64\n\n\n13\nlegendary\n0\nBool"
  },
  {
    "objectID": "posts/data-vis/pokemon-data-analysis.html#shape-of-dataset",
    "href": "posts/data-vis/pokemon-data-analysis.html#shape-of-dataset",
    "title": "Pokemon data analysis",
    "section": "5. shape of dataset",
    "text": "5. shape of dataset\n\n  size(df)\n\n(800, 13)"
  },
  {
    "objectID": "posts/data-vis/pokemon-data-analysis.html#dist-plot",
    "href": "posts/data-vis/pokemon-data-analysis.html#dist-plot",
    "title": "Pokemon data analysis",
    "section": "6. dist plot",
    "text": "6. dist plot\n\nplt = data(df) * mapping(:hp)\nlayers = visual(Hist;normalization=:pdf,bin=10,strokewidth=1,strokecolor=:white) +visual(Density;color=(:green,0.3),strokewidth=1,strokecolor=:red)\nwith_theme(theme_ggplot2(), resolution = (600,400)) do\n    layers*plt|&gt; draw\nend\n\n\n\n\n\n\n\n\n\n6.2 show all stats\n\n  function plot_features_boxplot(df::AbstractDataFrame)\n  row,col=size(df)\n  features=names(df)\n  fig=Figure(resolution=(1000,500))\n  ax=Axis(fig[1,1],title=\"boxplot of features\")\n  ax.xlabel=\"feature\";ax.ylabel=\"counts\"\n  ax.xticks=(1:col,features)\n  for (idx,col)  in enumerate(collect(eachcol(df)))\n    boxplot!(ax,fill(idx,row),col)\n  end\n  \n  fig\nend\n\nplot_features_boxplot(df[:,6:11])"
  },
  {
    "objectID": "posts/data-vis/pokemon-data-analysis.html#radar-plot",
    "href": "posts/data-vis/pokemon-data-analysis.html#radar-plot",
    "title": "Pokemon data analysis",
    "section": "7. Radar plot",
    "text": "7. Radar plot\n\nnum_df=@chain df begin\n  @select(6:11)\nend\nmax_range=@pipe eachcol(num_df)|&gt;maximum.(_)|&gt;round.(_,digits=0)\ncats=names(num_df)\n#show(cats)\n\n6-element Vector{String}:\n \"hp\"\n \"attack\"\n \"defense\"\n \"sp. atk\"\n \"sp. def\"\n \"speed\"\n\n\n\nusing GMT\nfunction plot_rader(data)\n    data=Matrix(data)\n    radar(data,labels=cats, annotall=true, marker=:circ, fill=true, show=true, axeslimts=max_range)\nend\nnum_df[1:2,:]|&gt;plot_rader"
  },
  {
    "objectID": "posts/data-vis/pokemon-data-analysis.html#vilion-plot",
    "href": "posts/data-vis/pokemon-data-analysis.html#vilion-plot",
    "title": "Pokemon data analysis",
    "section": "8 vilion plot",
    "text": "8 vilion plot\n\nfunction plot_features_violin(df::AbstractDataFrame)\n  row,col=size(df)\n  features=names(df)\n  fig=Figure(resolution=(1000,500))\n  ax=Axis(fig[1,1],title=\"boxplot of features\")\n  ax.xlabel=\"feature\";ax.ylabel=\"counts\"\n  ax.xticks=(1:col,features)\n  for (idx,col)  in enumerate(collect(eachcol(df)))\n    Makie.violin!(ax,fill(idx,row),col)\n  end\n  \n  fig\nend\n\nplot_features_violin(df[:,6:11])"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/transformation/index.html",
    "href": "posts/transformation/index.html",
    "title": "dataset feature transformation",
    "section": "",
    "text": "简介\n\n\n\nbotsonhousing-price-predicting\n对各feature做不同的变换\nfeature 参见 :Applied Multivariate Statistical Analysis | SpringerLink p51\n变换方法参见 : TableTransforms-Functional"
  },
  {
    "objectID": "posts/transformation/index.html#load-package",
    "href": "posts/transformation/index.html#load-package",
    "title": "dataset feature transformation",
    "section": "1. load package",
    "text": "1. load package\n\ninclude(\"../utils.jl\")   # import load_csv method\nusing  DataFrames,TableTransforms\nusing  Random\nRandom.seed!(34343)\n\nTaskLocalRNG()"
  },
  {
    "objectID": "posts/transformation/index.html#load-data",
    "href": "posts/transformation/index.html#load-data",
    "title": "dataset feature transformation",
    "section": "2. load data",
    "text": "2. load data\n\ndf=load_csv(\"BostonHousing\")\nfirst(df,10)\n\n10×14 DataFrame\n\n\n\nRow\ncrim\nzn\nindus\nchas\nnox\nrm\nage\ndis\nrad\ntax\nptratio\nb\nlstat\nmedv\n\n\n\nFloat64\nFloat64\nFloat64\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nInt64\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n0.00632\n18.0\n2.31\n0\n0.538\n6.575\n65.2\n4.09\n1\n296\n15.3\n396.9\n4.98\n24.0\n\n\n2\n0.02731\n0.0\n7.07\n0\n0.469\n6.421\n78.9\n4.9671\n2\n242\n17.8\n396.9\n9.14\n21.6\n\n\n3\n0.02729\n0.0\n7.07\n0\n0.469\n7.185\n61.1\n4.9671\n2\n242\n17.8\n392.83\n4.03\n34.7\n\n\n4\n0.03237\n0.0\n2.18\n0\n0.458\n6.998\n45.8\n6.0622\n3\n222\n18.7\n394.63\n2.94\n33.4\n\n\n5\n0.06905\n0.0\n2.18\n0\n0.458\n7.147\n54.2\n6.0622\n3\n222\n18.7\n396.9\n5.33\n36.2\n\n\n6\n0.02985\n0.0\n2.18\n0\n0.458\n6.43\n58.7\n6.0622\n3\n222\n18.7\n394.12\n5.21\n28.7\n\n\n7\n0.08829\n12.5\n7.87\n0\n0.524\n6.012\n66.6\n5.5605\n5\n311\n15.2\n395.6\n12.43\n22.9\n\n\n8\n0.14455\n12.5\n7.87\n0\n0.524\n6.172\n96.1\n5.9505\n5\n311\n15.2\n396.9\n19.15\n27.1\n\n\n9\n0.21124\n12.5\n7.87\n0\n0.524\n5.631\n100.0\n6.0821\n5\n311\n15.2\n386.63\n29.93\n16.5\n\n\n10\n0.17004\n12.5\n7.87\n0\n0.524\n6.004\n85.9\n6.5921\n5\n311\n15.2\n386.71\n17.1\n18.9"
  },
  {
    "objectID": "posts/transformation/index.html#tranformation",
    "href": "posts/transformation/index.html#tranformation",
    "title": "dataset feature transformation",
    "section": "3. tranformation",
    "text": "3. tranformation\n\ntable=(eachcol(df))|&gt;Functional(\n                  1=&gt;log,\n                  2=&gt;x-&gt;x/10,\n                  3=&gt;log,\n                  4=&gt;x-&gt;x,\n                  5=&gt;log,\n                  6=&gt;log,\n                  7=&gt;x-&gt;(x^2.5)/10000,\n                  8=&gt;log,\n                  9=&gt;log,\n                  10=&gt;log,\n                  11=&gt;x-&gt;exp(0.4*x)/1000,\n                  12=&gt;x-&gt;x/100,\n                  13=&gt;x-&gt;sqrt(x),\n                  14=&gt;log\n)\n\nfirst(table,10)\n\n10×14 DataFrame\n\n\n\nRow\ncrim\nzn\nindus\nchas\nnox\nrm\nage\ndis\nrad\ntax\nptratio\nb\nlstat\nmedv\n\n\n\nFloat64\nFloat64\nFloat64\nInt64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n-5.06404\n1.8\n0.837248\n0\n-0.619897\n1.88327\n3.43257\n1.40854\n0.0\n5.69036\n0.454865\n3.969\n2.23159\n3.17805\n\n\n2\n-3.6005\n0.0\n1.95586\n0\n-0.757153\n1.85957\n5.52958\n1.60284\n0.693147\n5.48894\n1.23645\n3.969\n3.02324\n3.07269\n\n\n3\n-3.60123\n0.0\n1.95586\n0\n-0.757153\n1.972\n2.91812\n1.60284\n0.693147\n5.48894\n1.23645\n3.9283\n2.00749\n3.54674\n\n\n4\n-3.43052\n0.0\n0.779325\n0\n-0.780886\n1.94562\n1.41959\n1.80207\n1.09861\n5.40268\n1.77224\n3.9463\n1.71464\n3.50856\n\n\n5\n-2.67292\n0.0\n0.779325\n0\n-0.780886\n1.96669\n2.16271\n1.80207\n1.09861\n5.40268\n1.77224\n3.969\n2.30868\n3.58906\n\n\n6\n-3.51157\n0.0\n0.779325\n0\n-0.780886\n1.86097\n2.63995\n1.80207\n1.09861\n5.40268\n1.77224\n3.9412\n2.28254\n3.3569\n\n\n7\n-2.42713\n1.25\n2.06306\n0\n-0.646264\n1.79376\n3.61981\n1.71569\n1.60944\n5.73979\n0.437029\n3.956\n3.52562\n3.13114\n\n\n8\n-1.93413\n1.25\n2.06306\n0\n-0.646264\n1.82002\n9.05333\n1.78348\n1.60944\n5.73979\n0.437029\n3.969\n4.37607\n3.29953\n\n\n9\n-1.55476\n1.25\n2.06306\n0\n-0.646264\n1.72829\n10.0\n1.80535\n1.60944\n5.73979\n0.437029\n3.8663\n5.47083\n2.80336\n\n\n10\n-1.77172\n1.25\n2.06306\n0\n-0.646264\n1.79243\n6.83885\n1.88587\n1.60944\n5.73979\n0.437029\n3.8671\n4.13521\n2.93916"
  },
  {
    "objectID": "posts/videogame-analysis/tidier-method.html",
    "href": "posts/videogame-analysis/tidier-method.html",
    "title": "Video Game Data Visualization-Tidier.jl",
    "section": "",
    "text": "简介\n\n\n\nref :Video games sales analysis and visualization"
  },
  {
    "objectID": "posts/videogame-analysis/tidier-method.html#load-package",
    "href": "posts/videogame-analysis/tidier-method.html#load-package",
    "title": "Video Game Data Visualization-Tidier.jl",
    "section": "1. load package",
    "text": "1. load package\n\ninclude(\"../utils.jl\")   # import load_csv method\n\n(marker = :circle, markersize = 12, color = (:green, 0.2), strokewidth = 1, strokecolor = :black)"
  },
  {
    "objectID": "posts/videogame-analysis/tidier-method.html#load-data",
    "href": "posts/videogame-analysis/tidier-method.html#load-data",
    "title": "Video Game Data Visualization-Tidier.jl",
    "section": "2. load data",
    "text": "2. load data\n\ndf =load_csv(\"vgsales\",false)\n@pipe names(df)|&gt;lowercase.(_)|&gt;rename!(df,_)\n\n16598×11 DataFrame16573 rows omitted\n\n\n\nRow\nrank\nname\nplatform\nyear\ngenre\npublisher\nna_sales\neu_sales\njp_sales\nother_sales\nglobal_sales\n\n\n\nInt64\nString\nString7\nString7\nString15\nString\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n1\nWii Sports\nWii\n2006\nSports\nNintendo\n41.49\n29.02\n3.77\n8.46\n82.74\n\n\n2\n2\nSuper Mario Bros.\nNES\n1985\nPlatform\nNintendo\n29.08\n3.58\n6.81\n0.77\n40.24\n\n\n3\n3\nMario Kart Wii\nWii\n2008\nRacing\nNintendo\n15.85\n12.88\n3.79\n3.31\n35.82\n\n\n4\n4\nWii Sports Resort\nWii\n2009\nSports\nNintendo\n15.75\n11.01\n3.28\n2.96\n33.0\n\n\n5\n5\nPokemon Red/Pokemon Blue\nGB\n1996\nRole-Playing\nNintendo\n11.27\n8.89\n10.22\n1.0\n31.37\n\n\n6\n6\nTetris\nGB\n1989\nPuzzle\nNintendo\n23.2\n2.26\n4.22\n0.58\n30.26\n\n\n7\n7\nNew Super Mario Bros.\nDS\n2006\nPlatform\nNintendo\n11.38\n9.23\n6.5\n2.9\n30.01\n\n\n8\n8\nWii Play\nWii\n2006\nMisc\nNintendo\n14.03\n9.2\n2.93\n2.85\n29.02\n\n\n9\n9\nNew Super Mario Bros. Wii\nWii\n2009\nPlatform\nNintendo\n14.59\n7.06\n4.7\n2.26\n28.62\n\n\n10\n10\nDuck Hunt\nNES\n1984\nShooter\nNintendo\n26.93\n0.63\n0.28\n0.47\n28.31\n\n\n11\n11\nNintendogs\nDS\n2005\nSimulation\nNintendo\n9.07\n11.0\n1.93\n2.75\n24.76\n\n\n12\n12\nMario Kart DS\nDS\n2005\nRacing\nNintendo\n9.81\n7.57\n4.13\n1.92\n23.42\n\n\n13\n13\nPokemon Gold/Pokemon Silver\nGB\n1999\nRole-Playing\nNintendo\n9.0\n6.18\n7.2\n0.71\n23.1\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n16587\n16589\nSecret Files 2: Puritas Cordis\nDS\n2009\nAdventure\nDeep Silver\n0.0\n0.01\n0.0\n0.0\n0.01\n\n\n16588\n16590\nMezase!! Tsuri Master DS\nDS\n2009\nSports\nHudson Soft\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16589\n16591\nMega Brain Boost\nDS\n2008\nPuzzle\nMajesco Entertainment\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16590\n16592\nChou Ezaru wa Akai Hana: Koi wa Tsuki ni Shirube Kareru\nPSV\n2016\nAction\ndramatic create\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16591\n16593\nEiyuu Densetsu: Sora no Kiseki Material Collection Portable\nPSP\n2007\nRole-Playing\nFalcom Corporation\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16592\n16594\nMyst IV: Revelation\nPC\n2004\nAdventure\nUbisoft\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16593\n16595\nPlushees\nDS\n2008\nSimulation\nDestineer\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16594\n16596\nWoody Woodpecker in Crazy Castle 5\nGBA\n2002\nPlatform\nKemco\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16595\n16597\nMen in Black II: Alien Escape\nGC\n2003\nShooter\nInfogrames\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16596\n16598\nSCORE International Baja 1000: The Official Game\nPS2\n2008\nRacing\nActivision\n0.0\n0.0\n0.0\n0.0\n0.01\n\n\n16597\n16599\nKnow How 2\nDS\n2010\nPuzzle\n7G//AMES\n0.0\n0.01\n0.0\n0.0\n0.01\n\n\n16598\n16600\nSpirits & Spells\nGBA\n2003\nPlatform\nWanadoo\n0.01\n0.0\n0.0\n0.0\n0.01"
  },
  {
    "objectID": "posts/videogame-analysis/tidier-method.html#data-visualization",
    "href": "posts/videogame-analysis/tidier-method.html#data-visualization",
    "title": "Video Game Data Visualization-Tidier.jl",
    "section": "3. data visualization",
    "text": "3. data visualization\n\n3.1 What genre games have been made the most?\n\ndf1=@chain df begin\n    @group_by(genre)\n    @summarize(counts =nrow())\n    @arrange(desc(counts))\nend\n\n12×2 DataFrame\n\n\n\nRow\ngenre\ncounts\n\n\n\nString15\nInt64\n\n\n\n\n1\nAction\n3316\n\n\n2\nSports\n2346\n\n\n3\nMisc\n1739\n\n\n4\nRole-Playing\n1488\n\n\n5\nShooter\n1310\n\n\n6\nAdventure\n1286\n\n\n7\nRacing\n1249\n\n\n8\nPlatform\n886\n\n\n9\nSimulation\n867\n\n\n10\nFighting\n848\n\n\n11\nStrategy\n681\n\n\n12\nPuzzle\n582\n\n\n\n\n\n\n\nfunction plot_df3_1(df::AbstractDataFrame)\n    rows,_=size(df)\n    featrues=names(df)\n    fig=Figure(resolution=(500,600))\n    ax=Axis(fig[1,1],title=\"counts of game by genre\")\n    ax.yticks=(1:rows,df.genre)\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"genre\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x)\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_1(df1)\n\n\n\n\n\n\n\n\n\n\n3.2 Which year had the most game release?\n\ndf2=@chain df begin\n    @group_by(year)\n    @summarize(counts =nrow())\n    @arrange(desc(counts))\nend\n\n40×2 DataFrame15 rows omitted\n\n\n\nRow\nyear\ncounts\n\n\n\nString7\nInt64\n\n\n\n\n1\n2009\n1431\n\n\n2\n2008\n1428\n\n\n3\n2010\n1259\n\n\n4\n2007\n1202\n\n\n5\n2011\n1139\n\n\n6\n2006\n1008\n\n\n7\n2005\n941\n\n\n8\n2002\n829\n\n\n9\n2003\n775\n\n\n10\n2004\n763\n\n\n11\n2012\n657\n\n\n12\n2015\n614\n\n\n13\n2014\n582\n\n\n⋮\n⋮\n⋮\n\n\n29\n1982\n36\n\n\n30\n1986\n21\n\n\n31\n1983\n17\n\n\n32\n1989\n17\n\n\n33\n1987\n16\n\n\n34\n1990\n16\n\n\n35\n1988\n15\n\n\n36\n1984\n14\n\n\n37\n1985\n14\n\n\n38\n1980\n9\n\n\n39\n2017\n3\n\n\n40\n2020\n1\n\n\n\n\n\n\n\nfunction plot_df3_2(df::AbstractDataFrame,cat::String=\"year\")\n    @assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(500,800))\n    ax=Axis(fig[1,1],title=\"count game by year\")\n    ax.yticks=(1:rows,df[:,cat])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"$cat\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x)\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\n\nplot_df3_2(df2)\n\n\n\n\n\n\n\n\n\n\n3.3 Top 5 years games release by genre\n\n\"\"\"\nloading ....\n\"\"\"\n\n\"loading ....\\n\"\n\n\n\n\n3.4 Which year had the highest sales worldwide?\n\ndf4=@chain df begin\n    @group_by(year)\n    @summarize(sales =sum(global_sales))\n    @arrange(desc(sales))\nend\n\n40×2 DataFrame15 rows omitted\n\n\n\nRow\nyear\nsales\n\n\n\nString7\nFloat64\n\n\n\n\n1\n2008\n678.9\n\n\n2\n2009\n667.3\n\n\n3\n2007\n611.13\n\n\n4\n2010\n600.45\n\n\n5\n2006\n521.04\n\n\n6\n2011\n515.99\n\n\n7\n2005\n459.94\n\n\n8\n2004\n419.31\n\n\n9\n2002\n395.52\n\n\n10\n2013\n368.11\n\n\n11\n2012\n363.54\n\n\n12\n2003\n357.85\n\n\n13\n2014\n337.05\n\n\n⋮\n⋮\n⋮\n\n\n29\n1990\n49.39\n\n\n30\n1988\n47.22\n\n\n31\n1993\n45.98\n\n\n32\n1986\n37.07\n\n\n33\n1981\n35.77\n\n\n34\n1991\n32.23\n\n\n35\n1982\n28.86\n\n\n36\n1987\n21.74\n\n\n37\n1983\n16.79\n\n\n38\n1980\n11.38\n\n\n39\n2020\n0.29\n\n\n40\n2017\n0.05\n\n\n\n\n\n\n\nfunction plot_df3_4(df::AbstractDataFrame)\n    rows=nrow(df)\n    fig=Figure(resolution=(500,700))\n    ax=Axis(fig[1,1],title=\"video game global sales\")\n    ax.yticks=(1:rows,df[:,\"year\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"year\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,direction=:x)\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_4(df4)\n\n\n\n\n\n\n\n\n\n\n3.5 Which genre game has been released the most in a single year?\n\ndf5=@chain df begin\n    @group_by(year,genre)\n    @summarize(counts =nrow())\n    @arrange(desc(counts)) # 在每个组中按数量降序排列\n    @slice(1)              # 每组最多发布游戏的一行\n    @ungroup\nend\n\n40×3 DataFrame15 rows omitted\n\n\n\nRow\nyear\ngenre\ncounts\n\n\n\nString7\nString15\nInt64\n\n\n\n\n1\n1980\nMisc\n4\n\n\n2\n1981\nAction\n25\n\n\n3\n1982\nAction\n18\n\n\n4\n1983\nAction\n7\n\n\n5\n1984\nPuzzle\n3\n\n\n6\n1985\nPlatform\n4\n\n\n7\n1986\nAction\n6\n\n\n8\n1987\nSports\n4\n\n\n9\n1988\nPlatform\n4\n\n\n10\n1989\nPuzzle\n5\n\n\n11\n1990\nAction\n3\n\n\n12\n1991\nSports\n7\n\n\n13\n1992\nFighting\n7\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n29\n2008\nAction\n221\n\n\n30\n2009\nAction\n272\n\n\n31\n2010\nAction\n226\n\n\n32\n2011\nAction\n239\n\n\n33\n2012\nAction\n266\n\n\n34\n2013\nAction\n148\n\n\n35\n2014\nAction\n186\n\n\n36\n2015\nAction\n255\n\n\n37\n2016\nAction\n119\n\n\n38\n2017\nRole-Playing\n2\n\n\n39\n2020\nSimulation\n1\n\n\n40\nN/A\nAction\n63\n\n\n\n\n\n\n\n    function plot_df3_5(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(1000,900))\n    ax=Axis(fig[1,1],title=\"video game most release in single year\")\n    ax.yticks=(1:rows,df[:,\"year\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"release\"\n    ax.ylabel=\"year\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x\n    \n    )\n    for (idx, row) in enumerate(eachrow(df))\n        counts,year,genre=row.counts,row.year,row.genre\n        GLMakie.text!(ax,counts+2,idx; text=\"$genre-$year\",align = (:left, :center),fontsize=8)\n    end\n    \n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend    \n plot_df3_5(df5)\n\n\n\n\n\n\n\n\n\n3.6 Which genre game has sold the most in a single year?\n\ndf6=@chain df begin\n    @group_by(year,genre)\n    @summarize(sales =sum(global_sales))\n    @arrange(desc(sales)) # 在每个组中按全球销售额降序排列\n    @slice(1)              # 每组销量最多的\n    @ungroup\nend\n\n40×3 DataFrame15 rows omitted\n\n\n\nRow\nyear\ngenre\nsales\n\n\n\nString7\nString15\nFloat64\n\n\n\n\n1\n1980\nShooter\n7.07\n\n\n2\n1981\nAction\n14.84\n\n\n3\n1982\nPuzzle\n10.03\n\n\n4\n1983\nPlatform\n6.93\n\n\n5\n1984\nShooter\n31.1\n\n\n6\n1985\nPlatform\n43.17\n\n\n7\n1986\nAction\n13.74\n\n\n8\n1987\nFighting\n5.42\n\n\n9\n1988\nPlatform\n27.73\n\n\n10\n1989\nPuzzle\n37.75\n\n\n11\n1990\nPlatform\n22.97\n\n\n12\n1991\nPlatform\n7.64\n\n\n13\n1992\nFighting\n15.25\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n29\n2008\nAction\n136.39\n\n\n30\n2009\nAction\n139.36\n\n\n31\n2010\nAction\n117.64\n\n\n32\n2011\nAction\n118.96\n\n\n33\n2012\nAction\n122.04\n\n\n34\n2013\nAction\n125.22\n\n\n35\n2014\nAction\n99.02\n\n\n36\n2015\nAction\n70.7\n\n\n37\n2016\nAction\n19.91\n\n\n38\n2017\nRole-Playing\n0.04\n\n\n39\n2020\nSimulation\n0.29\n\n\n40\nN/A\nAction\n28.3\n\n\n\n\n\n\n\n\n\n3.7 Which genre game have the highest sale price globally?\n\ndf7=@chain df begin\n    @group_by(genre)\n    @summarize(sales =sum(global_sales))\n    @arrange(desc(sales)) # 在每个组中按全球销售额降序排列\n             # 每组销量最对的\n    @ungroup\nend\n\n12×2 DataFrame\n\n\n\nRow\ngenre\nsales\n\n\n\nString15\nFloat64\n\n\n\n\n1\nAction\n1751.18\n\n\n2\nSports\n1330.93\n\n\n3\nShooter\n1037.37\n\n\n4\nRole-Playing\n927.37\n\n\n5\nPlatform\n831.37\n\n\n6\nMisc\n809.96\n\n\n7\nRacing\n732.04\n\n\n8\nFighting\n448.91\n\n\n9\nSimulation\n392.2\n\n\n10\nPuzzle\n244.95\n\n\n11\nAdventure\n239.04\n\n\n12\nStrategy\n175.12\n\n\n\n\n\n\n\nfunction plot_df3_7(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,500))\n    ax=Axis(fig[1,1],title=\"video game sales champion by genre\")\n    ax.yticks=(1:rows,df[:,\"genre\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"genre\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,direction=:x,\n    bar_labels=:y )\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_7(df7)\n\n\n\n\n\n\n\n\n\n\n3.8 Which platfrom have the highest sale price globally?\n\ndf8=@chain df begin\n    @group_by(platform)\n    @summarize(sales =sum(global_sales))\n    @arrange(desc(sales)) # 在每个组中按全球销售额降序排列\n    @ungroup\nend\n\n31×2 DataFrame6 rows omitted\n\n\n\nRow\nplatform\nsales\n\n\n\nString7\nFloat64\n\n\n\n\n1\nPS2\n1255.64\n\n\n2\nX360\n979.96\n\n\n3\nPS3\n957.84\n\n\n4\nWii\n926.71\n\n\n5\nDS\n822.49\n\n\n6\nPS\n730.66\n\n\n7\nGBA\n318.5\n\n\n8\nPSP\n296.28\n\n\n9\nPS4\n278.1\n\n\n10\nPC\n258.82\n\n\n11\nXB\n258.26\n\n\n12\nGB\n255.45\n\n\n13\nNES\n251.07\n\n\n⋮\n⋮\n⋮\n\n\n20\nWiiU\n81.86\n\n\n21\nPSV\n61.93\n\n\n22\nSAT\n33.59\n\n\n23\nGEN\n28.36\n\n\n24\nDC\n15.97\n\n\n25\nSCD\n1.87\n\n\n26\nNG\n1.44\n\n\n27\nWS\n1.42\n\n\n28\nTG16\n0.16\n\n\n29\n3DO\n0.1\n\n\n30\nGG\n0.04\n\n\n31\nPCFX\n0.03\n\n\n\n\n\n\n\nfunction plot_df3_8(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(600,800))\n    ax=Axis(fig[1,1],title=\"video game sales by Platform\")\n    ax.yticks=(1:rows,df[:,\"platform\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"platform\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,direction=:x,\n    bar_labels=:y )\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\n\nplot_df3_8(df8)\n\n\n\n\n\n\n\n\n\n\n3.9 Which individual game have the highest sale price globally?\n\ndf9=@chain df begin\n    @select(name,year,global_sales)\n    @arrange(desc(global_sales)) # 在每个组中按全球销售额降序排列\n    @slice(1:20)\nend\n\n20×3 DataFrame\n\n\n\nRow\nname\nyear\nglobal_sales\n\n\n\nString\nString7\nFloat64\n\n\n\n\n1\nWii Sports\n2006\n82.74\n\n\n2\nSuper Mario Bros.\n1985\n40.24\n\n\n3\nMario Kart Wii\n2008\n35.82\n\n\n4\nWii Sports Resort\n2009\n33.0\n\n\n5\nPokemon Red/Pokemon Blue\n1996\n31.37\n\n\n6\nTetris\n1989\n30.26\n\n\n7\nNew Super Mario Bros.\n2006\n30.01\n\n\n8\nWii Play\n2006\n29.02\n\n\n9\nNew Super Mario Bros. Wii\n2009\n28.62\n\n\n10\nDuck Hunt\n1984\n28.31\n\n\n11\nNintendogs\n2005\n24.76\n\n\n12\nMario Kart DS\n2005\n23.42\n\n\n13\nPokemon Gold/Pokemon Silver\n1999\n23.1\n\n\n14\nWii Fit\n2007\n22.72\n\n\n15\nWii Fit Plus\n2009\n22.0\n\n\n16\nKinect Adventures!\n2010\n21.82\n\n\n17\nGrand Theft Auto V\n2013\n21.4\n\n\n18\nGrand Theft Auto: San Andreas\n2004\n20.81\n\n\n19\nSuper Mario World\n1990\n20.61\n\n\n20\nBrain Age: Train Your Brain in Minutes a Day\n2005\n20.22\n\n\n\n\n\n\n\nfunction plot_top20_game(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,800))\n    ax=Axis(fig[1,1],title=\"global sales top 20\")\n    ax.yticks=(1:rows,df[:,\"name\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"name\"\n    GLMakie.barplot!(ax,1:rows,df.global_sales;color = df.global_sales, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        name,year,sales=row.name,row.year,row.global_sales\n        GLMakie.text!(ax,sales+2,idx; text=\"$year-$sales\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_top20_game(df9)\n\n\n\n\n\n\n\n\n\n\n3.10 Sales compearison by genre\n\ndf3_10=@chain df begin\n    @select(genre,na_sales,eu_sales,jp_sales,other_sales)\n    @group_by(genre)\n    @summarize(na_sales = sum(na_sales), eu_sales = sum(eu_sales),jp_sales=sum(jp_sales),other_sales=sum(other_sales))\n    @ungroup\nend\n\n12×5 DataFrame\n\n\n\nRow\ngenre\nna_sales\neu_sales\njp_sales\nother_sales\n\n\n\nString15\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nAction\n877.83\n525.0\n159.95\n187.38\n\n\n2\nAdventure\n105.8\n64.13\n52.07\n16.81\n\n\n3\nFighting\n223.59\n101.32\n87.35\n36.68\n\n\n4\nMisc\n410.24\n215.98\n107.76\n75.32\n\n\n5\nPlatform\n447.05\n201.63\n130.77\n51.59\n\n\n6\nPuzzle\n123.78\n50.78\n57.31\n12.55\n\n\n7\nRacing\n359.42\n238.39\n56.69\n77.27\n\n\n8\nRole-Playing\n327.28\n188.06\n352.31\n59.61\n\n\n9\nShooter\n582.6\n313.27\n38.28\n102.69\n\n\n10\nSimulation\n183.31\n113.38\n63.7\n31.52\n\n\n11\nSports\n683.35\n376.85\n135.37\n134.97\n\n\n12\nStrategy\n68.7\n45.34\n49.46\n11.36\n\n\n\n\n\n\n\nfunction plot_df3_10_heatmap(df::AbstractDataFrame)\n    genre=df.genre\n    data=@pipe select(df,Not(:genre))\n    row,col=size(data)\n    ma=@pipe Matrix(data)|&gt;round.(_,digits=1)\n    fig=Figure(resolution=(1000,400))\n    ax=Axis(fig[1,1],title=\"video game sales heatmap\")\n    ax.yticks=(1:col,names(data))\n    ax.xticks=(1:row,genre)\n    heatmap!(ax,ma)\n    [GLMakie.text!(ax,i,j;text=\"$(ma[i,j])\",align = (:center, :center),fontsize=12,color=:white) for i in 1:row,j in 1:col]\n\n    fig\nend\nplot_df3_10_heatmap(df3_10)\n\n\n\n\n\n\n\n\n\nres10=@pipe df3_10|&gt;select(_,Not(:genre))|&gt;Matrix|&gt;permutedims|&gt;reshape(_,(48,1))|&gt;_[:,1]\ncats=@pipe df3_10|&gt;select(_,Not(:genre))|&gt;names\ntype_name=df3_10.genre\ngrp=repeat(1:4, 12)\ngrp_x=repeat(1:12,inner=4)\ncolors = cgrad(:tab10)\nfunction plot_df3_10_bardodge()\n    fig=Figure(resolution=(1000,600))\n    ax=Axis(fig[1,1],title=\"video game sales  barplot dodge\",xticklabelrotation = pi/8)\n    ax.xticks=(1:12,type_name)\n    GLMakie.barplot!(ax,grp_x,res10; dodge =grp,color=colors[grp],strokecolor = :black, strokewidth = 1,bar_labels = :y,label_rotation=1/2*pi)\n    labels = [\"$i\" for i in cats]\n    elements = [PolyElement(polycolor = colors[i]) for (i,c) in enumerate(cats)]\n   Legend(fig[1,2], elements, labels, \"sales region\", orientation=:vertical, tellwidth = true, tellheight =false)\n    fig\nend\nplot_df3_10_bardodge()\n\n\n\n\n\n\n\n\n\n\n3.11 Sales compearison by platform\n\ndf3_11=@chain df begin\n    @select(platform,na_sales,eu_sales,jp_sales,other_sales)\n    @group_by(platform)\n    @summarize(na_sales = sum(na_sales), eu_sales = sum(eu_sales),jp_sales=sum(jp_sales),other_sales=sum(other_sales))\n    @ungroup\nend\n\n31×5 DataFrame6 rows omitted\n\n\n\nRow\nplatform\nna_sales\neu_sales\njp_sales\nother_sales\n\n\n\nString7\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n2600\n90.6\n5.47\n0.0\n0.91\n\n\n2\n3DO\n0.0\n0.0\n0.1\n0.0\n\n\n3\n3DS\n78.87\n58.52\n97.35\n12.63\n\n\n4\nDC\n5.43\n1.69\n8.56\n0.27\n\n\n5\nDS\n390.71\n194.65\n175.57\n60.53\n\n\n6\nGB\n114.32\n47.82\n85.12\n8.2\n\n\n7\nGBA\n187.54\n75.25\n47.33\n7.73\n\n\n8\nGC\n133.46\n38.71\n21.58\n5.18\n\n\n9\nGEN\n19.27\n5.52\n2.67\n0.89\n\n\n10\nGG\n0.0\n0.0\n0.04\n0.0\n\n\n11\nN64\n139.02\n41.06\n34.22\n4.38\n\n\n12\nNES\n125.94\n21.15\n98.65\n5.31\n\n\n13\nNG\n0.0\n0.0\n1.44\n0.0\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n20\nPSP\n108.99\n68.25\n76.79\n42.19\n\n\n21\nPSV\n16.2\n16.33\n20.96\n8.45\n\n\n22\nSAT\n0.72\n0.54\n32.26\n0.07\n\n\n23\nSCD\n1.0\n0.36\n0.45\n0.05\n\n\n24\nSNES\n61.23\n19.04\n116.55\n3.22\n\n\n25\nTG16\n0.0\n0.0\n0.16\n0.0\n\n\n26\nWS\n0.0\n0.0\n1.42\n0.0\n\n\n27\nWii\n507.71\n268.38\n69.35\n80.61\n\n\n28\nWiiU\n38.32\n24.23\n12.79\n6.45\n\n\n29\nX360\n601.05\n280.58\n12.43\n85.54\n\n\n30\nXB\n186.69\n60.95\n1.38\n8.72\n\n\n31\nXOne\n83.19\n45.65\n0.34\n11.92\n\n\n\n\n\n\n\nlet\n    res11 = @pipe df3_11 |&gt; select(_, Not(:platform)) |&gt; Matrix |&gt; permutedims |&gt; reshape(_, (124, 1)) |&gt; _[:, 1]\n    cats = @pipe df3_11 |&gt; select(_, Not(:platform)) |&gt; names\n    type_name = df3_11.platform\n    grp = repeat(1:4, 31)\n    grp_x = repeat(1:31, inner=4)\n    colors = cgrad(:tab10)\n\n    function plot_platform_dodge()\n        fig = Figure(resolution=(1800, 600))\n        ax = Axis(fig[1, 1], title=\"video game sales by platform\", xticklabelrotation=pi / 8)\n        ax.xticks = (1:31, type_name)\n        GLMakie.barplot!(ax, grp_x, res11; dodge=grp, color=colors[grp], strokecolor=:black, strokewidth=1, bar_labels=:y, label_rotation=1 / 2 * pi)\n        labels = [\"$i\" for i in cats]\n        elements = [PolyElement(polycolor=colors[i]) for (i, c) in enumerate(cats)]\n        Legend(fig[1, 2], elements, labels, \"sales region\", orientation=:vertical, tellwidth=true, tellheight=false)\n        fig\n    end\n\n   plot_platform_dodge()\nend\n\n\n\n\n\n\n\n\n\n\n3.12 Top 20 Publisher\n\ndf12=@chain df begin\n    @group_by(publisher)\n    @summarize(counts =nrow())\n    @arrange(desc(counts))\n    @slice 1:20\nend\n\n20×2 DataFrame\n\n\n\nRow\npublisher\ncounts\n\n\n\nString\nInt64\n\n\n\n\n1\nElectronic Arts\n1351\n\n\n2\nActivision\n975\n\n\n3\nNamco Bandai Games\n932\n\n\n4\nUbisoft\n921\n\n\n5\nKonami Digital Entertainment\n832\n\n\n6\nTHQ\n715\n\n\n7\nNintendo\n703\n\n\n8\nSony Computer Entertainment\n683\n\n\n9\nSega\n639\n\n\n10\nTake-Two Interactive\n413\n\n\n11\nCapcom\n381\n\n\n12\nAtari\n363\n\n\n13\nTecmo Koei\n338\n\n\n14\nSquare Enix\n233\n\n\n15\nWarner Bros. Interactive Entertainment\n232\n\n\n16\nDisney Interactive Studios\n218\n\n\n17\nUnknown\n203\n\n\n18\nEidos Interactive\n198\n\n\n19\nMidway Games\n198\n\n\n20\n505 Games\n192\n\n\n\n\n\n\n\nfunction plot_top20_publisher(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,800))\n    ax=Axis(fig[1,1],title=\"global sales top 20\")\n    ax.yticks=(1:rows,df[:,\"publisher\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"publiser\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        publisher,counts=row.publisher,row.counts\n        GLMakie.text!(ax,counts+2,idx; text=\"$counts\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_top20_publisher(df12)\n\n\n\n\n\n\n\n\n\n\n3.13 Top global sales by publisher\n\ndf13=@chain df begin\n    @group_by publisher \n    @summarize sales=sum(global_sales)\n    @arrange desc(sales)\n    @slice 1:20\nend\n\n20×2 DataFrame\n\n\n\nRow\npublisher\nsales\n\n\n\nString\nFloat64\n\n\n\n\n1\nNintendo\n1786.56\n\n\n2\nElectronic Arts\n1110.32\n\n\n3\nActivision\n727.46\n\n\n4\nSony Computer Entertainment\n607.5\n\n\n5\nUbisoft\n474.72\n\n\n6\nTake-Two Interactive\n399.54\n\n\n7\nTHQ\n340.77\n\n\n8\nKonami Digital Entertainment\n283.64\n\n\n9\nSega\n272.99\n\n\n10\nNamco Bandai Games\n254.09\n\n\n11\nMicrosoft Game Studios\n245.79\n\n\n12\nCapcom\n200.89\n\n\n13\nAtari\n157.22\n\n\n14\nWarner Bros. Interactive Entertainment\n153.89\n\n\n15\nSquare Enix\n145.18\n\n\n16\nDisney Interactive Studios\n119.96\n\n\n17\nEidos Interactive\n98.98\n\n\n18\nLucasArts\n87.34\n\n\n19\nBethesda Softworks\n82.14\n\n\n20\nMidway Games\n69.85\n\n\n\n\n\n\n\nfunction plot_df3_13(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,500))\n    ax=Axis(fig[1,1],title=\"video game sales by publisher\",yreversed=true)\n    ax.yticks=(1:rows,df[:,\"publisher\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"pubhisher\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        sales=round(row.sales,digits=2)\n        GLMakie.text!(ax,sales+2,idx; text=\"$(sales)\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_13(df13)\n\n\n\n\n\n\n\n\n\n\n3.14 publisher comparison\n\ndf3_14=@chain df begin\n    @group_by(publisher)\n    @summarize( na_sales = sum(na_sales), \n                eu_sales = sum(eu_sales),\n                jp_sales=sum(jp_sales),\n                other_sales=sum(other_sales),\n                global_sales=sum(global_sales)\n    )\n    @arrange desc(global_sales)\n    @slice 1:15\nend\n\n15×6 DataFrame\n\n\n\nRow\npublisher\nna_sales\neu_sales\njp_sales\nother_sales\nglobal_sales\n\n\n\nString\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nNintendo\n816.87\n418.74\n455.42\n95.33\n1786.56\n\n\n2\nElectronic Arts\n595.07\n371.27\n14.04\n129.77\n1110.32\n\n\n3\nActivision\n429.7\n215.53\n6.54\n75.34\n727.46\n\n\n4\nSony Computer Entertainment\n265.22\n187.72\n74.1\n80.45\n607.5\n\n\n5\nUbisoft\n253.43\n163.32\n7.5\n50.26\n474.72\n\n\n6\nTake-Two Interactive\n220.49\n118.14\n5.83\n55.24\n399.54\n\n\n7\nTHQ\n208.77\n94.73\n5.01\n32.14\n340.77\n\n\n8\nKonami Digital Entertainment\n92.16\n69.69\n91.3\n30.31\n283.64\n\n\n9\nSega\n109.4\n82.0\n57.03\n24.52\n272.99\n\n\n10\nNamco Bandai Games\n69.52\n42.63\n127.07\n14.69\n254.09\n\n\n11\nMicrosoft Game Studios\n155.35\n68.61\n3.26\n18.56\n245.79\n\n\n12\nCapcom\n78.59\n39.22\n68.08\n14.84\n200.89\n\n\n13\nAtari\n110.04\n27.12\n10.71\n9.01\n157.22\n\n\n14\nWarner Bros. Interactive Entertainment\n81.18\n53.12\n1.04\n18.56\n153.89\n\n\n15\nSquare Enix\n48.65\n32.82\n49.88\n13.89\n145.18\n\n\n\n\n\n\n\nres14 = @pipe df3_14 |&gt; select(_, Not(:publisher,:global_sales)) |&gt; Matrix |&gt; permutedims|&gt; reshape(_, (60, 1)) |&gt; _[:, 1]|&gt;round.(_,digits=2)\ncats = @pipe df3_14 |&gt; select(_, Not(:publisher,:global_sales)) |&gt; names\ntype_name = df3_14.publisher\ngrp = repeat(1:4, 15)\ngrp_x = repeat(1:15, inner=4)\ncolors = cgrad(:tab10)\nfunction plot_df3_14_bardodge()\n    fig=Figure(resolution=(1200,600))\n    ax=Axis(fig[1,1],title=\"video game sales  by publisher\",xticklabelrotation = pi/6)\n    ax.xticks=(1:15,type_name)\n    GLMakie.barplot!(ax,grp_x,res14; dodge =grp,color=colors[grp],strokecolor = :black, strokewidth = 1,bar_labels = :y,label_rotation=1/2*pi)\n    labels = [\"$i\" for i in cats]\n    elements = [PolyElement(polycolor = colors[i]) for (i,c) in enumerate(cats)]\n   Legend(fig[1,2], elements, labels, \"sales region\", orientation=:vertical, tellwidth = true, tellheight =false)\n    fig\nend\nplot_df3_14_bardodge()\n\n\n\n\n\n\n\n\n\n\n3.15 Top publisher by Count each year\n\ndf15=@chain df begin\n    @select(year,publisher)\n    @group_by(year,publisher)\n    @summarize(nrow =nrow())\n    @arrange(desc(nrow)) # 在每个组中按全球销售额降序排列\n    @slice(1)              # 每组销量最多的\n    @ungroup\nend\n\n40×3 DataFrame15 rows omitted\n\n\n\nRow\nyear\npublisher\nnrow\n\n\n\nString7\nString\nInt64\n\n\n\n\n1\n1980\nActivision\n5\n\n\n2\n1981\nAtari\n11\n\n\n3\n1982\nAtari\n14\n\n\n4\n1983\nAtari\n6\n\n\n5\n1984\nNintendo\n9\n\n\n6\n1985\nNintendo\n7\n\n\n7\n1986\nNintendo\n6\n\n\n8\n1987\nAtari\n4\n\n\n9\n1988\nNintendo\n6\n\n\n10\n1989\nNintendo\n9\n\n\n11\n1990\nNintendo\n7\n\n\n12\n1991\nNintendo\n13\n\n\n13\n1992\nNintendo\n10\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n29\n2008\nElectronic Arts\n120\n\n\n30\n2009\nActivision\n121\n\n\n31\n2010\nActivision\n89\n\n\n32\n2011\nUbisoft\n87\n\n\n33\n2012\nNamco Bandai Games\n85\n\n\n34\n2013\nNamco Bandai Games\n63\n\n\n35\n2014\nNamco Bandai Games\n69\n\n\n36\n2015\nNamco Bandai Games\n68\n\n\n37\n2016\nNamco Bandai Games\n40\n\n\n38\n2017\nSega\n2\n\n\n39\n2020\nUbisoft\n1\n\n\n40\nN/A\nUnknown\n103\n\n\n\n\n\n\n\nfunction plot_df3_15(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,800))\n    ax=Axis(fig[1,1],title=\"publiher champion by year\")\n    ax.yticks=(1:rows,df[:,\"year\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"name\"\n    GLMakie.barplot!(ax,1:rows,df.nrow;color = df.nrow, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        publisher,nrow,year=row.publisher,row.nrow,row.year\n        GLMakie.text!(ax,nrow+2,idx; text=\"$publisher-$nrow\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_15(df15)\n\n\n\n\n\n\n\n\n\n\n3.16 Total revenue by region\n\ndf3_16=@chain df begin\n    @select(na_sales,eu_sales,jp_sales,other_sales,global_sales)\n    \n    @summarize( na_sales = sum(na_sales), \n                eu_sales = sum(eu_sales),\n                jp_sales=sum(jp_sales),\n                other_sales=sum(other_sales),\n                global_sales=sum(global_sales)\n    )\nend\n#df3_16.region=[\"na_sales\", \"eu_sales\", \"jp_sales\", \"other_sales\",\"global_sales\"]\n\n1×5 DataFrame\n\n\n\nRow\nna_sales\neu_sales\njp_sales\nother_sales\nglobal_sales\n\n\n\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n4392.95\n2434.13\n1291.02\n797.75\n8920.44\n\n\n\n\n\n\n\n\n3.17 Sales Histogram\n\n# 在@chain 中做转换是可以的, 但是要处理-Inf 的问题 log(0)==-Inf,所以放到绘图时处理\ndf17=@chain df begin\n    @select(na_sales,eu_sales,jp_sales,other_sales,global_sales)\nend\n\n16598×5 DataFrame16573 rows omitted\n\n\n\nRow\nna_sales\neu_sales\njp_sales\nother_sales\nglobal_sales\n\n\n\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n41.49\n29.02\n3.77\n8.46\n82.74\n\n\n2\n29.08\n3.58\n6.81\n0.77\n40.24\n\n\n3\n15.85\n12.88\n3.79\n3.31\n35.82\n\n\n4\n15.75\n11.01\n3.28\n2.96\n33.0\n\n\n5\n11.27\n8.89\n10.22\n1.0\n31.37\n\n\n6\n23.2\n2.26\n4.22\n0.58\n30.26\n\n\n7\n11.38\n9.23\n6.5\n2.9\n30.01\n\n\n8\n14.03\n9.2\n2.93\n2.85\n29.02\n\n\n9\n14.59\n7.06\n4.7\n2.26\n28.62\n\n\n10\n26.93\n0.63\n0.28\n0.47\n28.31\n\n\n11\n9.07\n11.0\n1.93\n2.75\n24.76\n\n\n12\n9.81\n7.57\n4.13\n1.92\n23.42\n\n\n13\n9.0\n6.18\n7.2\n0.71\n23.1\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n16587\n0.0\n0.01\n0.0\n0.0\n0.01\n\n\n16588\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16589\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16590\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16591\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16592\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16593\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16594\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16595\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16596\n0.0\n0.0\n0.0\n0.0\n0.01\n\n\n16597\n0.0\n0.01\n0.0\n0.0\n0.01\n\n\n16598\n0.01\n0.0\n0.0\n0.0\n0.01"
  },
  {
    "objectID": "posts/contingencytable/index.html",
    "href": "posts/contingencytable/index.html",
    "title": "using DataFrame construct cotingencytable",
    "section": "",
    "text": "Note\n\n\n\ncotingencytable是理解和研究条件概率的工具\n\nref:\n列联表(双向表,cotingencytable,two-way table),是研究两个变量 不同水平(变量取值)之间相互关系的图表展示方法\n表中最大行和最大列是边缘分布\n表中单元格取值是两个变量的联合分布\n手动输入可以使用:\ninclude(\"../utils.jl\")\nusing  DataFrames\nusing  Random\nRandom.seed!(34343)\n\nTaskLocalRNG()"
  },
  {
    "objectID": "posts/contingencytable/index.html#load-data",
    "href": "posts/contingencytable/index.html#load-data",
    "title": "using DataFrame construct cotingencytable",
    "section": "1. load data",
    "text": "1. load data\n\n desc=Stat2Table(0,\"flavor_preference\",\"icecream flavor\",[])\n data=@pipe load_csv(desc.name)\n show(first(data,10))\n\n6×4 DataFrame\n Row │ Gender   Flavor      Frequency  Row%    \n     │ String7  String15    Int64      Float64 \n─────┼─────────────────────────────────────────\n   1 │ Female   Chocolate          37     56.0\n   2 │ Female   Strawberry         17     25.8\n   3 │ Female   Vanilla            12     18.2\n   4 │ Male     Chocolate          21     29.6\n   5 │ Male     Strawberry         18     25.4\n   6 │ Male     Vanilla            32     45.0"
  },
  {
    "objectID": "posts/contingencytable/index.html#two-way-table",
    "href": "posts/contingencytable/index.html#two-way-table",
    "title": "using DataFrame construct cotingencytable",
    "section": "2. two-way-table",
    "text": "2. two-way-table\n:Gender 做为列, :Flavour 作为行,  :Frequency 是值\n\ntwoway_table=unstack(data,:Gender,:Flavor,:Frequency)\n\n2×4 DataFrame\n\n\n\nRow\nGender\nChocolate\nStrawberry\nVanilla\n\n\n\nString7\nInt64?\nInt64?\nInt64?\n\n\n\n\n1\nFemale\n37\n17\n12\n\n\n2\nMale\n21\n18\n32"
  },
  {
    "objectID": "posts/contingencytable/index.html#add-total-col",
    "href": "posts/contingencytable/index.html#add-total-col",
    "title": "using DataFrame construct cotingencytable",
    "section": "3. add :Total Col",
    "text": "3. add :Total Col\n\ntwt=combine(twoway_table,:,[:Chocolate,:Strawberry,:Vanilla]=&gt;((a,b,c)-&gt;sum([a,b,c]))=&gt;:Total)\n\n2×5 DataFrame\n\n\n\nRow\nGender\nChocolate\nStrawberry\nVanilla\nTotal\n\n\n\nString7\nInt64?\nInt64?\nInt64?\nInt64\n\n\n\n\n1\nFemale\n37\n17\n12\n66\n\n\n2\nMale\n21\n18\n32\n71"
  },
  {
    "objectID": "posts/contingencytable/index.html#add-total-row",
    "href": "posts/contingencytable/index.html#add-total-row",
    "title": "using DataFrame construct cotingencytable",
    "section": "4. add :Total Row",
    "text": "4. add :Total Row\n\ninsert!(twt, 3 ,[\"Total\",sum.(eachcol(twt)[2:end])...])\n\n3×5 DataFrame\n\n\n\nRow\nGender\nChocolate\nStrawberry\nVanilla\nTotal\n\n\n\nString7\nInt64?\nInt64?\nInt64?\nInt64\n\n\n\n\n1\nFemale\n37\n17\n12\n66\n\n\n2\nMale\n21\n18\n32\n71\n\n\n3\nTotal\n58\n35\n44\n137\n\n\n\n\n\n\n\n5. read table\n建立表格后,就可以用来计算条件概率,按照dataframe的行列读取方式\n\n\n5.1 边缘概率\n统计参加试验的女性总人数\n\n \"参加实验的女性总人数\"=&gt;twt[1,:Total]\n\n\"参加实验的女性总人数\" =&gt; 66\n\n\n计算试验中喜欢巧克力口味冰激凌的总人数\n\n \"喜欢巧克力冰激凌总人数\"=&gt;twt[3,:Chocolate]\n\n\"喜欢巧克力冰激凌总人数\" =&gt; 58\n\n\n参加试验的总数\n\n\"参加试验的总数\"=&gt;twt[3,:Total]\n\n\"参加试验的总数\" =&gt; 137"
  },
  {
    "objectID": "posts/dataframes-meta.html",
    "href": "posts/dataframes-meta.html",
    "title": "DataFrameMeta",
    "section": "",
    "text": "using DataFrames,DataFramesMeta,PrettyTables,StatsBase\ndf = DataFrame(x = [1, 1, 2, 2], y = [1, 2, 101, 102]);\n@pt df\ngd = groupby(df, :x);\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     1 │     1 │\n│     1 │     2 │\n│     2 │   101 │\n│     2 │   102 │\n└───────┴───────┘"
  },
  {
    "objectID": "posts/dataframes-meta.html#load-package",
    "href": "posts/dataframes-meta.html#load-package",
    "title": "DataFrameMeta",
    "section": "",
    "text": "using DataFrames,DataFramesMeta,PrettyTables,StatsBase\ndf = DataFrame(x = [1, 1, 2, 2], y = [1, 2, 101, 102]);\n@pt df\ngd = groupby(df, :x);\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     1 │     1 │\n│     1 │     2 │\n│     2 │   101 │\n│     2 │   102 │\n└───────┴───────┘"
  },
  {
    "objectID": "posts/dataframes-meta.html#marcos",
    "href": "posts/dataframes-meta.html#marcos",
    "title": "DataFrameMeta",
    "section": "2. Marcos",
    "text": "2. Marcos\n\n2.1 @select,@select!\n\n@pt @select(df, :x, :y)\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     1 │     1 │\n│     1 │     2 │\n│     2 │   101 │\n│     2 │   102 │\n└───────┴───────┘\n\n\n\n@pt @select(df, :x2 = 2 * :x, :y)\n\n┌───────┬───────┐\n│    x2 │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     2 │     1 │\n│     2 │     2 │\n│     4 │   101 │\n│     4 │   102 │\n└───────┴───────┘\n\n\n\n\n2.2 @transform and @transform!\n\n@pt @transform(df, :x2 = 2 * :x, :y)\n\n┌───────┬───────┬───────┐\n│     x │     y │    x2 │\n│ Int64 │ Int64 │ Int64 │\n├───────┼───────┼───────┤\n│     1 │     1 │     2 │\n│     1 │     2 │     2 │\n│     2 │   101 │     4 │\n│     2 │   102 │     4 │\n└───────┴───────┴───────┘\n\n\n\n\n2.3 @subset and @subset!\n\n@pt @subset(df, :x .&gt; 1)\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     2 │   101 │\n│     2 │   102 │\n└───────┴───────┘\n\n\n\n let \n   outside_var = 1;\n   @pt @subset(df, :x .&gt; outside_var, :y .&lt; 102)\n end\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     2 │   101 │\n└───────┴───────┘\n\n\n\n@pt @subset(gd, :x .&gt; mean(:x))\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n└───────┴───────┘\n\n\n\n\n2.4 combine\n\n @pt @combine(gd, :x2 = sum(:y))\n\n┌───────┬───────┐\n│     x │    x2 │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     1 │     3 │\n│     2 │   203 │\n└───────┴───────┘\n\n\n\n\n2.5 orderby\n\n @pt @orderby(df, :x)\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     1 │     1 │\n│     1 │     2 │\n│     2 │   101 │\n│     2 │   102 │\n└───────┴───────┘\n\n\n\n @pt @orderby(df, -1. * :x)\n\n┌───────┬───────┐\n│     x │     y │\n│ Int64 │ Int64 │\n├───────┼───────┤\n│     2 │   101 │\n│     2 │   102 │\n│     1 │     1 │\n│     1 │     2 │\n└───────┴───────┘"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/xor-table/index.html",
    "href": "posts/xor-table/index.html",
    "title": "DataFrame xor table",
    "section": "",
    "text": "简介\n\n\n\n利用DataFrames.transform 方法生成 xor table\nxor 方法:Base.xor\ntransform!(df, [:A, :B] =&gt; ByRow(xor) =&gt; :AxorB)\n\n\n\nusing DataFrames,PrettyTables\nA=[0,0,1,1]\nB=[0,1,0,1]\ndf=DataFrame(A=A,B=B)\ntransform!(df, [:A, :B] =&gt; ByRow(xor) =&gt; :AxorB)\n@pt df\n\n┌───────┬───────┬───────┐\n│     A │     B │ AxorB │\n│ Int64 │ Int64 │ Int64 │\n├───────┼───────┼───────┤\n│     0 │     0 │     0 │\n│     0 │     1 │     1 │\n│     1 │     0 │     1 │\n│     1 │     1 │     0 │\n└───────┴───────┴───────┘"
  },
  {
    "objectID": "posts/combine/index.html",
    "href": "posts/combine/index.html",
    "title": "DataFrame combine function",
    "section": "",
    "text": "using DataFrames,PrettyTables\ndf=DataFrame(a=1:3, b=4:6)\n\n3×2 DataFrame\n\n\n\nRow\na\nb\n\n\n\nInt64\nInt64\n\n\n\n\n1\n1\n4\n\n\n2\n2\n5\n\n\n3\n3\n6\n\n\n\n\n\n\n\ncombine(df, :a =&gt; sum, nrow, renamecols=false)  \n\n1×2 DataFrame\n\n\n\nRow\na\nnrow\n\n\n\nInt64\nInt64\n\n\n\n\n1\n6\n3"
  },
  {
    "objectID": "posts/videogame-analysis/index.html",
    "href": "posts/videogame-analysis/index.html",
    "title": "Video Game Data Visualization",
    "section": "",
    "text": "简介\n\n\n\nref :Video games sales analysis and visualization"
  },
  {
    "objectID": "posts/videogame-analysis/index.html#load-package",
    "href": "posts/videogame-analysis/index.html#load-package",
    "title": "Video Game Data Visualization",
    "section": "1. load package",
    "text": "1. load package\n\ninclude(\"../utils.jl\")   # import load_csv method\nRandom.seed!(34343)\n\nTaskLocalRNG()"
  },
  {
    "objectID": "posts/videogame-analysis/index.html#dataprocessing",
    "href": "posts/videogame-analysis/index.html#dataprocessing",
    "title": "Video Game Data Visualization",
    "section": "2. dataprocessing",
    "text": "2. dataprocessing\n\n2.1 load data\n\nraw_data=load_csv(\"vgsales\",false)\n@info \"size\"=&gt;size(raw_data)\nfirst(raw_data,10)\n\n[ Info: \"size\" =&gt; (16598, 11)\n\n\n10×11 DataFrame\n\n\n\nRow\nRank\nName\nPlatform\nYear\nGenre\nPublisher\nNA_Sales\nEU_Sales\nJP_Sales\nOther_Sales\nGlobal_Sales\n\n\n\nInt64\nString\nString7\nString7\nString15\nString\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n1\nWii Sports\nWii\n2006\nSports\nNintendo\n41.49\n29.02\n3.77\n8.46\n82.74\n\n\n2\n2\nSuper Mario Bros.\nNES\n1985\nPlatform\nNintendo\n29.08\n3.58\n6.81\n0.77\n40.24\n\n\n3\n3\nMario Kart Wii\nWii\n2008\nRacing\nNintendo\n15.85\n12.88\n3.79\n3.31\n35.82\n\n\n4\n4\nWii Sports Resort\nWii\n2009\nSports\nNintendo\n15.75\n11.01\n3.28\n2.96\n33.0\n\n\n5\n5\nPokemon Red/Pokemon Blue\nGB\n1996\nRole-Playing\nNintendo\n11.27\n8.89\n10.22\n1.0\n31.37\n\n\n6\n6\nTetris\nGB\n1989\nPuzzle\nNintendo\n23.2\n2.26\n4.22\n0.58\n30.26\n\n\n7\n7\nNew Super Mario Bros.\nDS\n2006\nPlatform\nNintendo\n11.38\n9.23\n6.5\n2.9\n30.01\n\n\n8\n8\nWii Play\nWii\n2006\nMisc\nNintendo\n14.03\n9.2\n2.93\n2.85\n29.02\n\n\n9\n9\nNew Super Mario Bros. Wii\nWii\n2009\nPlatform\nNintendo\n14.59\n7.06\n4.7\n2.26\n28.62\n\n\n10\n10\nDuck Hunt\nNES\n1984\nShooter\nNintendo\n26.93\n0.63\n0.28\n0.47\n28.31\n\n\n\n\n\n\n\n\n2.2 features to lowercase\n\n#raw_features=names(raw_data)\n data=@pipe  names(raw_data)|&gt;lowercase.(_)|&gt;rename(raw_data,_)\n first(data,1)\n\n1×11 DataFrame\n\n\n\nRow\nrank\nname\nplatform\nyear\ngenre\npublisher\nna_sales\neu_sales\njp_sales\nother_sales\nglobal_sales\n\n\n\nInt64\nString\nString7\nString7\nString15\nString\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n1\nWii Sports\nWii\n2006\nSports\nNintendo\n41.49\n29.02\n3.77\n8.46\n82.74\n\n\n\n\n\n\n\n\n2.3 describe dataframe\n\ndescribe(data)\n\n11×7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion…\nAny\nUnion…\nAny\nInt64\nDataType\n\n\n\n\n1\nrank\n8300.61\n1\n8300.5\n16600\n0\nInt64\n\n\n2\nname\n\n'98 Koshien\n\n¡Shin Chan Flipa en colores!\n0\nString\n\n\n3\nplatform\n\n2600\n\nXOne\n0\nString7\n\n\n4\nyear\n\n1980\n\nN/A\n0\nString7\n\n\n5\ngenre\n\nAction\n\nStrategy\n0\nString15\n\n\n6\npublisher\n\n10TACLE Studios\n\nresponDESIGN\n0\nString\n\n\n7\nna_sales\n0.264667\n0.0\n0.08\n41.49\n0\nFloat64\n\n\n8\neu_sales\n0.146652\n0.0\n0.02\n29.02\n0\nFloat64\n\n\n9\njp_sales\n0.0777817\n0.0\n0.0\n10.22\n0\nFloat64\n\n\n10\nother_sales\n0.048063\n0.0\n0.01\n10.57\n0\nFloat64\n\n\n11\nglobal_sales\n0.537441\n0.01\n0.17\n82.74\n0\nFloat64\n\n\n\n\n\n\nnmissing that is great!\n\n\n2.4 data type\nRank - Ranking of overall sales, integer\nName - The games name\nPlatform - Platform of the games release (i.e. PC,PS4, etc.), object\nYear - Year of the game’s release, float\nGenre - Genre of the game ,object\nPublisher - Publisher of the game, object\nNA_Sales - Sales in North America (in millions), float\nEU_Sales - Sales in Europe (in millions), float\nJP_Sales - Sales in Japan (in millions), float\nOther_Sales - Sales in the rest of the world (in millions), float\nGlobal_Sales - Total worldwide sales, float"
  },
  {
    "objectID": "posts/videogame-analysis/index.html#data-analysis",
    "href": "posts/videogame-analysis/index.html#data-analysis",
    "title": "Video Game Data Visualization",
    "section": "3. data analysis",
    "text": "3. data analysis\n\n3.1 What genre games have been made the most?\nthat is to count every genre’s game\n\ndf3_1=@pipe groupby(data,:genre)|&gt;combine(_,nrow)|&gt;rename(_,:nrow=&gt;:counts)|&gt;sort(_,:counts;rev=true)\n\n12×2 DataFrame\n\n\n\nRow\ngenre\ncounts\n\n\n\nString15\nInt64\n\n\n\n\n1\nAction\n3316\n\n\n2\nSports\n2346\n\n\n3\nMisc\n1739\n\n\n4\nRole-Playing\n1488\n\n\n5\nShooter\n1310\n\n\n6\nAdventure\n1286\n\n\n7\nRacing\n1249\n\n\n8\nPlatform\n886\n\n\n9\nSimulation\n867\n\n\n10\nFighting\n848\n\n\n11\nStrategy\n681\n\n\n12\nPuzzle\n582\n\n\n\n\n\n\n\nfunction plot_df3_1(df::AbstractDataFrame)\n    rows,_=size(df)\n    featrues=names(df)\n    fig=Figure(resolution=(500,600))\n    ax=Axis(fig[1,1],title=\"counts of game by genre\")\n    ax.yticks=(1:rows,df.genre)\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"genre\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x)\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_1(df3_1)\n\n\n\n\n\n\n\n\nso Action and Sports made most\n\n\n3.2 Which year had the most game release?\n\ndf3_2=@pipe groupby(data,:year)|&gt;combine(_,nrow)|&gt;rename(_,:nrow=&gt;:counts)|&gt;sort(_,:counts;rev=true)\n\n40×2 DataFrame15 rows omitted\n\n\n\nRow\nyear\ncounts\n\n\n\nString7\nInt64\n\n\n\n\n1\n2009\n1431\n\n\n2\n2008\n1428\n\n\n3\n2010\n1259\n\n\n4\n2007\n1202\n\n\n5\n2011\n1139\n\n\n6\n2006\n1008\n\n\n7\n2005\n941\n\n\n8\n2002\n829\n\n\n9\n2003\n775\n\n\n10\n2004\n763\n\n\n11\n2012\n657\n\n\n12\n2015\n614\n\n\n13\n2014\n582\n\n\n⋮\n⋮\n⋮\n\n\n29\n1982\n36\n\n\n30\n1986\n21\n\n\n31\n1989\n17\n\n\n32\n1983\n17\n\n\n33\n1990\n16\n\n\n34\n1987\n16\n\n\n35\n1988\n15\n\n\n36\n1985\n14\n\n\n37\n1984\n14\n\n\n38\n1980\n9\n\n\n39\n2017\n3\n\n\n40\n2020\n1\n\n\n\n\n\n\n\nfunction plot_df3_2(df::AbstractDataFrame,cat::String=\"year\")\n    @assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(500,800))\n    ax=Axis(fig[1,1],title=\"count game by year\")\n    ax.yticks=(1:rows,df[:,cat])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"$cat\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x)\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\n\nplot_df3_2(df3_2)\n\n\n\n\n\n\n\n\n\n\n3.3 Top 5 years games release by genre\n\n\n3.4 Which year had the highest sales worldwide?\n\ndf3_4=@pipe groupby(data,:year)|&gt;@combine(_,:global_sales=sum(:global_sales))|&gt;sort(_,:year;rev=true)\n\n40×2 DataFrame15 rows omitted\n\n\n\nRow\nyear\nglobal_sales\n\n\n\nString7\nFloat64\n\n\n\n\n1\nN/A\n100.08\n\n\n2\n2020\n0.29\n\n\n3\n2017\n0.05\n\n\n4\n2016\n70.93\n\n\n5\n2015\n264.44\n\n\n6\n2014\n337.05\n\n\n7\n2013\n368.11\n\n\n8\n2012\n363.54\n\n\n9\n2011\n515.99\n\n\n10\n2010\n600.45\n\n\n11\n2009\n667.3\n\n\n12\n2008\n678.9\n\n\n13\n2007\n611.13\n\n\n⋮\n⋮\n⋮\n\n\n29\n1991\n32.23\n\n\n30\n1990\n49.39\n\n\n31\n1989\n73.45\n\n\n32\n1988\n47.22\n\n\n33\n1987\n21.74\n\n\n34\n1986\n37.07\n\n\n35\n1985\n53.94\n\n\n36\n1984\n50.36\n\n\n37\n1983\n16.79\n\n\n38\n1982\n28.86\n\n\n39\n1981\n35.77\n\n\n40\n1980\n11.38\n\n\n\n\n\n\n\nfunction plot_df3_4(df::AbstractDataFrame)\n    rows=nrow(df)\n    fig=Figure(resolution=(500,700))\n    ax=Axis(fig[1,1],title=\"video game global sales\")\n    ax.yticks=(1:rows,df[:,\"year\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"year\"\n    GLMakie.barplot!(ax,1:rows,df.global_sales;color = df.global_sales, strokecolor = :black, strokewidth = 1,direction=:x)\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_4(df3_4)\n\n\n\n\n\n\n\n\n\n\n3.5 Which genre game has been released the most in a single year?\n\ndf3_5=let\n    df=@pipe groupby(data,[:year,:genre])|&gt;combine(_,nrow=&gt;:counts)|&gt;groupby(_,:year)\n    res=mapreduce(x-&gt;(sort(x,:counts;rev=true)|&gt;first|&gt;copy),vcat, df)|&gt;DataFrame\nend\n\n40×3 DataFrame15 rows omitted\n\n\n\nRow\nyear\ngenre\ncounts\n\n\n\nString7\nString15\nInt64\n\n\n\n\n1\n2006\nAction\n184\n\n\n2\n1985\nPlatform\n4\n\n\n3\n2008\nAction\n221\n\n\n4\n2009\nAction\n272\n\n\n5\n1996\nSports\n52\n\n\n6\n1989\nPuzzle\n5\n\n\n7\n1984\nRacing\n3\n\n\n8\n2005\nAction\n192\n\n\n9\n1999\nSports\n62\n\n\n10\n2007\nAction\n211\n\n\n11\n2010\nAction\n226\n\n\n12\n2013\nAction\n148\n\n\n13\n2004\nAction\n125\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n29\n1986\nPlatform\n6\n\n\n30\n2000\nSports\n81\n\n\n31\nN/A\nAction\n63\n\n\n32\n1995\nSports\n29\n\n\n33\n2016\nAction\n119\n\n\n34\n1991\nSports\n7\n\n\n35\n1981\nAction\n25\n\n\n36\n1987\nSports\n4\n\n\n37\n1980\nMisc\n4\n\n\n38\n1983\nAction\n7\n\n\n39\n2020\nSimulation\n1\n\n\n40\n2017\nRole-Playing\n2\n\n\n\n\n\n\n\n    function plot_df3_5(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(1000,900))\n    ax=Axis(fig[1,1],title=\"video game most release in single year\")\n    ax.yticks=(1:rows,df[:,\"year\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"release\"\n    ax.ylabel=\"year\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x\n    \n    )\n    for (idx, row) in enumerate(eachrow(df))\n        counts,year,genre=row.counts,row.year,row.genre\n        GLMakie.text!(ax,counts+2,idx; text=\"$genre-$year\",align = (:left, :center),fontsize=8)\n    end\n    \n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend    \n plot_df3_5(df3_5)\n\n\n\n\n\n\n\n\n\n\n3.6 Which genre game has sold the most in a single year?\n\ndf6=@pipe select(data,[:year,:genre,:global_sales])|&gt;groupby(_,[:year,:genre])|&gt;@combine(_ ,:sales= sum(:global_sales))|&gt;groupby(_,:year)|&gt;@combine(_,n1=first(:genre), n2=first(:sales))\n\n┌ Warning: Using an un-quoted Symbol on the LHS is deprecated. Write :n1 = ... instead.\n└ @ DataFramesMeta ~/.julia/packages/DataFramesMeta/nI3Y1/src/parsing.jl:373\n┌ Warning: Using an un-quoted Symbol on the LHS is deprecated. Write :n2 = ... instead.\n└ @ DataFramesMeta ~/.julia/packages/DataFramesMeta/nI3Y1/src/parsing.jl:373\n\n\n40×3 DataFrame15 rows omitted\n\n\n\nRow\nyear\nn1\nn2\n\n\n\nString7\nString15\nFloat64\n\n\n\n\n1\n2006\nSports\n136.16\n\n\n2\n1985\nSports\n1.96\n\n\n3\n2008\nSports\n95.34\n\n\n4\n2009\nSports\n138.52\n\n\n5\n1996\nSports\n17.45\n\n\n6\n1989\nSports\n5.72\n\n\n7\n1984\nSports\n6.18\n\n\n8\n2005\nSports\n59.54\n\n\n9\n1999\nSports\n30.29\n\n\n10\n2007\nSports\n98.2\n\n\n11\n2010\nSports\n92.53\n\n\n12\n2013\nSports\n41.55\n\n\n13\n2004\nSports\n63.68\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n29\n1986\nSports\n5.57\n\n\n30\n2000\nSports\n41.19\n\n\n31\nN/A\nSports\n21.69\n\n\n32\n1995\nSports\n7.98\n\n\n33\n2016\nSports\n14.6\n\n\n34\n1991\nSports\n2.41\n\n\n35\n1981\nSports\n0.79\n\n\n36\n1987\nSports\n3.72\n\n\n37\n1980\nSports\n0.49\n\n\n38\n1983\nSports\n3.2\n\n\n39\n2020\nSimulation\n0.29\n\n\n40\n2017\nRole-Playing\n0.04\n\n\n\n\n\n\n\n\n3.7 Which genre game have the highest sale price globally?\n\ndf3_7=@pipe groupby(data,[:genre])|&gt;@combine(_,:sales=sum(:global_sales))|&gt;sort(_,:sales;rev=true)\n\n12×2 DataFrame\n\n\n\nRow\ngenre\nsales\n\n\n\nString15\nFloat64\n\n\n\n\n1\nAction\n1751.18\n\n\n2\nSports\n1330.93\n\n\n3\nShooter\n1037.37\n\n\n4\nRole-Playing\n927.37\n\n\n5\nPlatform\n831.37\n\n\n6\nMisc\n809.96\n\n\n7\nRacing\n732.04\n\n\n8\nFighting\n448.91\n\n\n9\nSimulation\n392.2\n\n\n10\nPuzzle\n244.95\n\n\n11\nAdventure\n239.04\n\n\n12\nStrategy\n175.12\n\n\n\n\n\n\n\nfunction plot_df3_7(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,500))\n    ax=Axis(fig[1,1],title=\"video game sales champion by genre\")\n    ax.yticks=(1:rows,df[:,\"genre\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"genre\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,direction=:x,\n    bar_labels=:y )\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_7(df3_7)\n\n\n\n\n\n\n\n\n\n\n3.8 Which platfrom have the highest sale price globally?\n\ndf3_8=@pipe groupby(data,[\"platform\"])|&gt;@combine(_,:sales=sum(:global_sales))|&gt;sort(_,:sales;rev=true)\n\n31×2 DataFrame6 rows omitted\n\n\n\nRow\nplatform\nsales\n\n\n\nString7\nFloat64\n\n\n\n\n1\nPS2\n1255.64\n\n\n2\nX360\n979.96\n\n\n3\nPS3\n957.84\n\n\n4\nWii\n926.71\n\n\n5\nDS\n822.49\n\n\n6\nPS\n730.66\n\n\n7\nGBA\n318.5\n\n\n8\nPSP\n296.28\n\n\n9\nPS4\n278.1\n\n\n10\nPC\n258.82\n\n\n11\nXB\n258.26\n\n\n12\nGB\n255.45\n\n\n13\nNES\n251.07\n\n\n⋮\n⋮\n⋮\n\n\n20\nWiiU\n81.86\n\n\n21\nPSV\n61.93\n\n\n22\nSAT\n33.59\n\n\n23\nGEN\n28.36\n\n\n24\nDC\n15.97\n\n\n25\nSCD\n1.87\n\n\n26\nNG\n1.44\n\n\n27\nWS\n1.42\n\n\n28\nTG16\n0.16\n\n\n29\n3DO\n0.1\n\n\n30\nGG\n0.04\n\n\n31\nPCFX\n0.03\n\n\n\n\n\n\n\nfunction plot_df3_8(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(600,800))\n    ax=Axis(fig[1,1],title=\"video game sales by Platform\")\n    ax.yticks=(1:rows,df[:,\"platform\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"platform\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,direction=:x,\n    bar_labels=:y )\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\n\nplot_df3_8(df3_8)\n\n\n\n\n\n\n\n\n\n\n3.9 Which individual game have the highest sale price globally?\n\ndf3_9=@pipe sort(data,:global_sales;rev=true)|&gt;select(_,[\"name\",\"year\",\"global_sales\"])|&gt;first(_,20)\n\n20×3 DataFrame\n\n\n\nRow\nname\nyear\nglobal_sales\n\n\n\nString\nString7\nFloat64\n\n\n\n\n1\nWii Sports\n2006\n82.74\n\n\n2\nSuper Mario Bros.\n1985\n40.24\n\n\n3\nMario Kart Wii\n2008\n35.82\n\n\n4\nWii Sports Resort\n2009\n33.0\n\n\n5\nPokemon Red/Pokemon Blue\n1996\n31.37\n\n\n6\nTetris\n1989\n30.26\n\n\n7\nNew Super Mario Bros.\n2006\n30.01\n\n\n8\nWii Play\n2006\n29.02\n\n\n9\nNew Super Mario Bros. Wii\n2009\n28.62\n\n\n10\nDuck Hunt\n1984\n28.31\n\n\n11\nNintendogs\n2005\n24.76\n\n\n12\nMario Kart DS\n2005\n23.42\n\n\n13\nPokemon Gold/Pokemon Silver\n1999\n23.1\n\n\n14\nWii Fit\n2007\n22.72\n\n\n15\nWii Fit Plus\n2009\n22.0\n\n\n16\nKinect Adventures!\n2010\n21.82\n\n\n17\nGrand Theft Auto V\n2013\n21.4\n\n\n18\nGrand Theft Auto: San Andreas\n2004\n20.81\n\n\n19\nSuper Mario World\n1990\n20.61\n\n\n20\nBrain Age: Train Your Brain in Minutes a Day\n2005\n20.22\n\n\n\n\n\n\n\nfunction plot_top20_game(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,800))\n    ax=Axis(fig[1,1],title=\"global sales top 20\")\n    ax.yticks=(1:rows,df[:,\"name\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"name\"\n    GLMakie.barplot!(ax,1:rows,df.global_sales;color = df.global_sales, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        name,year,sales=row.name,row.year,row.global_sales\n        GLMakie.text!(ax,sales+2,idx; text=\"$year-$sales\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_top20_game(df3_9)\n\n\n\n\n\n\n\n\n\n\n3.10 Sales compearison by genre\n\ndf3_10=@pipe select(data,[:genre,:na_sales,:eu_sales,:jp_sales,:other_sales])|&gt;groupby(_,:genre)|&gt;@combine(_,$AsTable = (na_sales = sum(:na_sales), eu_sales = sum(:eu_sales),jp_sales=sum(:jp_sales),other_sales=sum(:other_sales)))\n\n12×5 DataFrame\n\n\n\nRow\ngenre\nna_sales\neu_sales\njp_sales\nother_sales\n\n\n\nString15\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nSports\n683.35\n376.85\n135.37\n134.97\n\n\n2\nPlatform\n447.05\n201.63\n130.77\n51.59\n\n\n3\nRacing\n359.42\n238.39\n56.69\n77.27\n\n\n4\nRole-Playing\n327.28\n188.06\n352.31\n59.61\n\n\n5\nPuzzle\n123.78\n50.78\n57.31\n12.55\n\n\n6\nMisc\n410.24\n215.98\n107.76\n75.32\n\n\n7\nShooter\n582.6\n313.27\n38.28\n102.69\n\n\n8\nSimulation\n183.31\n113.38\n63.7\n31.52\n\n\n9\nAction\n877.83\n525.0\n159.95\n187.38\n\n\n10\nFighting\n223.59\n101.32\n87.35\n36.68\n\n\n11\nAdventure\n105.8\n64.13\n52.07\n16.81\n\n\n12\nStrategy\n68.7\n45.34\n49.46\n11.36\n\n\n\n\n\n\n\nfunction plot_df3_10_heatmap(df::AbstractDataFrame)\n    genre=df.genre\n    data=@pipe select(df,Not(:genre))\n    row,col=size(data)\n    ma=@pipe Matrix(data)|&gt;round.(_,digits=1)\n    fig=Figure(resolution=(1000,400))\n    ax=Axis(fig[1,1],title=\"video game sales heatmap\")\n    ax.yticks=(1:col,names(data))\n    ax.xticks=(1:row,genre)\n    heatmap!(ax,ma)\n    [GLMakie.text!(ax,i,j;text=\"$(ma[i,j])\",align = (:center, :center),fontsize=12,color=:white) for i in 1:row,j in 1:col]\n\n    fig\nend\nplot_df3_10_heatmap(df3_10)\n\n\n\n\n\n\n\n\n\nres10=@pipe df3_10|&gt;select(_,Not(:genre))|&gt;Matrix|&gt;permutedims|&gt;reshape(_,(48,1))|&gt;_[:,1]\ncats=@pipe df3_10|&gt;select(_,Not(:genre))|&gt;names\ntype_name=df3_10.genre\ngrp=repeat(1:4, 12)\ngrp_x=repeat(1:12,inner=4)\ncolors = cgrad(:tab10)\nfunction plot_df3_10_bardodge()\n    fig=Figure(resolution=(1000,600))\n    ax=Axis(fig[1,1],title=\"video game sales  barplot dodge\",xticklabelrotation = pi/8)\n    ax.xticks=(1:12,type_name)\n    GLMakie.barplot!(ax,grp_x,res10; dodge =grp,color=colors[grp],strokecolor = :black, strokewidth = 1,bar_labels = :y,label_rotation=1/2*pi)\n    labels = [\"$i\" for i in cats]\n    elements = [PolyElement(polycolor = colors[i]) for (i,c) in enumerate(cats)]\n   Legend(fig[1,2], elements, labels, \"sales region\", orientation=:vertical, tellwidth = true, tellheight =false)\n    fig\nend\nplot_df3_10_bardodge()\n\n\n\n\n\n\n\n\n\n\n3.11 Sales compearison by platform\n\ndf3_11=@pipe select(data,[:platform,:na_sales,:eu_sales,:jp_sales,:other_sales,:genre])|&gt;groupby(_,:platform)|&gt;@combine(_,$AsTable = (na_sales = sum(:na_sales), eu_sales = sum(:eu_sales),jp_sales=sum(:jp_sales),other_sales=sum(:other_sales)))\n\n31×5 DataFrame6 rows omitted\n\n\n\nRow\nplatform\nna_sales\neu_sales\njp_sales\nother_sales\n\n\n\nString7\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nWii\n507.71\n268.38\n69.35\n80.61\n\n\n2\nNES\n125.94\n21.15\n98.65\n5.31\n\n\n3\nGB\n114.32\n47.82\n85.12\n8.2\n\n\n4\nDS\n390.71\n194.65\n175.57\n60.53\n\n\n5\nX360\n601.05\n280.58\n12.43\n85.54\n\n\n6\nPS3\n392.26\n343.71\n79.99\n141.93\n\n\n7\nPS2\n583.84\n339.29\n139.2\n193.44\n\n\n8\nSNES\n61.23\n19.04\n116.55\n3.22\n\n\n9\nGBA\n187.54\n75.25\n47.33\n7.73\n\n\n10\n3DS\n78.87\n58.52\n97.35\n12.63\n\n\n11\nPS4\n96.8\n123.7\n14.3\n43.36\n\n\n12\nN64\n139.02\n41.06\n34.22\n4.38\n\n\n13\nPS\n336.51\n213.6\n139.82\n40.91\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n20\nWiiU\n38.32\n24.23\n12.79\n6.45\n\n\n21\nGEN\n19.27\n5.52\n2.67\n0.89\n\n\n22\nDC\n5.43\n1.69\n8.56\n0.27\n\n\n23\nPSV\n16.2\n16.33\n20.96\n8.45\n\n\n24\nSAT\n0.72\n0.54\n32.26\n0.07\n\n\n25\nSCD\n1.0\n0.36\n0.45\n0.05\n\n\n26\nWS\n0.0\n0.0\n1.42\n0.0\n\n\n27\nNG\n0.0\n0.0\n1.44\n0.0\n\n\n28\nTG16\n0.0\n0.0\n0.16\n0.0\n\n\n29\n3DO\n0.0\n0.0\n0.1\n0.0\n\n\n30\nGG\n0.0\n0.0\n0.04\n0.0\n\n\n31\nPCFX\n0.0\n0.0\n0.03\n0.0\n\n\n\n\n\n\n\nlet\n    res11 = @pipe df3_11 |&gt; select(_, Not(:platform)) |&gt; Matrix |&gt; permutedims |&gt; reshape(_, (124, 1)) |&gt; _[:, 1]\n    cats = @pipe df3_11 |&gt; select(_, Not(:platform)) |&gt; names\n    type_name = df3_11.platform\n    grp = repeat(1:4, 31)\n    grp_x = repeat(1:31, inner=4)\n    colors = cgrad(:tab10)\n\n    function plot_platform_dodge()\n        fig = Figure(resolution=(1800, 600))\n        ax = Axis(fig[1, 1], title=\"video game sales by platform\", xticklabelrotation=pi / 8)\n        ax.xticks = (1:31, type_name)\n        GLMakie.barplot!(ax, grp_x, res11; dodge=grp, color=colors[grp], strokecolor=:black, strokewidth=1, bar_labels=:y, label_rotation=1 / 2 * pi)\n        labels = [\"$i\" for i in cats]\n        elements = [PolyElement(polycolor=colors[i]) for (i, c) in enumerate(cats)]\n        Legend(fig[1, 2], elements, labels, \"sales region\", orientation=:vertical, tellwidth=true, tellheight=false)\n        fig\n    end\n\n   plot_platform_dodge()\nend\n\n\n\n\n\n\n\n\n\n\n3.12 Top 20 Publisher\n\ndf3_12=@pipe groupby(data,[:publisher])|&gt;combine(_,nrow)|&gt;rename(_,:nrow=&gt;:counts)|&gt;sort(_,:counts;rev=true)|&gt;first(_,20)\n\n20×2 DataFrame\n\n\n\nRow\npublisher\ncounts\n\n\n\nString\nInt64\n\n\n\n\n1\nElectronic Arts\n1351\n\n\n2\nActivision\n975\n\n\n3\nNamco Bandai Games\n932\n\n\n4\nUbisoft\n921\n\n\n5\nKonami Digital Entertainment\n832\n\n\n6\nTHQ\n715\n\n\n7\nNintendo\n703\n\n\n8\nSony Computer Entertainment\n683\n\n\n9\nSega\n639\n\n\n10\nTake-Two Interactive\n413\n\n\n11\nCapcom\n381\n\n\n12\nAtari\n363\n\n\n13\nTecmo Koei\n338\n\n\n14\nSquare Enix\n233\n\n\n15\nWarner Bros. Interactive Entertainment\n232\n\n\n16\nDisney Interactive Studios\n218\n\n\n17\nUnknown\n203\n\n\n18\nEidos Interactive\n198\n\n\n19\nMidway Games\n198\n\n\n20\n505 Games\n192\n\n\n\n\n\n\n\nfunction plot_top20_publisher(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,800))\n    ax=Axis(fig[1,1],title=\"global sales top 20\")\n    ax.yticks=(1:rows,df[:,\"publisher\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"publiser\"\n    GLMakie.barplot!(ax,1:rows,df.counts;color = df.counts, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        publisher,counts=row.publisher,row.counts\n        GLMakie.text!(ax,counts+2,idx; text=\"$counts\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_top20_publisher(df3_12)\n\n\n\n\n\n\n\n\n\n\n3.13 Top global sales by publisher\n\ndf3_13=@pipe groupby(data,[:publisher])|&gt;@combine(_,:sales=sum(:global_sales))|&gt;sort(_,:sales;rev=true)|&gt;first(_,20)\n\n20×2 DataFrame\n\n\n\nRow\npublisher\nsales\n\n\n\nString\nFloat64\n\n\n\n\n1\nNintendo\n1786.56\n\n\n2\nElectronic Arts\n1110.32\n\n\n3\nActivision\n727.46\n\n\n4\nSony Computer Entertainment\n607.5\n\n\n5\nUbisoft\n474.72\n\n\n6\nTake-Two Interactive\n399.54\n\n\n7\nTHQ\n340.77\n\n\n8\nKonami Digital Entertainment\n283.64\n\n\n9\nSega\n272.99\n\n\n10\nNamco Bandai Games\n254.09\n\n\n11\nMicrosoft Game Studios\n245.79\n\n\n12\nCapcom\n200.89\n\n\n13\nAtari\n157.22\n\n\n14\nWarner Bros. Interactive Entertainment\n153.89\n\n\n15\nSquare Enix\n145.18\n\n\n16\nDisney Interactive Studios\n119.96\n\n\n17\nEidos Interactive\n98.98\n\n\n18\nLucasArts\n87.34\n\n\n19\nBethesda Softworks\n82.14\n\n\n20\nMidway Games\n69.85\n\n\n\n\n\n\n\nfunction plot_df3_13(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,500))\n    ax=Axis(fig[1,1],title=\"video game sales by publisher\",yreversed=true)\n    ax.yticks=(1:rows,df[:,\"publisher\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"sales\"\n    ax.ylabel=\"pubhisher\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        sales=round(row.sales,digits=2)\n        GLMakie.text!(ax,sales+2,idx; text=\"$(sales)\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_13(df3_13)\n\n\n\n\n\n\n\n\n\n\n3.14 publisher comperison\n\nfeatures=[\"publisher\", \"na_sales\", \"eu_sales\", \"jp_sales\", \"other_sales\",\"global_sales\"]\ndf3_14=@pipe select(data,features)|&gt;groupby(_,:publisher)|&gt;\n@combine(_,$AsTable = (na_sales = sum(:na_sales), eu_sales = sum(:eu_sales),jp_sales=sum(:jp_sales),other_sales=sum(:other_sales)),global_sales=sum(:global_sales))|&gt;sort(_,:global_sales;rev=true)|&gt;first(_,15)\n\n┌ Warning: Using an un-quoted Symbol on the LHS is deprecated. Write :global_sales = ... instead.\n└ @ DataFramesMeta ~/.julia/packages/DataFramesMeta/nI3Y1/src/parsing.jl:373\n\n\n15×6 DataFrame\n\n\n\nRow\npublisher\nna_sales\neu_sales\njp_sales\nother_sales\nglobal_sales\n\n\n\nString\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\nNintendo\n816.87\n418.74\n455.42\n95.33\n1786.56\n\n\n2\nElectronic Arts\n595.07\n371.27\n14.04\n129.77\n1110.32\n\n\n3\nActivision\n429.7\n215.53\n6.54\n75.34\n727.46\n\n\n4\nSony Computer Entertainment\n265.22\n187.72\n74.1\n80.45\n607.5\n\n\n5\nUbisoft\n253.43\n163.32\n7.5\n50.26\n474.72\n\n\n6\nTake-Two Interactive\n220.49\n118.14\n5.83\n55.24\n399.54\n\n\n7\nTHQ\n208.77\n94.73\n5.01\n32.14\n340.77\n\n\n8\nKonami Digital Entertainment\n92.16\n69.69\n91.3\n30.31\n283.64\n\n\n9\nSega\n109.4\n82.0\n57.03\n24.52\n272.99\n\n\n10\nNamco Bandai Games\n69.52\n42.63\n127.07\n14.69\n254.09\n\n\n11\nMicrosoft Game Studios\n155.35\n68.61\n3.26\n18.56\n245.79\n\n\n12\nCapcom\n78.59\n39.22\n68.08\n14.84\n200.89\n\n\n13\nAtari\n110.04\n27.12\n10.71\n9.01\n157.22\n\n\n14\nWarner Bros. Interactive Entertainment\n81.18\n53.12\n1.04\n18.56\n153.89\n\n\n15\nSquare Enix\n48.65\n32.82\n49.88\n13.89\n145.18\n\n\n\n\n\n\n\nres14 = @pipe df3_14 |&gt; select(_, Not(:publisher,:global_sales)) |&gt; Matrix |&gt; permutedims|&gt; reshape(_, (60, 1)) |&gt; _[:, 1]|&gt;round.(_,digits=2)\ncats = @pipe df3_14 |&gt; select(_, Not(:publisher,:global_sales)) |&gt; names\ntype_name = df3_14.publisher\ngrp = repeat(1:4, 15)\ngrp_x = repeat(1:15, inner=4)\ncolors = cgrad(:tab10)\nfunction plot_df3_14_bardodge()\n    fig=Figure(resolution=(1200,600))\n    ax=Axis(fig[1,1],title=\"video game sales  by publisher\",xticklabelrotation = pi/6)\n    ax.xticks=(1:15,type_name)\n    GLMakie.barplot!(ax,grp_x,res14; dodge =grp,color=colors[grp],strokecolor = :black, strokewidth = 1,bar_labels = :y,label_rotation=1/2*pi)\n    labels = [\"$i\" for i in cats]\n    elements = [PolyElement(polycolor = colors[i]) for (i,c) in enumerate(cats)]\n   Legend(fig[1,2], elements, labels, \"sales region\", orientation=:vertical, tellwidth = true, tellheight =false)\n    fig\nend\nplot_df3_14_bardodge()\n\n\n\n\n\n\n\n\n\n\n3.15 Top publisher by Count each year\n\ndf15=@pipe select(data,[:year,:publisher])|&gt;groupby(_,[:year,:publisher])|&gt;combine(_,nrow)|&gt;groupby(_,:year)\ndf3_15=DataFrame()\nfor (idx,df) in enumerate(df15)\n    local d=@pipe sort(df,:nrow;rev=true)|&gt;first\n    push!(df3_15,d)\nend\nsort!(df3_15,:nrow;rev=true)\n\n40×3 DataFrame15 rows omitted\n\n\n\nRow\nyear\npublisher\nnrow\n\n\n\nString7\nString\nInt64\n\n\n\n\n1\n2009\nActivision\n121\n\n\n2\n2008\nElectronic Arts\n120\n\n\n3\n2005\nElectronic Arts\n117\n\n\n4\n2007\nElectronic Arts\n107\n\n\n5\nN/A\nUnknown\n103\n\n\n6\n2006\nElectronic Arts\n102\n\n\n7\n2010\nActivision\n89\n\n\n8\n2002\nElectronic Arts\n88\n\n\n9\n2011\nUbisoft\n87\n\n\n10\n2004\nElectronic Arts\n86\n\n\n11\n2012\nNamco Bandai Games\n85\n\n\n12\n2003\nElectronic Arts\n85\n\n\n13\n2014\nNamco Bandai Games\n69\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n29\n1989\nNintendo\n9\n\n\n30\n1984\nNintendo\n9\n\n\n31\n1993\nNintendo\n9\n\n\n32\n1985\nNintendo\n7\n\n\n33\n1990\nNintendo\n7\n\n\n34\n1988\nNintendo\n6\n\n\n35\n1986\nNintendo\n6\n\n\n36\n1983\nNintendo\n6\n\n\n37\n1980\nActivision\n5\n\n\n38\n1987\nNintendo\n4\n\n\n39\n2017\nSega\n2\n\n\n40\n2020\nUbisoft\n1\n\n\n\n\n\n\n\nfunction plot_df3_15(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(800,800))\n    ax=Axis(fig[1,1],title=\"publiher champion by year\")\n    ax.yticks=(1:rows,df[:,\"year\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"counts\"\n    ax.ylabel=\"name\"\n    GLMakie.barplot!(ax,1:rows,df.nrow;color = df.nrow, strokecolor = :black, strokewidth = 1,direction=:x)\n    for (idx, row) in enumerate(eachrow(df))\n        publisher,nrow,year=row.publisher,row.nrow,row.year\n        GLMakie.text!(ax,nrow+2,idx; text=\"$publisher-$nrow\",align = (:left, :center),fontsize=8)\n    end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_df3_15(df3_15)\n\n\n\n\n\n\n\n\n\n\n3.16 Total revenue by region\n\ndf3_16=@pipe select(data,[\"na_sales\", \"eu_sales\", \"jp_sales\", \"other_sales\"])|&gt;@combine(_, :sales=sum.(eachcol(_)))\ndf3_16.region=[\"na_sales\", \"eu_sales\", \"jp_sales\", \"other_sales\"]\ndf3_16\n\n4×2 DataFrame\n\n\n\nRow\nsales\nregion\n\n\n\nFloat64\nString\n\n\n\n\n1\n4392.95\nna_sales\n\n\n2\n2434.13\neu_sales\n\n\n3\n1291.02\njp_sales\n\n\n4\n797.75\nother_sales\n\n\n\n\n\n\n\nfunction plot_sales_by_region(df::AbstractDataFrame)\n    #@assert names(df)[2]==\"counts\"\n    rows=nrow(df)\n    fig=Figure(resolution=(500,500))\n    ax=Axis(fig[1,1],title=\"video game sales by region\")\n    ax.xticks=(1:rows,df[:,\"region\"])\n    #ax.xticklabelrotation = pi/2\n    ax.xlabel=\"region\"\n    ax.ylabel=\"salse\"\n    GLMakie.barplot!(ax,1:rows,df.sales;color = df.sales, strokecolor = :black, strokewidth = 1,bar_labels = :y)\n    # for (idx, row) in enumerate(eachrow(df))\n    #     sales=round(row.sales,digits=2)\n    #     GLMakie.text!(ax,idx,sales+100,; text=\"$(sales)\",align = (:center, :center),fontsize=12)\n    # end\n    GLMakie.hidedecorations!(ax,label = false, ticklabels = false, ticks = false)\n    fig\nend\nplot_sales_by_region(df3_16)\n\n\n\n\n\n\n\n\n\nfunction plot_sales_by_region_pie(df::AbstractDataFrame)\n    \n    colors = [:yellow,:red, :purple, :green]\n    fig=Figure(resolution=(500,500))\n    ax=Axis(fig[1,1];title=\"video game sales by region\",autolimitaspect = 1)\n    GLMakie.pie!(ax, df.sales;color=colors,radius=4,inner_radius = 2,\n    strokecolor = :white,\n    strokewidth = 5)\n    labels = [\"$i\" for i in df.region]\n    elements = [PolyElement(polycolor = colors[i]) for (i,c) in enumerate(df.region)]\n    Legend(fig[1,2], elements, labels, \"sales region\", orientation=:vertical, tellwidth = true, tellheight =false)\n    GLMakie.hidedecorations!(ax,label = false)\n    fig\nend\nplot_sales_by_region_pie(df3_16)\n\n\n\n\n\n\n\n\n\n\n3.17 Sales Histogram\n\nf=log # transfromer  function \n\ndf3_18=@pipe select(data,[:na_sales,:eu_sales,:jp_sales,:other_sales,:global_sales])\n# log_df3_18=@pipe @transform(df3_18,:na_sales=f.(:na_sales),:eu_sales=f.(:eu_sales),:jp_sales=f.(:jp_sales),\n#  :other_sales=f.(:other_sales),:global_sales=f.(:global_sales)\n# )|&gt;select(_,[:na_sales,:eu_sales,:jp_sales,:other_sales,:global_sales])\n\n16598×5 DataFrame16573 rows omitted\n\n\n\nRow\nna_sales\neu_sales\njp_sales\nother_sales\nglobal_sales\n\n\n\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n41.49\n29.02\n3.77\n8.46\n82.74\n\n\n2\n29.08\n3.58\n6.81\n0.77\n40.24\n\n\n3\n15.85\n12.88\n3.79\n3.31\n35.82\n\n\n4\n15.75\n11.01\n3.28\n2.96\n33.0\n\n\n5\n11.27\n8.89\n10.22\n1.0\n31.37\n\n\n6\n23.2\n2.26\n4.22\n0.58\n30.26\n\n\n7\n11.38\n9.23\n6.5\n2.9\n30.01\n\n\n8\n14.03\n9.2\n2.93\n2.85\n29.02\n\n\n9\n14.59\n7.06\n4.7\n2.26\n28.62\n\n\n10\n26.93\n0.63\n0.28\n0.47\n28.31\n\n\n11\n9.07\n11.0\n1.93\n2.75\n24.76\n\n\n12\n9.81\n7.57\n4.13\n1.92\n23.42\n\n\n13\n9.0\n6.18\n7.2\n0.71\n23.1\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n16587\n0.0\n0.01\n0.0\n0.0\n0.01\n\n\n16588\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16589\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16590\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16591\n0.0\n0.0\n0.01\n0.0\n0.01\n\n\n16592\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16593\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16594\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16595\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n16596\n0.0\n0.0\n0.0\n0.0\n0.01\n\n\n16597\n0.0\n0.01\n0.0\n0.0\n0.01\n\n\n16598\n0.01\n0.0\n0.0\n0.0\n0.01\n\n\n\n\n\n\n\nfunction plot_sales_hist(df::AbstractDataFrame)\n    cats=names(df)\n    fig=Figure(resolution=(600,600))\n    for (idx, col) in enumerate(eachcol(df))\n        local ax=Axis(fig[fldmod1(idx,2)...],title=cats[idx])\n        data=@pipe filter(x-&gt;x!=0,col)|&gt;f.(_)\n        GLMakie.hist!(ax,data, color = :blue, strokewidth = 1, strokecolor = :black,label=cats[idx],normalization =:pdf)\n        density!(ax, data; color = (:green, 0.4), label = \"density\", strokewidth = 2,strokecolor=:red,npoints = 15)\n        \n    end\n    \n    fig\nend\nplot_sales_hist(df3_18)"
  },
  {
    "objectID": "posts/videogame-analysis/index.html#the-end",
    "href": "posts/videogame-analysis/index.html#the-end",
    "title": "Video Game Data Visualization",
    "section": "The End",
    "text": "The End\nThat is a exercises about julia dataframe opreation methods"
  },
  {
    "objectID": "posts/welcome/filter-by-column-eltype.html",
    "href": "posts/welcome/filter-by-column-eltype.html",
    "title": "Filter DataFrame Columns by eltype",
    "section": "",
    "text": "include(\"../utils.jl\")   # import load_csv method\n\n[ Info: loading success!"
  },
  {
    "objectID": "posts/welcome/filter-by-column-eltype.html#load-package",
    "href": "posts/welcome/filter-by-column-eltype.html#load-package",
    "title": "Filter DataFrame Columns by eltype",
    "section": "",
    "text": "include(\"../utils.jl\")   # import load_csv method\n\n[ Info: loading success!"
  },
  {
    "objectID": "posts/welcome/filter-by-column-eltype.html#load-data",
    "href": "posts/welcome/filter-by-column-eltype.html#load-data",
    "title": "Filter DataFrame Columns by eltype",
    "section": "2. load data",
    "text": "2. load data\n\ndf =load_csv(\"airbnb_nyc_2019\",false)\n@pipe names(df)|&gt;lowercase.(_)|&gt;rename!(df,_);"
  },
  {
    "objectID": "posts/welcome/filter-by-column-eltype.html#describe-data",
    "href": "posts/welcome/filter-by-column-eltype.html#describe-data",
    "title": "Filter DataFrame Columns by eltype",
    "section": "3. describe data",
    "text": "3. describe data\n\n type_df=@pipe describe(df)|&gt;select(_,[:variable,:eltype])\n\n16×2 DataFrame\n\n\n\nRow\nvariable\neltype\n\n\n\nSymbol\nType\n\n\n\n\n1\nid\nInt64\n\n\n2\nname\nString\n\n\n3\nhost_id\nInt64\n\n\n4\nhost_name\nUnion{Missing, String}\n\n\n5\nneighbourhood_group\nString15\n\n\n6\nneighbourhood\nString31\n\n\n7\nlatitude\nFloat64\n\n\n8\nlongitude\nFloat64\n\n\n9\nroom_type\nString15\n\n\n10\nprice\nInt64\n\n\n11\nminimum_nights\nInt64\n\n\n12\nnumber_of_reviews\nInt64\n\n\n13\nlast_review\nUnion{Missing, Date}\n\n\n14\nreviews_per_month\nUnion{Missing, Float64}\n\n\n15\ncalculated_host_listings_count\nInt64\n\n\n16\navailability_365\nInt64"
  },
  {
    "objectID": "posts/welcome/filter-by-column-eltype.html#filter-supertype",
    "href": "posts/welcome/filter-by-column-eltype.html#filter-supertype",
    "title": "Filter DataFrame Columns by eltype",
    "section": "4. filter supertype",
    "text": "4. filter supertype\n\nint_df=@chain type_df begin\n    @filter(isa(eltype,Union{Type{Int64},Type{Float64}}))\nend\n\n\n@eval(Main, myvar =int_df.variable)\n@chain df begin\n    @select(!!myvar)\nend\n\n48895×9 DataFrame48870 rows omitted\n\n\n\nRow\nid\nhost_id\nlatitude\nlongitude\nprice\nminimum_nights\nnumber_of_reviews\ncalculated_host_listings_count\navailability_365\n\n\n\nInt64\nInt64\nFloat64\nFloat64\nInt64\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\n2539\n2787\n40.6475\n-73.9724\n149\n1\n9\n6\n365\n\n\n2\n2595\n2845\n40.7536\n-73.9838\n225\n1\n45\n2\n355\n\n\n3\n3647\n4632\n40.809\n-73.9419\n150\n3\n0\n1\n365\n\n\n4\n3831\n4869\n40.6851\n-73.9598\n89\n1\n270\n1\n194\n\n\n5\n5022\n7192\n40.7985\n-73.944\n80\n10\n9\n1\n0\n\n\n6\n5099\n7322\n40.7477\n-73.975\n200\n3\n74\n1\n129\n\n\n7\n5121\n7356\n40.6869\n-73.956\n60\n45\n49\n1\n0\n\n\n8\n5178\n8967\n40.7649\n-73.9849\n79\n2\n430\n1\n220\n\n\n9\n5203\n7490\n40.8018\n-73.9672\n79\n2\n118\n1\n0\n\n\n10\n5238\n7549\n40.7134\n-73.9904\n150\n1\n160\n4\n188\n\n\n11\n5295\n7702\n40.8032\n-73.9655\n135\n5\n53\n1\n6\n\n\n12\n5441\n7989\n40.7608\n-73.9887\n85\n2\n188\n1\n39\n\n\n13\n5803\n9744\n40.6683\n-73.9878\n89\n4\n167\n3\n314\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n48884\n36482416\n131529729\n40.7976\n-73.9361\n75\n2\n0\n2\n364\n\n\n48885\n36482783\n274307600\n40.7179\n-73.9624\n190\n7\n0\n1\n341\n\n\n48886\n36482809\n131529729\n40.7963\n-73.936\n75\n2\n0\n2\n353\n\n\n48887\n36483010\n274311461\n40.7556\n-73.9672\n200\n6\n0\n1\n176\n\n\n48888\n36483152\n208514239\n40.7123\n-73.9422\n170\n1\n0\n3\n365\n\n\n48889\n36484087\n274321313\n40.7639\n-73.9918\n125\n4\n0\n1\n31\n\n\n48890\n36484363\n107716952\n40.6914\n-73.8084\n65\n1\n0\n2\n163\n\n\n48891\n36484665\n8232441\n40.6785\n-73.95\n70\n2\n0\n2\n9\n\n\n48892\n36485057\n6570630\n40.7018\n-73.9332\n40\n4\n0\n2\n36\n\n\n48893\n36485431\n23492952\n40.8147\n-73.9487\n115\n10\n0\n1\n27\n\n\n48894\n36485609\n30985759\n40.7575\n-73.9911\n55\n1\n0\n6\n2\n\n\n48895\n36487245\n68119814\n40.764\n-73.9893\n90\n7\n0\n1\n23"
  },
  {
    "objectID": "posts/data-vis/aerial bombing operations in wwii.html",
    "href": "posts/data-vis/aerial bombing operations in wwii.html",
    "title": "aerial boming operations in world war 2 data analysis",
    "section": "",
    "text": "info\n\n\n\n\nref :Time Series Prediction Tutorial with EDA"
  },
  {
    "objectID": "posts/data-vis/aerial bombing operations in wwii.html#load-package",
    "href": "posts/data-vis/aerial bombing operations in wwii.html#load-package",
    "title": "aerial boming operations in world war 2 data analysis",
    "section": "1. load package",
    "text": "1. load package\n\ninclude(\"../utils.jl\")   # import load_csv method\n\n(marker = :circle, markersize = 12, color = (:green, 0.2), strokewidth = 1, strokecolor = :black)"
  },
  {
    "objectID": "posts/data-vis/aerial bombing operations in wwii.html#load-data",
    "href": "posts/data-vis/aerial bombing operations in wwii.html#load-data",
    "title": "aerial boming operations in world war 2 data analysis",
    "section": "2. load data",
    "text": "2. load data\n\ndf1 = load_csv(\"operations\",true)\ndf2= load_csv(\"Summary of Weather\",true)\ndf3= load_csv(\"Weather Station Locations\",true)\n@pipe names(df1)|&gt;lowercase.(_)|&gt;rename!(df1,_)\n@pipe names(df2)|&gt;lowercase.(_)|&gt;rename!(df2,_)\n@pipe names(df3)|&gt;lowercase.(_)|&gt;rename!(df3,_);\n\n\nfirst(df1,5),first(df2,5),first(df3,5)\n\n\n(0×46 DataFrame\n Row │ mission id  mission date  theater of operations  country   air force  u ⋯\n     │ Int64       String15      String15               String15  String15   S ⋯\n─────┴──────────────────────────────────────────────────────────────────────────\n                                                              41 columns omitted, 0×31 DataFrame\n Row │ sta    date  precip   windgustspd  maxtemp  mintemp  meantemp  snowfall ⋯\n     │ Int64  Date  String7  Float64      Float64  Float64  Float64   String7  ⋯\n─────┴──────────────────────────────────────────────────────────────────────────\n                                                              23 columns omitted, 5×8 DataFrame\n Row │ wban   name            state/country id  lat      lon      elev   latit ⋯\n     │ Int64  String31        String3           String7  String7  Int64  Float ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ 33013  AIN EL          AL                3623N    00637E     611   36.3 ⋯\n   2 │ 33031  LA SENIA        AL                3537N    00037E      88   35.6\n   3 │ 33023  MAISON BLANCHE  AL                3643N    00314E      23   36.7\n   4 │ 33044  TELERGMA        AL                3607N    00621E     754   36.1\n   5 │ 12001  TINDOUF         AL                2741N    00809W     443   27.6 ⋯\n                                                               2 columns omitted)"
  },
  {
    "objectID": "posts/data-vis/aerial bombing operations in wwii.html#clean-boming-data",
    "href": "posts/data-vis/aerial bombing operations in wwii.html#clean-boming-data",
    "title": "aerial boming operations in world war 2 data analysis",
    "section": "clean boming data",
    "text": "clean boming data\n\n@pipe describe(df1)|&gt;select(_,[:variable,:nmissing,:eltype])\n\n46×3 DataFrame21 rows omitted\n\n\n\nRow\nvariable\nnmissing\neltype\n\n\n\nSymbol\nInt64\nDataType\n\n\n\n\n1\nmission id\n0\nInt64\n\n\n2\nmission date\n0\nString15\n\n\n3\ntheater of operations\n0\nString15\n\n\n4\ncountry\n0\nString15\n\n\n5\nair force\n0\nString15\n\n\n6\nunit id\n0\nString31\n\n\n7\naircraft series\n0\nString15\n\n\n8\ncallsign\n0\nString15\n\n\n9\nmission type\n0\nString15\n\n\n10\ntakeoff base\n0\nString\n\n\n11\ntakeoff location\n0\nString15\n\n\n12\ntakeoff latitude\n0\nString15\n\n\n13\ntakeoff longitude\n0\nFloat64\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n35\nincendiary devices type\n0\nString\n\n\n36\nincendiary devices weight (pounds)\n0\nFloat64\n\n\n37\nincendiary devices weight (tons)\n0\nFloat64\n\n\n38\nfragmentation devices\n0\nFloat64\n\n\n39\nfragmentation devices type\n0\nString\n\n\n40\nfragmentation devices weight (pounds)\n0\nFloat64\n\n\n41\nfragmentation devices weight (tons)\n0\nFloat64\n\n\n42\ntotal weight (pounds)\n0\nFloat64\n\n\n43\ntotal weight (tons)\n0\nFloat64\n\n\n44\ntime over target\n0\nString15\n\n\n45\nbomb damage assessment\n0\nString\n\n\n46\nsource id\n0\nInt64\n\n\n\n\n\n\n\nsize(df1)\n\n(0, 46)\n\n\n\n@pipe describe(df2)|&gt;select(_,[:variable,:nmissing,:eltype])\n\n31×3 DataFrame6 rows omitted\n\n\n\nRow\nvariable\nnmissing\neltype\n\n\n\nSymbol\nInt64\nType\n\n\n\n\n1\nsta\n0\nInt64\n\n\n2\ndate\n0\nDate\n\n\n3\nprecip\n0\nString7\n\n\n4\nwindgustspd\n0\nFloat64\n\n\n5\nmaxtemp\n0\nFloat64\n\n\n6\nmintemp\n0\nFloat64\n\n\n7\nmeantemp\n0\nFloat64\n\n\n8\nsnowfall\n0\nString7\n\n\n9\npoorweather\n0\nString15\n\n\n10\nyr\n0\nInt64\n\n\n11\nmo\n0\nInt64\n\n\n12\nda\n0\nInt64\n\n\n13\nprcp\n0\nString7\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n20\nsnd\n0\nInt64\n\n\n21\nft\n0\nUnion{}\n\n\n22\nfb\n0\nUnion{}\n\n\n23\nfti\n0\nUnion{}\n\n\n24\nith\n0\nUnion{}\n\n\n25\npgt\n0\nFloat64\n\n\n26\ntshdsbrsgf\n0\nString15\n\n\n27\nsd3\n0\nUnion{}\n\n\n28\nrhx\n0\nUnion{}\n\n\n29\nrhn\n0\nUnion{}\n\n\n30\nrvg\n0\nUnion{}\n\n\n31\nwte\n0\nUnion{}\n\n\n\n\n\n\n\nsize(df2)\n\n(0, 31)\n\n\n\n@pipe describe(df3)|&gt;select(_,[:variable,:nmissing,:eltype])\n\n8×3 DataFrame\n\n\n\nRow\nvariable\nnmissing\neltype\n\n\n\nSymbol\nInt64\nDataType\n\n\n\n\n1\nwban\n0\nInt64\n\n\n2\nname\n0\nString31\n\n\n3\nstate/country id\n0\nString3\n\n\n4\nlat\n0\nString7\n\n\n5\nlon\n0\nString7\n\n\n6\nelev\n0\nInt64\n\n\n7\nlatitude\n0\nFloat64\n\n\n8\nlongitude\n0\nFloat64\n\n\n\n\n\n\n\nsize(df3)\n\n(161, 8)"
  },
  {
    "objectID": "posts/data-vis/index.html",
    "href": "posts/data-vis/index.html",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "",
    "text": "简介\n\n\n\nref: 2018-19 English Premier League: An Exploratory Data Analysis\nData Dictionary"
  },
  {
    "objectID": "posts/data-vis/index.html#load-package",
    "href": "posts/data-vis/index.html#load-package",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "1. load package",
    "text": "1. load package\n\ninclude(\"../utils.jl\")   # import load_csv method\n\n(marker = :circle, markersize = 12, color = (:green, 0.2), strokewidth = 1, strokecolor = :black)"
  },
  {
    "objectID": "posts/data-vis/index.html#load-data",
    "href": "posts/data-vis/index.html#load-data",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "2. load data",
    "text": "2. load data\n\ndf =load_csv(\"soccer-2018-19\",false)\n@pipe names(df)|&gt;lowercase.(_)|&gt;rename!(df,_);"
  },
  {
    "objectID": "posts/data-vis/index.html#peek-data",
    "href": "posts/data-vis/index.html#peek-data",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "3. peek data",
    "text": "3. peek data\n\n@chain df begin\n @slice(1:5)\nend\n\n5×23 DataFrame\n\n\n\nRow\ndiv\ndate\nhometeam\nawayteam\nfthg\nftag\nftr\nhthg\nhtag\nhtr\nreferee\nhs\nas\nhst\nast\nhf\naf\nhc\nac\nhy\nay\nhr\nar\n\n\n\nString3\nString15\nString15\nString15\nInt64\nInt64\nString1\nInt64\nInt64\nString1\nString15\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\nE0\n10/8/18\nMan United\nLeicester\n2\n1\nH\n1\n0\nH\nA Marriner\n8\n13\n6\n4\n11\n8\n2\n5\n2\n1\n0\n0\n\n\n2\nE0\n11/8/18\nBournemouth\nCardiff\n2\n0\nH\n1\n0\nH\nK Friend\n12\n10\n4\n1\n11\n9\n7\n4\n1\n1\n0\n0\n\n\n3\nE0\n11/8/18\nFulham\nCrystal Palace\n0\n2\nA\n0\n1\nA\nM Dean\n15\n10\n6\n9\n9\n11\n5\n5\n1\n2\n0\n0\n\n\n4\nE0\n11/8/18\nHuddersfield\nChelsea\n0\n3\nA\n0\n2\nA\nC Kavanagh\n6\n13\n1\n4\n9\n8\n2\n5\n2\n1\n0\n0\n\n\n5\nE0\n11/8/18\nNewcastle\nTottenham\n1\n2\nA\n1\n2\nA\nM Atkinson\n15\n15\n2\n5\n11\n12\n3\n5\n2\n2\n0\n0"
  },
  {
    "objectID": "posts/data-vis/index.html#info-of-dataframe",
    "href": "posts/data-vis/index.html#info-of-dataframe",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "4. info of dataframe",
    "text": "4. info of dataframe\n\ndf_info=describe(df,:nmissing, :eltype)\n\n23×3 DataFrame\n\n\n\nRow\nvariable\nnmissing\neltype\n\n\n\nSymbol\nInt64\nDataType\n\n\n\n\n1\ndiv\n0\nString3\n\n\n2\ndate\n0\nString15\n\n\n3\nhometeam\n0\nString15\n\n\n4\nawayteam\n0\nString15\n\n\n5\nfthg\n0\nInt64\n\n\n6\nftag\n0\nInt64\n\n\n7\nftr\n0\nString1\n\n\n8\nhthg\n0\nInt64\n\n\n9\nhtag\n0\nInt64\n\n\n10\nhtr\n0\nString1\n\n\n11\nreferee\n0\nString15\n\n\n12\nhs\n0\nInt64\n\n\n13\nas\n0\nInt64\n\n\n14\nhst\n0\nInt64\n\n\n15\nast\n0\nInt64\n\n\n16\nhf\n0\nInt64\n\n\n17\naf\n0\nInt64\n\n\n18\nhc\n0\nInt64\n\n\n19\nac\n0\nInt64\n\n\n20\nhy\n0\nInt64\n\n\n21\nay\n0\nInt64\n\n\n22\nhr\n0\nInt64\n\n\n23\nar\n0\nInt64\n\n\n\n\n\n\n\n sum(df_info.nmissing)\n\n0"
  },
  {
    "objectID": "posts/data-vis/index.html#collect-all-team-name",
    "href": "posts/data-vis/index.html#collect-all-team-name",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "5. collect all team name",
    "text": "5. collect all team name\n\nteams=df.hometeam|&gt;levels\n\n20-element Vector{String15}:\n \"Arsenal\"\n \"Bournemouth\"\n \"Brighton\"\n \"Burnley\"\n \"Cardiff\"\n \"Chelsea\"\n \"Crystal Palace\"\n \"Everton\"\n \"Fulham\"\n \"Huddersfield\"\n \"Leicester\"\n \"Liverpool\"\n \"Man City\"\n \"Man United\"\n \"Newcastle\"\n \"Southampton\"\n \"Tottenham\"\n \"Watford\"\n \"West Ham\"\n \"Wolves\""
  },
  {
    "objectID": "posts/data-vis/index.html#find-how-many-matches-every-team-play",
    "href": "posts/data-vis/index.html#find-how-many-matches-every-team-play",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "6. find how many matches every team play",
    "text": "6. find how many matches every team play\n\ndf6=@chain df begin\n @group_by  hometeam\n @summarize   play_in_home=nrow()\nend\n\n20×2 DataFrame\n\n\n\nRow\nhometeam\nplay_in_home\n\n\n\nString15\nInt64\n\n\n\n\n1\nMan United\n19\n\n\n2\nBournemouth\n19\n\n\n3\nFulham\n19\n\n\n4\nHuddersfield\n19\n\n\n5\nNewcastle\n19\n\n\n6\nWatford\n19\n\n\n7\nWolves\n19\n\n\n8\nArsenal\n19\n\n\n9\nLiverpool\n19\n\n\n10\nSouthampton\n19\n\n\n11\nCardiff\n19\n\n\n12\nChelsea\n19\n\n\n13\nEverton\n19\n\n\n14\nLeicester\n19\n\n\n15\nTottenham\n19\n\n\n16\nWest Ham\n19\n\n\n17\nBrighton\n19\n\n\n18\nBurnley\n19\n\n\n19\nMan City\n19\n\n\n20\nCrystal Palace\n19"
  },
  {
    "objectID": "posts/data-vis/index.html#plot-features-outliers",
    "href": "posts/data-vis/index.html#plot-features-outliers",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "7. plot feature’s outliers",
    "text": "7. plot feature’s outliers\n\ndf7=@chain df begin\n    @select(5,6,hs:ar)\nend\n\n380×14 DataFrame355 rows omitted\n\n\n\nRow\nfthg\nftag\nhs\nas\nhst\nast\nhf\naf\nhc\nac\nhy\nay\nhr\nar\n\n\n\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\n2\n1\n8\n13\n6\n4\n11\n8\n2\n5\n2\n1\n0\n0\n\n\n2\n2\n0\n12\n10\n4\n1\n11\n9\n7\n4\n1\n1\n0\n0\n\n\n3\n0\n2\n15\n10\n6\n9\n9\n11\n5\n5\n1\n2\n0\n0\n\n\n4\n0\n3\n6\n13\n1\n4\n9\n8\n2\n5\n2\n1\n0\n0\n\n\n5\n1\n2\n15\n15\n2\n5\n11\n12\n3\n5\n2\n2\n0\n0\n\n\n6\n2\n0\n19\n6\n5\n0\n10\n16\n8\n2\n2\n2\n0\n0\n\n\n7\n2\n2\n11\n6\n4\n5\n8\n7\n3\n6\n0\n1\n0\n1\n\n\n8\n0\n2\n9\n17\n3\n8\n11\n14\n2\n9\n2\n2\n0\n0\n\n\n9\n4\n0\n18\n5\n8\n2\n14\n9\n5\n4\n1\n2\n0\n0\n\n\n10\n0\n0\n18\n16\n3\n6\n10\n9\n8\n5\n0\n1\n0\n0\n\n\n11\n0\n0\n12\n12\n1\n6\n14\n16\n5\n5\n2\n2\n0\n1\n\n\n12\n3\n2\n24\n15\n11\n6\n12\n9\n5\n1\n0\n2\n0\n0\n\n\n13\n2\n1\n13\n15\n7\n4\n8\n20\n2\n5\n0\n5\n0\n0\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n369\n1\n1\n7\n23\n3\n7\n10\n10\n3\n7\n1\n1\n0\n0\n\n\n370\n1\n0\n19\n7\n5\n2\n12\n5\n11\n0\n3\n2\n0\n0\n\n\n371\n1\n4\n6\n20\n2\n9\n12\n8\n2\n6\n0\n0\n0\n0\n\n\n372\n1\n3\n14\n17\n5\n6\n11\n3\n4\n5\n5\n1\n0\n0\n\n\n373\n5\n3\n17\n16\n8\n8\n11\n8\n4\n4\n3\n0\n0\n0\n\n\n374\n0\n4\n16\n13\n2\n6\n6\n8\n5\n5\n1\n0\n0\n0\n\n\n375\n0\n0\n9\n14\n3\n4\n9\n8\n4\n5\n0\n1\n0\n0\n\n\n376\n2\n0\n13\n7\n5\n2\n3\n11\n4\n1\n0\n2\n0\n0\n\n\n377\n0\n2\n26\n13\n10\n4\n9\n6\n11\n2\n3\n3\n0\n0\n\n\n378\n1\n1\n10\n10\n3\n3\n8\n6\n4\n3\n0\n1\n0\n0\n\n\n379\n2\n2\n11\n17\n3\n9\n10\n13\n7\n4\n0\n2\n0\n0\n\n\n380\n1\n4\n17\n16\n8\n9\n10\n10\n7\n2\n1\n0\n1\n0\n\n\n\n\n\n\n\nfunction plot_features_boxplot(df::AbstractDataFrame)\n  row,col=size(df)\n  features=names(df)\n  fig=Figure(resolution=(1000,500))\n  ax=Axis(fig[1,1],title=\"boxplot of features\")\n  ax.xlabel=\"feature\";ax.ylabel=\"counts\"\n  ax.xticks=(1:col,features)\n  for (idx,col)  in enumerate(collect(eachcol(df)))\n    boxplot!(ax,fill(idx,row),col)\n  end\n  \n  fig\nend\nplot_features_boxplot(df7)"
  },
  {
    "objectID": "posts/data-vis/index.html#plot-feature-hist",
    "href": "posts/data-vis/index.html#plot-feature-hist",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "8. plot feature hist",
    "text": "8. plot feature hist\n\nfunction plot_feature_hist(df::AbstractDataFrame,feature::Union{String,Symbol})\n  row,col,features=nrow(df),ncol(df),names(df)\n  @assert  feature in  features||Symbol.(features)\n  local fig=Figure(resolution=(500,500))\n  ax=Axis(fig[1,1],title=\"hist of feature:$(feature)\")\n  ax.xlabel=\"bin\";ax.ylabel=\"frequency\"\n  hist!(df[:,feature];strokewidth = 1, strokecolor = :black)\n  fig\nend\n\nplot_feature_hist(df7,\"fthg\")\n\n\n\n\n\n\n\n\n\nplot_feature_hist(df7,\"ftag\")"
  },
  {
    "objectID": "posts/data-vis/index.html#compare-all-teams-mean-of-certain-feature",
    "href": "posts/data-vis/index.html#compare-all-teams-mean-of-certain-feature",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "9. compare all teams mean of certain feature",
    "text": "9. compare all teams mean of certain feature\n\ndf_fthg_mean=@chain df begin\n   @group_by hometeam\n   @summarise fthg_mean=mean(fthg)\nend\n\n20×2 DataFrame\n\n\n\nRow\nhometeam\nfthg_mean\n\n\n\nString15\nFloat64\n\n\n\n\n1\nMan United\n1.73684\n\n\n2\nBournemouth\n1.57895\n\n\n3\nFulham\n1.15789\n\n\n4\nHuddersfield\n0.526316\n\n\n5\nNewcastle\n1.26316\n\n\n6\nWatford\n1.36842\n\n\n7\nWolves\n1.47368\n\n\n8\nArsenal\n2.21053\n\n\n9\nLiverpool\n2.89474\n\n\n10\nSouthampton\n1.42105\n\n\n11\nCardiff\n1.10526\n\n\n12\nChelsea\n2.05263\n\n\n13\nEverton\n1.57895\n\n\n14\nLeicester\n1.26316\n\n\n15\nTottenham\n1.78947\n\n\n16\nWest Ham\n1.68421\n\n\n17\nBrighton\n1.0\n\n\n18\nBurnley\n1.26316\n\n\n19\nMan City\n3.0\n\n\n20\nCrystal Palace\n1.0\n\n\n\n\n\n\n\n# function plot_team_avg(df::AbstractDataFrame)\n# end\n#@eval(Main, cat=:fthg)\ndf_mean=@chain df begin\n   @group_by hometeam\n   @summarise cat_mean=mean(fthg)\nend\nrow,col=size(df_mean)\nlet \n  fig=Figure(resolution=(1000,400))\n  ax=Axis(fig[1,1];title=\"barplot of fthg\",xticklabelrotation = pi/8)\n#   ax.xlabel=\"team\";ax.ylabel=String(feature)\n  ax.xticks=(1:row,df_mean.hometeam)\n  barplot!(ax,df_mean.cat_mean;strokewidth = 1, strokecolor = :black)\n  fig\nend"
  },
  {
    "objectID": "posts/data-vis/index.html#find-seasonality-patterns",
    "href": "posts/data-vis/index.html#find-seasonality-patterns",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "10. find seasonality patterns",
    "text": "10. find seasonality patterns\n\n  # using Dates\n  # @chain df begin\n  # @mutate(date=DateTime(split(date,\"/\")...))\n  # end"
  },
  {
    "objectID": "posts/data-vis/index.html#explore-relationship-of-two-variables",
    "href": "posts/data-vis/index.html#explore-relationship-of-two-variables",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "11. explore relationship of two variables",
    "text": "11. explore relationship of two variables\n\nfunction plot_pair_relation(data::AbstractDataFrame,pair::Vector{Symbol})\n  fig=Figure()\n  ax=Axis(fig[1,1])\n  ax.title=\"$(Symbol.(pair))-relathioship\"\n  scatter!(ax,data[:,pair[1]],data[:,pair[2]];markersize=12,color=(:lightgreen,0.2),strokecolor = :black, strokewidth =2)\n  fig\n  \nend\n\nplot_pair_relation(df,[:hf,:hy])"
  },
  {
    "objectID": "posts/data-vis/index.html#explore-variables-coorelation",
    "href": "posts/data-vis/index.html#explore-variables-coorelation",
    "title": "2018-19 English Premier League: An Exploratory Data Analysis",
    "section": "12. explore variables coorelation",
    "text": "12. explore variables coorelation\n\ncor_df=@chain df begin\n   @select(fthg,ftag,hst,hs,as,hc,ac)\nend\n\n380×7 DataFrame355 rows omitted\n\n\n\nRow\nfthg\nftag\nhst\nhs\nas\nhc\nac\n\n\n\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\n2\n1\n6\n8\n13\n2\n5\n\n\n2\n2\n0\n4\n12\n10\n7\n4\n\n\n3\n0\n2\n6\n15\n10\n5\n5\n\n\n4\n0\n3\n1\n6\n13\n2\n5\n\n\n5\n1\n2\n2\n15\n15\n3\n5\n\n\n6\n2\n0\n5\n19\n6\n8\n2\n\n\n7\n2\n2\n4\n11\n6\n3\n6\n\n\n8\n0\n2\n3\n9\n17\n2\n9\n\n\n9\n4\n0\n8\n18\n5\n5\n4\n\n\n10\n0\n0\n3\n18\n16\n8\n5\n\n\n11\n0\n0\n1\n12\n12\n5\n5\n\n\n12\n3\n2\n11\n24\n15\n5\n1\n\n\n13\n2\n1\n7\n13\n15\n2\n5\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n369\n1\n1\n3\n7\n23\n3\n7\n\n\n370\n1\n0\n5\n19\n7\n11\n0\n\n\n371\n1\n4\n2\n6\n20\n2\n6\n\n\n372\n1\n3\n5\n14\n17\n4\n5\n\n\n373\n5\n3\n8\n17\n16\n4\n4\n\n\n374\n0\n4\n2\n16\n13\n5\n5\n\n\n375\n0\n0\n3\n9\n14\n4\n5\n\n\n376\n2\n0\n5\n13\n7\n4\n1\n\n\n377\n0\n2\n10\n26\n13\n11\n2\n\n\n378\n1\n1\n3\n10\n10\n4\n3\n\n\n379\n2\n2\n3\n11\n17\n7\n4\n\n\n380\n1\n4\n8\n17\n16\n7\n2\n\n\n\n\n\n\n\nfunction plot_coor_mat(df::AbstractDataFrame)\n cor_mat=cor(Matrix(df))\n m,n=size(cor_mat)\n ticks=names(df)\n fig=Figure()\n ax=Axis(fig[1,1];yreversed=true)\n ax.xticks = (1:m, ticks)\n ax.yticks = (1:m, ticks)\n hm=heatmap!(ax,cor_mat;colormap = :plasma)\n for i in 1:m, j in 1:n\n    txtcolor = cor_mat[i, j] &lt; 0.15 ? :white : :black\n    text!(ax, \"$(round(cor_mat[i,j], digits = 2))\", position = (i, j),\n        color = txtcolor, align = (:center, :center))\nend\n Colorbar(fig[1, 2], hm; label = \"values\", width = 15)\n fig\nend\nplot_coor_mat(cor_df)"
  },
  {
    "objectID": "posts/data-vis/index2.html",
    "href": "posts/data-vis/index2.html",
    "title": "2018-19 English Premier League: Machine Learning",
    "section": "",
    "text": "include(\"../utils.jl\")   # import load_csv method\n\n(marker = :circle, markersize = 12, color = (:green, 0.2), strokewidth = 1, strokecolor = :black)"
  },
  {
    "objectID": "posts/data-vis/index2.html#load-package",
    "href": "posts/data-vis/index2.html#load-package",
    "title": "2018-19 English Premier League: Machine Learning",
    "section": "",
    "text": "include(\"../utils.jl\")   # import load_csv method\n\n(marker = :circle, markersize = 12, color = (:green, 0.2), strokewidth = 1, strokecolor = :black)"
  },
  {
    "objectID": "posts/data-vis/index2.html#load-data",
    "href": "posts/data-vis/index2.html#load-data",
    "title": "2018-19 English Premier League: Machine Learning",
    "section": "2. load data",
    "text": "2. load data\n\ndf =load_csv(\"soccer-2018-19\",false)\n@pipe names(df)|&gt;lowercase.(_)|&gt;rename!(df,_);"
  },
  {
    "objectID": "posts/data-vis/index2.html#peek-data",
    "href": "posts/data-vis/index2.html#peek-data",
    "title": "2018-19 English Premier League: Machine Learning",
    "section": "3. peek data",
    "text": "3. peek data\n\n@chain df begin\n @slice(1:5)\nend\n\n5×23 DataFrame\n\n\n\nRow\ndiv\ndate\nhometeam\nawayteam\nfthg\nftag\nftr\nhthg\nhtag\nhtr\nreferee\nhs\nas\nhst\nast\nhf\naf\nhc\nac\nhy\nay\nhr\nar\n\n\n\nString3\nString15\nString15\nString15\nInt64\nInt64\nString1\nInt64\nInt64\nString1\nString15\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\nE0\n10/8/18\nMan United\nLeicester\n2\n1\nH\n1\n0\nH\nA Marriner\n8\n13\n6\n4\n11\n8\n2\n5\n2\n1\n0\n0\n\n\n2\nE0\n11/8/18\nBournemouth\nCardiff\n2\n0\nH\n1\n0\nH\nK Friend\n12\n10\n4\n1\n11\n9\n7\n4\n1\n1\n0\n0\n\n\n3\nE0\n11/8/18\nFulham\nCrystal Palace\n0\n2\nA\n0\n1\nA\nM Dean\n15\n10\n6\n9\n9\n11\n5\n5\n1\n2\n0\n0\n\n\n4\nE0\n11/8/18\nHuddersfield\nChelsea\n0\n3\nA\n0\n2\nA\nC Kavanagh\n6\n13\n1\n4\n9\n8\n2\n5\n2\n1\n0\n0\n\n\n5\nE0\n11/8/18\nNewcastle\nTottenham\n1\n2\nA\n1\n2\nA\nM Atkinson\n15\n15\n2\n5\n11\n12\n3\n5\n2\n2\n0\n0"
  },
  {
    "objectID": "posts/data-vis/index2.html#relationship-of-taken-shots-and-goal-in-each-matches",
    "href": "posts/data-vis/index2.html#relationship-of-taken-shots-and-goal-in-each-matches",
    "title": "2018-19 English Premier League: Machine Learning",
    "section": "4. relationship of taken shots and goal in each matches",
    "text": "4. relationship of taken shots and goal in each matches\n\n4.1 home matches\n\narsenal_home_df=@chain df begin\n   @filter(hometeam==\"Arsenal\")\n   @select(hs,fthg)\nend\n\narsenal_guest_df=@chain df begin\n   @filter(awayteam==\"Arsenal\")\n   @select(hs,fthg)\nend\n\n19×2 DataFrame\n\n\n\nRow\nhs\nfthg\n\n\n\nInt64\nInt64\n\n\n\n\n1\n24\n3\n\n\n2\n14\n2\n\n\n3\n4\n1\n\n\n4\n21\n1\n\n\n5\n16\n2\n\n\n6\n11\n1\n\n\n7\n10\n2\n\n\n8\n12\n3\n\n\n9\n12\n1\n\n\n10\n15\n5\n\n\n11\n11\n1\n\n\n12\n19\n3\n\n\n13\n15\n1\n\n\n14\n10\n1\n\n\n15\n23\n1\n\n\n16\n11\n0\n\n\n17\n11\n3\n\n\n18\n24\n3\n\n\n19\n14\n1\n\n\n\n\n\n\n\nfunction plot_hs_fthg_cor(df::AbstractDataFrame)\n    set_aog_theme!()\n    axis = (width = 300, height = 300)\n    hs_fthg= data(df) * mapping(:hs,:fthg)\n    plt = hs_fthg * (linear() + mapping(color=:fthg))\n    draw(plt; axis = axis)\nend\nplot_hs_fthg_cor(arsenal_home_df)\n\n\n\n\n\n\n\n\n主场射门次数和进球数的相关性检验\n\nCorrelationTest(eachcol(arsenal_home_df)...)\n\nTest for nonzero correlation\n----------------------------\nPopulation details:\n    parameter of interest:   Correlation\n    value under h_0:         0.0\n    point estimate:          0.461323\n    95% confidence interval: (0.009, 0.7569)\n\nTest summary:\n    outcome with 95% confidence: reject h_0\n    two-sided p-value:           0.0468\n\nDetails:\n    number of observations:          19\n    number of conditional variables: 0\n    t-statistic:                     2.14384\n    degrees of freedom:              17\n\n\n\n\n4.2 guest matches\n\nplot_hs_fthg_cor(arsenal_guest_df)\n\n\n\n\n\n\n\n\n客场射门次数和进球数的相关性检验\n\nCorrelationTest(eachcol(arsenal_guest_df)...)\n\nTest for nonzero correlation\n----------------------------\nPopulation details:\n    parameter of interest:   Correlation\n    value under h_0:         0.0\n    point estimate:          0.301218\n    95% confidence interval: (-0.1772, 0.6645)\n\nTest summary:\n    outcome with 95% confidence: fail to reject h_0\n    two-sided p-value:           0.2101\n\nDetails:\n    number of observations:          19\n    number of conditional variables: 0\n    t-statistic:                     1.30245\n    degrees of freedom:              17"
  },
  {
    "objectID": "posts/data-vis/index2.html#how-many-times-did-arsenal-win-first-half-and-win-either-full-game",
    "href": "posts/data-vis/index2.html#how-many-times-did-arsenal-win-first-half-and-win-either-full-game",
    "title": "2018-19 English Premier League: Machine Learning",
    "section": "5.How many times did Arsenal win first half and win either full game?",
    "text": "5.How many times did Arsenal win first half and win either full game?\n\nhalf_full_relationship=@chain df begin \n  @filter(hometeam==\"Arsenal\"||awayteam==\"Arsenal\")\n  \nend\n\n38×23 DataFrame13 rows omitted\n\n\n\nRow\ndiv\ndate\nhometeam\nawayteam\nfthg\nftag\nftr\nhthg\nhtag\nhtr\nreferee\nhs\nas\nhst\nast\nhf\naf\nhc\nac\nhy\nay\nhr\nar\n\n\n\nString3\nString15\nString15\nString15\nInt64\nInt64\nString1\nInt64\nInt64\nString1\nString15\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\nE0\n12/8/18\nArsenal\nMan City\n0\n2\nA\n0\n1\nA\nM Oliver\n9\n17\n3\n8\n11\n14\n2\n9\n2\n2\n0\n0\n\n\n2\nE0\n18/08/2018\nChelsea\nArsenal\n3\n2\nH\n2\n2\nD\nM Atkinson\n24\n15\n11\n6\n12\n9\n5\n1\n0\n2\n0\n0\n\n\n3\nE0\n25/08/2018\nArsenal\nWest Ham\n3\n1\nH\n1\n1\nD\nG Scott\n17\n13\n10\n5\n16\n13\n10\n2\n1\n3\n0\n0\n\n\n4\nE0\n2/9/18\nCardiff\nArsenal\n2\n3\nA\n1\n1\nD\nA Taylor\n14\n17\n3\n11\n12\n14\n3\n9\n3\n4\n0\n0\n\n\n5\nE0\n15/09/2018\nNewcastle\nArsenal\n1\n2\nA\n0\n0\nD\nL Probert\n4\n12\n2\n2\n13\n11\n10\n4\n0\n0\n0\n0\n\n\n6\nE0\n23/09/2018\nArsenal\nEverton\n2\n0\nH\n0\n0\nD\nJ Moss\n9\n9\n5\n6\n17\n12\n5\n9\n2\n1\n0\n0\n\n\n7\nE0\n29/09/2018\nArsenal\nWatford\n2\n0\nH\n0\n0\nD\nA Taylor\n9\n13\n2\n4\n11\n17\n6\n6\n2\n2\n0\n0\n\n\n8\nE0\n7/10/18\nFulham\nArsenal\n1\n5\nA\n1\n1\nD\nP Tierney\n21\n9\n4\n7\n11\n12\n4\n2\n2\n0\n0\n0\n\n\n9\nE0\n22/10/2018\nArsenal\nLeicester\n3\n1\nH\n1\n1\nD\nC Kavanagh\n19\n8\n6\n2\n10\n10\n6\n4\n2\n2\n0\n0\n\n\n10\nE0\n28/10/2018\nCrystal Palace\nArsenal\n2\n2\nD\n1\n0\nH\nM Atkinson\n16\n7\n3\n2\n10\n16\n6\n4\n1\n2\n0\n0\n\n\n11\nE0\n3/11/18\nArsenal\nLiverpool\n1\n1\nD\n0\n0\nD\nA Marriner\n12\n13\n4\n4\n7\n7\n5\n8\n1\n1\n0\n0\n\n\n12\nE0\n11/11/18\nArsenal\nWolves\n1\n1\nD\n0\n1\nA\nS Attwell\n10\n12\n3\n5\n9\n16\n11\n2\n2\n2\n0\n0\n\n\n13\nE0\n25/11/2018\nBournemouth\nArsenal\n1\n2\nA\n1\n1\nD\nC Pawson\n11\n20\n5\n4\n6\n9\n5\n8\n2\n1\n0\n0\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n27\nE0\n24/02/2019\nArsenal\nSouthampton\n2\n0\nH\n2\n0\nH\nG Scott\n12\n10\n4\n4\n7\n14\n6\n4\n0\n0\n0\n0\n\n\n28\nE0\n27/02/2019\nArsenal\nBournemouth\n5\n1\nH\n2\n1\nH\nC Kavanagh\n16\n13\n6\n5\n11\n9\n9\n4\n2\n2\n0\n0\n\n\n29\nE0\n2/3/19\nTottenham\nArsenal\n1\n1\nD\n0\n1\nA\nA Taylor\n10\n9\n3\n4\n15\n14\n3\n4\n3\n2\n0\n1\n\n\n30\nE0\n10/3/19\nArsenal\nMan United\n2\n0\nH\n1\n0\nH\nJ Moss\n14\n14\n3\n4\n12\n18\n5\n2\n2\n2\n0\n0\n\n\n31\nE0\n1/4/19\nArsenal\nNewcastle\n2\n0\nH\n1\n0\nH\nA Taylor\n7\n3\n4\n1\n11\n10\n6\n2\n2\n0\n0\n0\n\n\n32\nE0\n7/4/19\nEverton\nArsenal\n1\n0\nH\n1\n0\nH\nK Friend\n23\n7\n6\n2\n8\n9\n9\n6\n1\n4\n0\n0\n\n\n33\nE0\n15/04/2019\nWatford\nArsenal\n0\n1\nA\n0\n1\nA\nC Pawson\n11\n19\n3\n6\n12\n8\n6\n4\n2\n0\n1\n0\n\n\n34\nE0\n21/04/2019\nArsenal\nCrystal Palace\n2\n3\nA\n0\n1\nA\nJ Moss\n12\n16\n5\n7\n15\n12\n8\n3\n4\n1\n0\n0\n\n\n35\nE0\n24/04/2019\nWolves\nArsenal\n3\n1\nH\n3\n0\nH\nS Attwell\n11\n11\n3\n1\n12\n9\n5\n5\n2\n3\n0\n0\n\n\n36\nE0\n28/04/2019\nLeicester\nArsenal\n3\n0\nH\n0\n0\nD\nM Oliver\n24\n6\n12\n1\n13\n13\n8\n6\n3\n1\n0\n1\n\n\n37\nE0\n5/5/19\nArsenal\nBrighton\n1\n1\nD\n1\n0\nH\nA Taylor\n20\n11\n8\n5\n9\n14\n16\n3\n5\n2\n0\n0\n\n\n38\nE0\n12/5/19\nBurnley\nArsenal\n1\n3\nA\n0\n0\nD\nM Dean\n14\n17\n5\n6\n11\n3\n4\n5\n5\n1\n0\n0\n\n\n\n\n\n\n在主场上半场领先并且全场获胜的比赛数\n\nh_a_home=@chain half_full_relationship begin\n   @filter(hometeam==\"Arsenal\")\n   @filter(htr==\"H\"&&ftr==\"H\")\n   @summarize(n=nrow())\nend\n\n1×1 DataFrame\n\n\n\nRow\nn\n\n\n\nInt64\n\n\n\n\n1\n7\n\n\n\n\n\n\n在客场上半场领先并且全场获胜的比赛数\n\nh_a_away=@chain half_full_relationship begin\n   @filter(awayteam==\"Arsenal\")\n   @filter(htr==\"A\"&&ftr==\"A\")\n   @summarize(n=nrow())\nend\n\n1×1 DataFrame\n\n\n\nRow\nn\n\n\n\nInt64\n\n\n\n\n1\n2\n\n\n\n\n\n\n在主场上半场落后,最终获得全场比赛数\n\nquestion3=@chain half_full_relationship begin\n   @filter(hometeam==\"Arsenal\")\n   @filter(htr==\"H\"&&ftr==\"A\")\n   @summarize(n=nrow())\nend\n\n1×1 DataFrame\n\n\n\nRow\nn\n\n\n\nInt64\n\n\n\n\n1\n0"
  },
  {
    "objectID": "posts/data-vis/index2.html#每个裁判出示的红牌和黄牌数量",
    "href": "posts/data-vis/index2.html#每个裁判出示的红牌和黄牌数量",
    "title": "2018-19 English Premier League: Machine Learning",
    "section": "6 每个裁判出示的红牌和黄牌数量",
    "text": "6 每个裁判出示的红牌和黄牌数量\n\ndf6=@chain df begin\n  @group_by(referee)\n  @summarize(yellow_card=sum(hy)+sum(ay),red_card=sum(hr)+sum(ar))\n  @ungroup\nend\n\n18×3 DataFrame\n\n\n\nRow\nreferee\nyellow_card\nred_card\n\n\n\nString15\nInt64\nInt64\n\n\n\n\n1\nA Marriner\n73\n3\n\n\n2\nK Friend\n92\n3\n\n\n3\nM Dean\n127\n10\n\n\n4\nC Kavanagh\n74\n2\n\n\n5\nM Atkinson\n91\n1\n\n\n6\nJ Moss\n93\n5\n\n\n7\nC Pawson\n92\n7\n\n\n8\nM Oliver\n83\n7\n\n\n9\nA Taylor\n102\n1\n\n\n10\nG Scott\n38\n1\n\n\n11\nL Mason\n63\n1\n\n\n12\nS Attwell\n63\n1\n\n\n13\nP Tierney\n82\n1\n\n\n14\nL Probert\n46\n4\n\n\n15\nD Coote\n35\n0\n\n\n16\nR East\n44\n0\n\n\n17\nS Hooper\n20\n0\n\n\n18\nA Madley\n2\n0\n\n\n\n\n\n\n\nlet \n    row,col=size(df6)\n    cats = @pipe df6 |&gt; select(_, Not(:referee)) |&gt; names\n    res6 = @pipe df6 |&gt; select(_, Not(:referee)) |&gt; Matrix |&gt; permutedims |&gt; reshape(_, (36, 1)) |&gt; _[:, 1]\n    referee_name = df6.referee\n    grp = repeat(1:col-1, row)\n    grp_x = repeat(1:row, inner=col-1)\n    colors = [:lightyellow,:red]\n\n    function plot_platform_dodge()\n        fig = Figure(resolution=(1200, 600))\n        ax = Axis(fig[1, 1], title=\"yellow card and red card  by referee\", xticklabelrotation=pi /8)\n        ax.xticks = (1:row, referee_name)\n        barplot!(ax, grp_x, res6; dodge=grp, color=colors[grp], strokecolor=:black, strokewidth=1, bar_labels=:y, label_rotation=1 / 2 * pi)\n        labels = [\"$i\" for i in cats]\n        elements = [PolyElement(polycolor=colors[i]) for (i, c) in enumerate(cats)]\n        Legend(fig[1, 2], elements, labels, \"cards\", orientation=:vertical, tellwidth=true, tellheight=false)\n        fig\n    end\n\n   plot_platform_dodge()\nend"
  },
  {
    "objectID": "posts/data-vis/index2.html#哪只球队攻破阿森纳球门最多",
    "href": "posts/data-vis/index2.html#哪只球队攻破阿森纳球门最多",
    "title": "2018-19 English Premier League: Machine Learning",
    "section": "7. 哪只球队攻破阿森纳球门最多",
    "text": "7. 哪只球队攻破阿森纳球门最多\n客队在 Emirates Stadium 的进球数统计\n\nguest_goals=@chain df begin \n  @filter(hometeam==\"Arsenal\")\n  @group_by(awayteam)\n  @summarize(guest_goals=sum(ftag))\nend\n\n19×2 DataFrame\n\n\n\nRow\nawayteam\nguest_goals\n\n\n\nString15\nInt64\n\n\n\n\n1\nMan City\n2\n\n\n2\nWest Ham\n1\n\n\n3\nEverton\n0\n\n\n4\nWatford\n0\n\n\n5\nLeicester\n1\n\n\n6\nLiverpool\n1\n\n\n7\nWolves\n1\n\n\n8\nTottenham\n2\n\n\n9\nHuddersfield\n0\n\n\n10\nBurnley\n1\n\n\n11\nFulham\n1\n\n\n12\nChelsea\n0\n\n\n13\nCardiff\n1\n\n\n14\nSouthampton\n0\n\n\n15\nBournemouth\n1\n\n\n16\nMan United\n0\n\n\n17\nNewcastle\n0\n\n\n18\nCrystal Palace\n3\n\n\n19\nBrighton\n1\n\n\n\n\n\n\n\nfunction plot_bar(df::AbstractDataFrame)\n  row, col=size(df)\n  cats=df.awayteam\n  fig=Figure(resolution=(800,300))\n  ax=Axis(fig[1,1]; xticklabelrotation=pi /8)\n  ax.xlabel=\"guestteam\"\n  ax.ylabel=\"goal\"\n  ax.xticks=(1:row,cats)\n  barplot!(ax,1:row,df.guest_goals)\n  fig\nend\nplot_bar(guest_goals)\n\n\n\n\n\n\n\n\n其他球队主场对阵Arsenal 时的进球数\n\nhome_goals_vs_arsenal=@chain df begin \n    @filter(awayteam==\"Arsenal\")\n    @group_by(hometeam)\n    @summarize(home_goals=sum(fthg))\nend\nfunction plot_bar2(df::AbstractDataFrame)\n  row, col=size(df)\n  cats=df.hometeam\n  fig=Figure(resolution=(800,300))\n  ax=Axis(fig[1,1]; xticklabelrotation=pi /8)\n  ax.xlabel=\"hometeam\"\n  ax.ylabel=\"goals\"\n  ax.xticks=(1:row,cats)\n  barplot!(ax,1:row,df.home_goals)\n  fig\nend\nplot_bar2(home_goals_vs_arsenal)\n\n\n\n\n\n\n\n\n\n\nfunction plot_refree(df::AbstractDataFrame)\n    axis = (width = 225, height = 225)\n    referee_frequency = data(df) * frequency() * mapping(:refree)\n    draw(referee_frequency; axis = axis)\nend\n\nplot_refree (generic function with 1 method)\n\n\n\ndf7=select(df,[:referee,:hy,:ay,:hr,:ar])\n# longer_refree=@pivot_longer(df, yellow_card:red_card)\n# refree_frequency =data(longer_refree) * frequency() * mapping(:value,color=:referee)\n# let\n#  set_aog_theme!()\n#  axis = (width = 225, height = 225)\n#  draw(refree_frequency; axis = axis)\n# end\n\n380×5 DataFrame355 rows omitted\n\n\n\nRow\nreferee\nhy\nay\nhr\nar\n\n\n\nString15\nInt64\nInt64\nInt64\nInt64\n\n\n\n\n1\nA Marriner\n2\n1\n0\n0\n\n\n2\nK Friend\n1\n1\n0\n0\n\n\n3\nM Dean\n1\n2\n0\n0\n\n\n4\nC Kavanagh\n2\n1\n0\n0\n\n\n5\nM Atkinson\n2\n2\n0\n0\n\n\n6\nJ Moss\n2\n2\n0\n0\n\n\n7\nC Pawson\n0\n1\n0\n1\n\n\n8\nM Oliver\n2\n2\n0\n0\n\n\n9\nA Taylor\n1\n2\n0\n0\n\n\n10\nG Scott\n0\n1\n0\n0\n\n\n11\nC Pawson\n2\n2\n0\n1\n\n\n12\nM Atkinson\n0\n2\n0\n0\n\n\n13\nL Mason\n0\n5\n0\n0\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n369\nL Mason\n1\n1\n0\n0\n\n\n370\nM Dean\n3\n2\n0\n0\n\n\n371\nM Oliver\n0\n0\n0\n0\n\n\n372\nM Dean\n5\n1\n0\n0\n\n\n373\nR East\n3\n0\n0\n0\n\n\n374\nK Friend\n1\n0\n0\n0\n\n\n375\nA Taylor\n0\n1\n0\n0\n\n\n376\nM Atkinson\n0\n2\n0\n0\n\n\n377\nJ Moss\n3\n3\n0\n0\n\n\n378\nL Probert\n0\n1\n0\n0\n\n\n379\nA Marriner\n0\n2\n0\n0\n\n\n380\nC Kavanagh\n1\n0\n1\n0"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html",
    "href": "posts/data-vis/hacker-women-in-tech.html",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "",
    "text": "ref\n\n\n\n\nref :Hacker Women in Tech - HackerRank Analysis\ndataset:HackerRank Developer Survey 2018"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#data-preprocessing",
    "href": "posts/data-vis/hacker-women-in-tech.html#data-preprocessing",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "Data Preprocessing",
    "text": "Data Preprocessing"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#load-package",
    "href": "posts/data-vis/hacker-women-in-tech.html#load-package",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "1. load package",
    "text": "1. load package\n\ninclude(\"../utils.jl\")   # import load_csv method\n\n[ Info: loading success!"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#load-data",
    "href": "posts/data-vis/hacker-women-in-tech.html#load-data",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "2. load data",
    "text": "2. load data\n\ndf =load_csv(\"HackerRank-Developer-Survey-2018-Values\",false)\n@pipe names(df)|&gt;lowercase.(_)|&gt;rename!(df,_);"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#peek-data",
    "href": "posts/data-vis/hacker-women-in-tech.html#peek-data",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "3. peek data",
    "text": "3. peek data\n\n@chain df begin\n  @slice(1:5)\nend\n\n5×251 DataFrame151 columns omitted\n\n\n\nRow\nrespondentid\nstartdate\nenddate\ncountrynumeric2\nq1agebegincoding\nq2age\nq3gender\nq4education\nq0004_other\nq5degreefocus\nq0005_other\nq6learncodeuni\nq6learncodeselftaught\nq6learncodeacceltrain\nq6learncodedontknowhowtoyet\nq6learncodeother\nq0006_other\nq7level1\nq8joblevel\nq0008_other\nq8student\nq9currentrole\nq0009_other\nq10industry\nq0010_other\nq12jobcritpreftechstack\nq12jobcritcompmission\nq12jobcritcompculture\nq12jobcritworklifebal\nq12jobcritcompensation\nq12jobcritproximity\nq12jobcritperks\nq12jobcritsmartpeopleteam\nq12jobcritimpactwithproduct\nq12jobcritinterestproblems\nq12jobcritfundingandvaluation\nq12jobcritstability\nq12jobcritprofgrowth\nq12jobcritother\nq0012_other\nq13empmeaswhiteboard\nq13empmeashackerrank\nq13empmeasothercodingchallenge\nq13empmeastechphoneint\nq13empmeastakehomeproject\nq13empmeasresume\nq13empmeaspastwork\nq13empmeasother\nq0013_other\nq14goodreflecabilities\nq15level2\nq16hiringmanager\nq17hirchainterviews\nq17hirchahardassessskills\nq17hirchanotenoughtalent\nq17hirchanodiverscandidates\nq17hirchacompfromcompanies\nq17hirchajobdescript\nq17hirchaother\nq0017_other\nq18numdevelophirewithinnextyear\nq19taltoolresumescreen\nq19taltoolreferral\nq19taltoolhackerrank\nq19taltoolotherprobsolv\nq19taltoolperstest\nq19taltoolremoteorliveinttool\nq19taltooloutsourcehumintpanel\nq19taltoolother\nq0019_other\nq20candyearexp\nq20candcompsciencedegree\nq20candcodingbootcamp\nq20candskillcert\nq20candhackerrankactivity\nq20candothercodingcommact\nq20candgithubpersproj\nq20candopensourcecontrib\nq20candhackathonpart\nq20candprevworkexp\nq20candprestigedegree\nq20candlinkinskills\nq20candgithubpersproj2\nq20other\nq0020_other\nq21corecompprobsolv\nq21corecompproglang\nq21corecompframeworkprof\nq21corecompdebugging\nq21corecompcodebasenav\nq21corecompperfopt\nq21corecompcodereview\nq21corecompdatabasedesign\nq21corecompsysdesign\nq21corecomptesting\nq22langprofagnostic\nq22langprofc\nq22langprofcplusplus\nq22langprofjava\nq22langprofpython\n⋯\n\n\n\nInt64\nString15\nString15\nString31?\nString31\nString31\nString15\nString\nString?\nString?\nString?\nString31?\nString?\nString?\nString31?\nString31?\nString?\nString7\nString31?\nString?\nString15?\nString31?\nString?\nString31?\nString?\nString31?\nString15?\nString15?\nString31?\nString15?\nString31?\nString7?\nString31?\nString31?\nString31?\nString31?\nString31?\nString?\nString31?\nString?\nString31?\nString31?\nString?\nString31?\nString31?\nString7?\nString15?\nString31?\nString?\nString15\nString\nString3\nString31?\nString?\nString31?\nString31?\nString?\nString31?\nString31?\nString?\nString15\nString31?\nString15?\nString31?\nString?\nString31?\nString31?\nString?\nString31?\nString?\nString31?\nString?\nString31?\nString31?\nString31?\nString31?\nString7?\nString31?\nString31?\nString31?\nString31?\nString31?\nString31?\nString31?\nString?\nString15?\nString?\nString31?\nString15?\nString31?\nString31?\nString31?\nString15?\nString15?\nString7?\nString31?\nString7?\nString7?\nString7?\nString7?\n⋯\n\n\n\n\n1\n6464453728\n10/19/17 11:51\n10/20/17 12:05\nSouth Korea\n16 - 20 years old\n18 - 24 years old\nFemale\nSome college\nmissing\nComputer Science\nstatistics, computer science\nSchool or university\nSelf-taught (i.e. books, online)\nmissing\nmissing\nmissing\nmissing\nC\nStudent\nmissing\nStudents\nStudent\nmissing\nmissing\nstudent\nmissing\nmissing\nmissing\nGood work/life balance\nCompensation\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nProfessional growth and learning\nmissing\nmissing\nWhiteboard Interview\nmissing\nmissing\nmissing\nmissing\nResume\nmissing\nmissing\nmissing\nAcceptable\nprints \"Hello, World!\" n times\nNo\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\nmissing\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\nmissing\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\nmissing\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n⋯\n\n\n2\n6478031510\n10/26/17 6:18\n10/26/17 7:49\nUkraine\n16 - 20 years old\n25 - 34 years old\nMale\nPost graduate degree (Masters, PhD)\nmissing\nOther STEM (science, technology, engineering, math)\nmissing\nSchool or university\nSelf-taught (i.e. books, online)\nmissing\nmissing\nmissing\nmissing\nC\nmissing\nTest Automation Lead\nmissing\nSoftware Test Engineer\nmissing\nFinancial Services\nmissing\nPreferred tech stack\nCompany mission\nCompany culture\nGood work/life balance\nCompensation\nmissing\nmissing\nSmart people / team\nmissing\nInteresting problems to solve\nmissing\nmissing\nProfessional growth and learning\n#NULL!\nmissing\nmissing\nmissing\nmissing\nTechnical Phone Interview\nTake Home Project\nResume\nmissing\nmissing\nmissing\nGood\nprints \"Hello, World!\" n times\nYes\nmissing\nmissing\nNot enough talent\nNot enough diverse candidates\nmissing\nmissing\nmissing\nmissing\n0 - 10\nResume screening\nReferrals\nmissing\nOther problem solving, logic challenges\nmissing\nRemote, live interviewing tool\nmissing\nmissing\nmissing\nmissing\nmissing\nCoding bootcamp education\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nPrevious work experience\nmissing\nmissing\nGithub or personal projects\nmissing\nmissing\nProblem Solving\nProgramming Language Proficiency\nmissing\nmissing\nmissing\nmissing\nCode Review Capability\nmissing\nmissing\nTesting\nmissing\nmissing\nmissing\nJava\nmissing\n⋯\n\n\n3\n6464392829\n10/19/17 10:44\n10/19/17 10:56\nMalaysia\n11 - 15 years old\n12 - 18 years old\nFemale\nSome college\nmissing\nOther STEM (science, technology, engineering, math)\nmissing\nSchool or university\nmissing\nAccelerated training (i.e. bootcamp)\nmissing\nmissing\nmissing\nC\nStudent\nmissing\nStudents\nStudent\nmissing\nEducation\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nInteresting problems to solve\nmissing\nmissing\nProfessional growth and learning\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nOther (please specify)\nJust a student didn't have job yet\nAcceptable\nprints \"Hello, World!\" n times\nNo\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\nmissing\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\nmissing\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\nmissing\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n⋯\n\n\n4\n6481629912\n10/27/17 1:51\n10/27/17 2:05\nCuraçao\n11 - 15 years old\n12 - 18 years old\nMale\nCollege graduate\nmissing\nComputer Science\nmissing\nmissing\nSelf-taught (i.e. books, online)\nmissing\nmissing\nmissing\nmissing\nC\nStudent\nmissing\nStudents\nStudent\nmissing\nmissing\nstudent\nmissing\nmissing\nCompany culture\nmissing\nmissing\nProximity to where you live\nmissing\nmissing\nmissing\nInteresting problems to solve\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nOther (please specify)\nn.a.\nAcceptable\nprints \"Hello, World!\" n times\nNo\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\nmissing\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\nmissing\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\nmissing\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n#NULL!\n⋯\n\n\n5\n6488385057\n10/31/17 11:46\n10/31/17 11:59\nmissing\n16 - 20 years old\n25 - 34 years old\nFemale\nCollege graduate\nmissing\nmissing\nFine Arts & Computer Science\nSchool or university\nSelf-taught (i.e. books, online)\nmissing\nmissing\nmissing\nmissing\nC\nSenior developer\nmissing\nmissing\nFront-end Developer\nmissing\nTechnology\nmissing\nmissing\nCompany mission\nmissing\nGood work/life balance\nmissing\nmissing\nmissing\nSmart people / team\nmissing\nmissing\nmissing\nmissing\nmissing\n#NULL!\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nOther (please specify)\nIntern work for a different department in same company\nGood\nprints \"Hello, World!\" n times\nYes\nmissing\nmissing\nNot enough talent\nmissing\nCompetition from other companies\nCalibrating the job description\nmissing\nmissing\n0 - 10\nResume screening\nReferrals\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nYears of experience\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nPrevious work experience\nmissing\nmissing\nGithub or personal projects\nmissing\nmissing\nProblem Solving\nProgramming Language Proficiency\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\nmissing\n⋯"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#describe-data",
    "href": "posts/data-vis/hacker-women-in-tech.html#describe-data",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "4. describe data",
    "text": "4. describe data\n\n @pipe describe(df)|&gt;select(_,[:variable,:nmissing,:eltype])|&gt;_[86:95,:]\n\n10×3 DataFrame\n\n\n\nRow\nvariable\nnmissing\neltype\n\n\n\nSymbol\nInt64\nType\n\n\n\n\n1\nq21corecompprobsolv\n399\nUnion{Missing, String15}\n\n\n2\nq21corecompproglang\n3398\nUnion{Missing, String}\n\n\n3\nq21corecompframeworkprof\n5946\nUnion{Missing, String31}\n\n\n4\nq21corecompdebugging\n4154\nUnion{Missing, String15}\n\n\n5\nq21corecompcodebasenav\n6657\nUnion{Missing, String31}\n\n\n6\nq21corecompperfopt\n5053\nUnion{Missing, String31}\n\n\n7\nq21corecompcodereview\n5034\nUnion{Missing, String31}\n\n\n8\nq21corecompdatabasedesign\n6199\nUnion{Missing, String15}\n\n\n9\nq21corecompsysdesign\n4679\nUnion{Missing, String15}\n\n\n10\nq21corecomptesting\n5103\nUnion{Missing, String7}"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#shape-of-dataset",
    "href": "posts/data-vis/hacker-women-in-tech.html#shape-of-dataset",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "5. shape of dataset",
    "text": "5. shape of dataset\n\n  size(df)\n\n(25090, 251)\n\n\n\n\n\n\n\n\npart two\n\n\n\nData Anslysis"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#da.1-minority-check",
    "href": "posts/data-vis/hacker-women-in-tech.html#da.1-minority-check",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "da.1 Minority Check",
    "text": "da.1 Minority Check\n\ncount of female-male programmers\n\ndf=clean_df=@chain df begin\n  @filter(q3gender in [\"Male\",\"Female\"])\nend\n\nlet\nset_aog_theme!()\naxis = (width = 225, height = 225)\ngender_frequency = data(clean_df) * frequency() * mapping(:q3gender,color = :q3gender)\ndraw(gender_frequency; axis = axis)\nend\n\n\n\n\n\n\n\n\n\n\nprecent of female-male programmers\n\npercent_data=@chain clean_df begin\n   @group_by(q3gender)\n   @summarize(n=nrow())\n   @mutate(percent=round(n/sum(n)*100,digits=1))\n\nend\n\n2×3 DataFrame\n\n\n\nRow\nq3gender\nn\npercent\n\n\n\nString15\nInt64\nFloat64\n\n\n\n\n1\nFemale\n4122\n16.6\n\n\n2\nMale\n20774\n83.4\n\n\n\n\n\n\n\nlet\nset_aog_theme!()\naxis = (width = 225, height = 400,title=\"Minority Check\")\ngender_frequency = data(percent_data)* mapping(:q3gender,:percent,color = :q3gender)*visual(BarPlot,bar_labels = :y)\ndraw(gender_frequency; axis = axis)\nend"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#da.2-male-vs-female-age-of-beginning-to-code",
    "href": "posts/data-vis/hacker-women-in-tech.html#da.2-male-vs-female-age-of-beginning-to-code",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "da.2 Male vs Female Age of Beginning to code",
    "text": "da.2 Male vs Female Age of Beginning to code\n\nhandle data\n\n  begin_programm_percent=@chain df begin \n   @filter(q1agebegincoding !=\"#NULL!\")\n   @group_by(q3gender, q1agebegincoding)\n   @summarize(n=nrow())\n   @ungroup\n   @group_by(q3gender)\n   @mutate(percent=round(n/sum(n)*100,digits=1))\n   @ungroup\n   end\n\n18×4 DataFrame\n\n\n\nRow\nq3gender\nq1agebegincoding\nn\npercent\n\n\n\nString15\nString31\nInt64\nFloat64\n\n\n\n\n1\nFemale\n16 - 20 years old\n2657\n64.5\n\n\n2\nFemale\n11 - 15 years old\n569\n13.8\n\n\n3\nFemale\n26 - 30 years old\n130\n3.2\n\n\n4\nFemale\n21 - 25 years old\n609\n14.8\n\n\n5\nFemale\n5 - 10 years old\n71\n1.7\n\n\n6\nFemale\n36 - 40 years old\n19\n0.5\n\n\n7\nFemale\n31 - 35 years old\n48\n1.2\n\n\n8\nFemale\n41 - 50 years old\n12\n0.3\n\n\n9\nFemale\n50+ years or older\n3\n0.1\n\n\n10\nMale\n16 - 20 years old\n11543\n55.6\n\n\n11\nMale\n11 - 15 years old\n4651\n22.4\n\n\n12\nMale\n41 - 50 years old\n22\n0.1\n\n\n13\nMale\n5 - 10 years old\n848\n4.1\n\n\n14\nMale\n21 - 25 years old\n2998\n14.4\n\n\n15\nMale\n26 - 30 years old\n506\n2.4\n\n\n16\nMale\n36 - 40 years old\n47\n0.2\n\n\n17\nMale\n31 - 35 years old\n144\n0.7\n\n\n18\nMale\n50+ years or older\n3\n0.0\n\n\n\n\n\n\n\n\nby count\n\nlet\nset_aog_theme!()\naxis = (width = 600, height =300,xticklabelrotation = pi/8)\nplt=data(begin_programm_percent)*mapping(:q1agebegincoding,:n,color = :q3gender, dodge = :q3gender)*visual(BarPlot)\ndraw(plt; axis = axis)\nend\n\n\n\n\n\n\n\n\n\n\nby percent\n\nlet\nset_aog_theme!()\naxis = (width = 600, height =300,xticklabelrotation = pi/8)\nplt=data(begin_programm_percent)*mapping(:q1agebegincoding,:percent,color = :q3gender, dodge = :q3gender)*visual(BarPlot;bar_labels = :y)\ndraw(plt; axis = axis)\nend\n\n\n\n\n\n\n\n\n\n\nexplain\nfrom first dodge we can see at the age of bracket of 11 - 15yrs, 22.4% of men started coding, only 13.8% of women have done so."
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#da.3-does-starting-age-of-coding-help-in-continuing-coding-to-college",
    "href": "posts/data-vis/hacker-women-in-tech.html#da.3-does-starting-age-of-coding-help-in-continuing-coding-to-college",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "da.3 Does starting age of coding help in continuing coding to College?",
    "text": "da.3 Does starting age of coding help in continuing coding to College?\n\n3.1 data processing\n\n college_cs_data=@chain df begin \n   #@filter(q5degreefocus !=\"#NULL!\")\n   @group_by(q3gender, q5degreefocus)\n   @summarize(n=nrow())\n   @ungroup\n   @group_by(q3gender)\n   @mutate(percent=round(n/sum(n)*100,digits=1))\n   @ungroup\n   \n   end\n\n8×4 DataFrame\n\n\n\nRow\nq3gender\nq5degreefocus\nn\npercent\n\n\n\nString15\nString?\nInt64\nFloat64\n\n\n\n\n1\nFemale\nComputer Science\n2896\n70.3\n\n\n2\nFemale\nOther STEM (science, technology, engineering, math)\n962\n23.3\n\n\n3\nFemale\nmissing\n240\n5.8\n\n\n4\nFemale\n#NULL!\n24\n0.6\n\n\n5\nMale\nOther STEM (science, technology, engineering, math)\n4787\n23.0\n\n\n6\nMale\nComputer Science\n14964\n72.0\n\n\n7\nMale\nmissing\n901\n4.3\n\n\n8\nMale\n#NULL!\n122\n0.6\n\n\n\n\n\n\n\n\n3.2 by counting\n\n# let\n# set_aog_theme!()\n# axis = (width = 600, height = 300,xticklabelrotation = pi/8)\n# plt=data(college_cs_data)*frequency()*mapping(:q5degreefocus,color = :q3gender, dodge = :q3gender)\n# draw(plt; axis = axis)\n# end\n\nlet\nset_aog_theme!()\naxis = (width = 600, height =300,xticklabelrotation = pi/8)\nplt=data(college_cs_data)*mapping(:q5degreefocus,:n,color = :q3gender, dodge = :q3gender)*visual(BarPlot)\ndraw(plt; axis = axis)\nend\n\n\n\n\n\n\n\n\n\n\n3.3 by perecnt\n\nlet\nset_aog_theme!()\naxis = (width = 600, height =300,xticklabelrotation = pi/8)\nplt=data(college_cs_data)*mapping(:q5degreefocus,:percent,color = :q3gender, dodge = :q3gender)*visual(BarPlot;bar_labels = :y)\ndraw(plt; axis = axis)\nend"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#da.4-top-country",
    "href": "posts/data-vis/hacker-women-in-tech.html#da.4-top-country",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "da.4 top country",
    "text": "da.4 top country"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#da.5-country-order-by-female-to-male-ratio",
    "href": "posts/data-vis/hacker-women-in-tech.html#da.5-country-order-by-female-to-male-ratio",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "da.5 country order by female-to male ratio",
    "text": "da.5 country order by female-to male ratio\n\n5.1 data processing\n\ndf5=@chain clean_df begin\n    @group_by(countrynumeric2)\n    @mutate(count=nrow())\n    @filter(count&gt;50)\n    @ungroup\n    @group_by(countrynumeric2,q3gender)\n    @summarize(count=nrow())\n    @ungroup\n    @pivot_wider(_, names_from = q3gender, values_from = count)\n    @mutate(f2m=round(Female/Male,digits=2))\n    @rename(country=countrynumeric2)\n    @arrange(desc(f2m))\nend\n\n46×4 DataFrame21 rows omitted\n\n\n\nRow\ncountry\nFemale\nMale\nf2m\n\n\n\nString31?\nInt64?\nInt64?\nFloat64\n\n\n\n\n1\nSri Lanka\n36\n109\n0.33\n\n\n2\nMalaysia\n18\n66\n0.27\n\n\n3\nUnited States\n1000\n3889\n0.26\n\n\n4\nPhilippines\n19\n73\n0.26\n\n\n5\nBulgaria\n18\n73\n0.25\n\n\n6\nRomania\n33\n139\n0.24\n\n\n7\nCanada\n114\n525\n0.22\n\n\n8\nSouth Africa\n17\n79\n0.22\n\n\n9\nIndia\n1453\n6601\n0.22\n\n\n10\nIndonesia\n65\n319\n0.2\n\n\n11\nAustralia\n26\n132\n0.2\n\n\n12\nmissing\n626\n3316\n0.19\n\n\n13\nEgypt\n19\n99\n0.19\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n35\nHungary\n11\n105\n0.1\n\n\n36\nNetherlands\n11\n117\n0.09\n\n\n37\nCzech Republic\n5\n53\n0.09\n\n\n38\nGreece\n6\n67\n0.09\n\n\n39\nFrance\n12\n136\n0.09\n\n\n40\nMexico\n13\n164\n0.08\n\n\n41\nRussian Federation\n27\n347\n0.08\n\n\n42\nArgentina\n7\n99\n0.07\n\n\n43\nColombia\n4\n77\n0.05\n\n\n44\nBelarus\n3\n55\n0.05\n\n\n45\nChile\n3\n59\n0.05\n\n\n46\nVietnam\n4\n104\n0.04\n\n\n\n\n\n\n\n\n5.2 plot\n\nlet\n    set_aog_theme!()\n    axis = (width = 1400, height =500,xticklabelrotation = pi/3)\n    plt=data(df5)*mapping(:country,:f2m,color = :country)*visual(BarPlot)\n    draw(plt; axis = axis)\nend"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#da.6-whats-that-one-more-other-thing-in-job-criteria",
    "href": "posts/data-vis/hacker-women-in-tech.html#da.6-whats-that-one-more-other-thing-in-job-criteria",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "da.6 What’s that One More other thing in Job Criteria?",
    "text": "da.6 What’s that One More other thing in Job Criteria?\n\nwoman_words=@chain df begin\n  @filter(q3gender==\"Female\")\n  @filter(q0012_other  != \"\")\n  @select(q0012_other)\nend\n\n53×1 DataFrame28 rows omitted\n\n\n\nRow\nq0012_other\n\n\n\nString?\n\n\n\n\n1\ngood people\n\n\n2\nTeams that work well together.\n\n\n3\nRemote Work\n\n\n4\nThey will hire me\n\n\n5\nBenefits\n\n\n6\nStudent\n\n\n7\nKeep up with what happen at universe (ai, machine learning, algorithms, big data) by seeing the big picture and learn to colaborate\n\n\n8\nGender equality (or working to get there)\n\n\n9\nLove the product, great coworkers I get along with\n\n\n10\nDedication to a diverse and inclusive work environment on all levels at the company\n\n\n11\nbeing part of a team & not working in isolation, important since I'm a jr dev\n\n\n12\nFriendly work environment, no bully or harassment\n\n\n13\nPsychological safety\n\n\n⋮\n⋮\n\n\n42\nSmart people\n\n\n43\nUmemployed\n\n\n44\nNew things to learn\n\n\n45\nGood\n\n\n46\nMyou role in developing the company\n\n\n47\nI'm an undergraduate student.\n\n\n48\nNA\n\n\n49\nI am an engineering student\n\n\n50\nenvironment\n\n\n51\nRemote/Flexibility\n\n\n52\nability to travel\n\n\n53\nWork environment (remote or pairing)\n\n\n\n\n\n\n\ntext processing\n\nwords_df=text_processing(woman_words.q0012_other)\nsort_word_df=@chain words_df begin\n    @filter(freq&gt;1)\n    @arrange(desc(freq))\nend\n\n16×2 DataFrame\n\n\n\nRow\nword\nfreq\n\n\n\nString\nInt64\n\n\n\n\n1\nenvironment\n5\n\n\n2\nRemote\n3\n\n\n3\ncompany\n3\n\n\n4\nWork\n3\n\n\n5\nstudent\n2\n\n\n6\nTeam\n2\n\n\n7\nlearn\n2\n\n\n8\nverticals\n2\n\n\n9\nNA\n2\n\n\n10\nremote\n2\n\n\n11\nGood\n2\n\n\n12\nProfessional\n2\n\n\n13\nProject\n2\n\n\n14\nStudent\n2\n\n\n15\npeople\n2\n\n\n16\nAbility\n2\n\n\n\n\n\n\n\nlet\n set_aog_theme!()\n axis = (width = 600, height = 300,xticklabelrotation = pi/8)\n plt=data(sort_word_df)*mapping(:word,:freq;color=:word)* visual(BarPlot)\n draw(plt;axis = axis)\nend"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#da.7-n-gram-analysis-of-other-expectation",
    "href": "posts/data-vis/hacker-women-in-tech.html#da.7-n-gram-analysis-of-other-expectation",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "da.7 n-gram Analysis of Other Expectation",
    "text": "da.7 n-gram Analysis of Other Expectation\n\ntext processing\n\nwoman_words_0020=@chain df begin\n  @filter(q3gender==\"Female\")\n  @select(q0020_other)\n  @filter(q0020_other  != \"\")\n  \nend\nwords_df_0020=text_processing(woman_words_0020.q0020_other)\nsort_word_df_0020=@chain words_df begin\n    @filter(freq&gt;1)\n    @arrange(desc(freq))\nend\n\nlet\n set_aog_theme!()\n axis = (width = 600, height = 300,xticklabelrotation = pi/8)\n plt=data(sort_word_df_0020)*mapping(:word,:freq;color=:word)* visual(BarPlot)\n draw(plt;axis = axis)\nend"
  },
  {
    "objectID": "posts/data-vis/hacker-women-in-tech.html#da.8-expected-core-competencies",
    "href": "posts/data-vis/hacker-women-in-tech.html#da.8-expected-core-competencies",
    "title": "Hacker Women in Tech - HackerRank Analysis",
    "section": "da.8 Expected Core competencies",
    "text": "da.8 Expected Core competencies\n\n# @chain clean_df begin\n#   @filter(q3gender==\"Female\")\n#   @summarize(startswith(\"q21\")=nrow())\n# end"
  },
  {
    "objectID": "posts/mammalsleep/index.html",
    "href": "posts/mammalsleep/index.html",
    "title": "DataFramesMeta Tutorial",
    "section": "",
    "text": "Note\n\n\n\nmammal sleep tutorial\n\n\n\ninclude(\"../utils.jl\")\nusing  RCall\nusing  GLMakie,DataFrames,Pipe,PrettyTables,DataFramesMeta\nusing  StatsBase,TableTransforms,Random,TimeSeries,Dates\nRandom.seed!(34343)\n\nTaskLocalRNG()\n\n\n\n1. load data\n\n desc=Stat2Table(1431,\"mammals\",\"sleep in mammals\",[])\n msleep=@pipe load_rda(desc.name)\n show(first(msleep,10))\n\n10×11 DataFrame\n Row │ species                 body_wt   brain_wt  non_dreaming  dreaming   to ⋯\n     │ Cat…                    Float64   Float64   Float64?      Float64?   Fl ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ Africanelephant         6654.0      5712.0     missing    missing       ⋯\n   2 │ Africangiantpouchedrat     1.0         6.6           6.3        2.0\n   3 │ ArcticFox                  3.385      44.5     missing    missing   \n   4 │ Arcticgroundsquirrel       0.92        5.7     missing    missing   \n   5 │ Asianelephant           2547.0      4603.0           2.1        1.8     ⋯\n   6 │ Baboon                    10.55      179.5           9.1        0.7\n   7 │ Bigbrownbat                0.023       0.3          15.8        3.9\n   8 │ Braziliantapir           160.0       169.0           5.2        1.0\n   9 │ Cat                        3.3        25.6          10.9        3.6     ⋯\n  10 │ Chimpanzee                52.16      440.0           8.3        1.4\n                                                               6 columns omitted\n\n\n\n\n2. names\n\nshow(names(msleep))\n\n[\"species\", \"body_wt\", \"brain_wt\", \"non_dreaming\", \"dreaming\", \"total_sleep\", \"life_span\", \"gestation\", \"predation\", \"exposure\", \"danger\"]\n\n\n\n\n3. Selecting Columns Using @select\n\n@select msleep :species :total_sleep\n\n62×2 DataFrame37 rows omitted\n\n\n\nRow\nspecies\ntotal_sleep\n\n\n\nCat…\nFloat64?\n\n\n\n\n1\nAfricanelephant\n3.3\n\n\n2\nAfricangiantpouchedrat\n8.3\n\n\n3\nArcticFox\n12.5\n\n\n4\nArcticgroundsquirrel\n16.5\n\n\n5\nAsianelephant\n3.9\n\n\n6\nBaboon\n9.8\n\n\n7\nBigbrownbat\n19.7\n\n\n8\nBraziliantapir\n6.2\n\n\n9\nCat\n14.5\n\n\n10\nChimpanzee\n9.7\n\n\n11\nChinchilla\n12.5\n\n\n12\nCow\n3.9\n\n\n13\nDeserthedgehog\n10.3\n\n\n⋮\n⋮\n⋮\n\n\n51\nRockhyrax(Heterob)\n6.6\n\n\n52\nRockhyrax(Procaviahab)\n5.4\n\n\n53\nRoedeer\n2.6\n\n\n54\nSheep\n3.8\n\n\n55\nSlowloris\n11.0\n\n\n56\nStarnosedmole\n10.3\n\n\n57\nTenrec\n13.3\n\n\n58\nTreehyrax\n5.4\n\n\n59\nTreeshrew\n15.8\n\n\n60\nVervet\n10.3\n\n\n61\nWateropossum\n19.4\n\n\n62\nYellow-belliedmarmot\nmissing\n\n\n\n\n\n\n\n\n4. rsubset\n\n@rsubset msleep :total_sleep &gt; 16\n\n8×11 DataFrame\n\n\n\nRow\nspecies\nbody_wt\nbrain_wt\nnon_dreaming\ndreaming\ntotal_sleep\nlife_span\ngestation\npredation\nexposure\ndanger\n\n\n\nCat…\nFloat64\nFloat64\nFloat64?\nFloat64?\nFloat64?\nFloat64?\nFloat64?\nInt32\nInt32\nInt32\n\n\n\n\n1\nArcticgroundsquirrel\n0.92\n5.7\nmissing\nmissing\n16.5\nmissing\n25.0\n5\n2\n3\n\n\n2\nBigbrownbat\n0.023\n0.3\n15.8\n3.9\n19.7\n19.0\n35.0\n1\n1\n1\n\n\n3\nGiantarmadillo\n60.0\n81.0\n12.0\n6.1\n18.1\n7.0\nmissing\n1\n1\n1\n\n\n4\nLittlebrownbat\n0.01\n0.25\n17.9\n2.0\n19.9\n24.0\n50.0\n1\n1\n1\n\n\n5\nNAmericanopossum\n1.7\n6.3\n13.8\n5.6\n19.4\n5.0\n12.0\n2\n1\n1\n\n\n6\nNine-bandedarmadillo\n3.5\n10.8\n14.3\n3.1\n17.4\n6.5\n120.0\n2\n1\n1\n\n\n7\nOwlmonkey\n0.48\n15.5\n15.2\n1.8\n17.0\n12.0\n140.0\n2\n2\n2\n\n\n8\nWateropossum\n3.5\n3.9\n12.8\n6.6\n19.4\n3.0\n14.0\n2\n1\n1\n\n\n\n\n\n\n\n\n5. using @chain from Chain.jl\n\n@chain msleep begin\n           @select :species :total_sleep\n           @rsubset :total_sleep &gt; 16\n       end\n\n8×2 DataFrame\n\n\n\nRow\nspecies\ntotal_sleep\n\n\n\nCat…\nFloat64?\n\n\n\n\n1\nArcticgroundsquirrel\n16.5\n\n\n2\nBigbrownbat\n19.7\n\n\n3\nGiantarmadillo\n18.1\n\n\n4\nLittlebrownbat\n19.9\n\n\n5\nNAmericanopossum\n19.4\n\n\n6\nNine-bandedarmadillo\n17.4\n\n\n7\nOwlmonkey\n17.0\n\n\n8\nWateropossum\n19.4"
  }
]